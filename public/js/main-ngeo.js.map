{"version":3,"sources":["client/js/account/model/dataAccessRequestStatuses.js","client/js/account/view/createShopcartView.js","client/js/account/view/dataAccessRequestMonitoringView.js","client/js/account/view/downloadManagersMonitoringView.js","client/js/account/view/duplicateShopcartView.js","client/js/account/view/importShopcartView.js","client/js/account/view/inquiriesView.js","client/js/account/view/layerManagerView.js","client/js/account/view/renameShopcartView.js","client/js/account/view/shopcartManagerView.js","client/js/account/view/userPrefsView.js","client/js/configuration.js","client/js/dataAccess/model/dataAccessRequest.js","client/js/dataAccess/model/downloadManagers.js","client/js/dataAccess/model/simpleDataAccessRequest.js","client/js/dataAccess/model/standingOrderDataAccessRequest.js","client/js/dataAccess/view/dataAccessRequestView.js","client/js/dataAccess/widget/dataAccessWidget.js","client/js/dataAccess/widget/directDownloadWidget.js","client/js/globalEvents.js","client/js/help.js","client/js/home.js","client/js/hostedProcesses/model/hostedProcessList.js","client/js/hostedProcesses/view/hostedProcessConfigurationView.js","client/js/hostedProcesses/view/selectHostedProcessesView.js","client/js/jqm-config.js","client/js/logger.js","client/js/main.js","client/js/search/dateTimeWidget.js","client/js/search/dsa.js","client/js/search/model/dataSetPopulation.js","client/js/search/model/dataset.js","client/js/search/model/datasetAuthorizations.js","client/js/search/model/datasetSearch.js","client/js/search/model/downloadOption.js","client/js/search/model/downloadOptions.js","client/js/search/model/searchArea.js","client/js/search/model/searchCriteria.js","client/js/search/model/standingOrder.js","client/js/search/view/advancedSearchView.js","client/js/search/view/boxView.js","client/js/search/view/corrInterView.js","client/js/search/view/datasetSelectionView.js","client/js/search/view/datasetView.js","client/js/search/view/downloadOptionsView.js","client/js/search/view/gazetteerView.js","client/js/search/view/importView.js","client/js/search/view/openSearchURLView.js","client/js/search/view/polygonView.js","client/js/search/view/schedulingOptionsView.js","client/js/search/view/searchCriteriaView.js","client/js/search/view/searchView.js","client/js/search/view/spatialExtentView.js","client/js/search/view/standingOrderView.js","client/js/search/view/timeExtentView.js","client/js/searchResults/browsesManager.js","client/js/searchResults/dsa.js","client/js/searchResults/map.js","client/js/searchResults/model/featureCollection.js","client/js/searchResults/model/searchResults.js","client/js/searchResults/view/exportView.js","client/js/searchResults/view/searchResultsTableView.js","client/js/searchResults/view/searchResultsView.js","client/js/searchResults/widget/downloadOptionsWidget.js","client/js/searchResults/widget/exportWidget.js","client/js/searchResults/widget/multipleBrowseWidget.js","client/js/shopcart/dsa.js","client/js/shopcart/model/shopcart.js","client/js/shopcart/model/shopcartCollection.js","client/js/shopcart/view/shopcartExportView.js","client/js/shopcart/view/shopcartTableView.js","client/js/shopcart/view/shopcartView.js","client/js/shopcart/widget/shopcartExportWidget.js","client/js/shopcart/widget/shopcartWidget.js","client/js/ui/context-help.js","client/js/ui/dateRangeSlider.js","client/js/ui/ganttView.js","client/js/ui/menubar.js","client/js/ui/pagination.js","client/js/ui/panelManager.js","client/js/ui/sharePopup.js","client/js/ui/stackPanel.js","client/js/ui/statusPanel.js","client/js/ui/tableView.js","client/js/ui/tabs.js","client/js/ui/toolbar.js","client/js/ui/widget.js","client/js/userPrefs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApQA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxlCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAljnkBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvtIA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvhjJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxhvtDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlpvHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAthllnTA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzplrzNA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArtrtzFA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAznLA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzthvpzlilIA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAljnlGA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApnIA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjnpdvhpCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhzrtGA;AAAA","file":"../ngEO-LWS/public/js/main-ngeo.js","sourcesContent":["/**\r\n * Data Access Request Statuses model It is a singleton which :\r\n * 1-retrieves all DARs statuses.\r\n * 2-orders the DARs statuses by order download manager to insure filtering DARs by DM.\r\n * Theses functionalities are used for DAR monitoring.\r\n */\r\n\r\nvar Configuration = require('configuration');\r\nvar DownloadManagers = require('dataAccess/model/downloadManagers');\r\nvar validStatusesConfig = Configuration.localConfig.dataAccessRequestStatuses.validStatuses;\r\n\r\nvar DataAccessRequestStatuses = Backbone.Model.extend({\r\n\r\n\tdefaults: {\r\n\t\tdataAccessRequestStatuses: [],\r\n\t\tcollapseDAR: false,\r\n\t\tcollapseProducts: false\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\t\t// The base url to retrieve the DARs'statuses list or submit DAR status changes\r\n\t\tthis.url = Configuration.baseServerUrl + '/dataAccessRequestStatus';\r\n\t\tthis.listenTo(this, \"error\", this.onError);\r\n\t},\r\n\r\n\t/** Call when the model cannot be fetched from the server */\r\n\tonError: function(model, response) {\r\n\t\tif (response.status == 0) {\r\n\t\t\tlocation.reload();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Reorder all the DARs'statuses in an array of objects each object has the following properties:\r\n\t * \"downloadManagerName\" : download manager name\r\n\t * \"dlManagerId\" : download manager id\r\n\t * \"DARs\" : array of assignment data access request statuses to the DM.\r\n\t * each DAR is a json as returned by the server.\r\n\t * {\"ID\" : ID, \"type\":type, \"status\": status, \"productStatuses\" : product statuses}\r\n\t * for Standing orders the productStatuses has the value undefined.\r\n\t */\r\n\tgetOrderedStatuses: function() {\r\n\r\n\t\t// TODO : the method is only used by the DARMonitoringView. Maybe remove it ?\r\n\r\n\t\tvar dm2Dars = {};\r\n\t\tvar orderedStatuses = [];\r\n\r\n\t\tvar statuses = this.get(\"dataAccessRequestStatuses\");\r\n\t\tfor (var i = 0; i < statuses.length; i++) {\r\n\t\t\tvar status = statuses[i];\r\n\r\n\t\t\tif (!dm2Dars[status.dlManagerId]) {\r\n\t\t\t\tvar dmDars = {\r\n\t\t\t\t\tdownloadManagerName: DownloadManagers.getDownloadManagerName(status.dlManagerId),\r\n\t\t\t\t\tdlManagerId: status.dlManagerId,\r\n\t\t\t\t\tDARs: []\r\n\t\t\t\t};\r\n\t\t\t\tdm2Dars[status.dlManagerId] = dmDars;\r\n\t\t\t\torderedStatuses.push(dmDars);\r\n\t\t\t}\r\n\r\n\t\t\tdm2Dars[status.dlManagerId].DARs.push(status);\r\n\r\n\t\t}\r\n\r\n\t\treturn orderedStatuses;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Get the json object containing all the DARs relative to one download manager \r\n\t * the result is returned as an array to still be compliant with the getOrderedStatuses\r\n\t * result which is an array\r\n\t */\r\n\tgetFilterOrderedStatuses: function(dmID) {\r\n\r\n\t\tvar foundStatus = null;\r\n\r\n\t\t_.each(this.getOrderedStatuses(), function(orderedStatus) {\r\n\r\n\t\t\tif (orderedStatus.dlManagerId == dmID) {\r\n\r\n\t\t\t\tfoundStatus = orderedStatus\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar resultArray = [];\r\n\r\n\t\tresultArray.push(foundStatus);\r\n\r\n\t\treturn resultArray;\r\n\t},\r\n\r\n\t/** \r\n\t * Get a DAR status index in the model array given its id \r\n\t * used by requestChangeStatus to update the DAR status after a successful DAR\r\n\t * status change request submission\r\n\t */\r\n\tgetDARStatusIndex: function(id) {\r\n\r\n\t\tvar index = null;\r\n\t\t_.each(this.get(\"dataAccessRequestStatuses\"), function(dar, i) {\r\n\t\t\tif (dar.ID == id) {\r\n\t\t\t\tindex = i;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn index;\r\n\t},\r\n\r\n\t/** \r\n\t * Products do have statuses 0, 1, 2 or 3, however DARs can have also statuses 4 and 5\r\n\t * this method returns the friendly readable status string from local configuration if it possible\r\n\t */\r\n\tgetStatusReadableString: function(status) {\r\n\r\n\t\tif (!isNaN(parseInt(status))) {\r\n\t\t\t// Status is an integer, try to find user-friendly translation\r\n\t\t\tfor (var x in validStatusesConfig) {\r\n\t\t\t\tif (validStatusesConfig[x].value == parseInt(status)) {\r\n\t\t\t\t\treturn validStatusesConfig[x].status;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn status;\r\n\t},\r\n\r\n\t/** \r\n\t * Find the dataAccessRequestStatus json object given the DAR id (simple DAR or STO)\r\n\t */\r\n\tgetDARStatusById: function(id) {\r\n\r\n\t\tvar foundStatus = null;\r\n\r\n\t\t_.each(this.get(\"dataAccessRequestStatuses\"), function(status) {\r\n\r\n\t\t\tif (status.ID == id) {\r\n\t\t\t\tfoundStatus = status;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn foundStatus;\r\n\t},\r\n\r\n\t/**\r\n\t * Submit the change status request to the server\r\n\t */\r\n\trequestChangeStatus: function(darID, newStatus) {\r\n\r\n\t\tvar darStatus = this.getDARStatusById(darID);\r\n\r\n\t\tif (darStatus == null) { //should not happen!\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar request = {\r\n\t\t\tDataAccessRequestStatus: {\r\n\t\t\t\tID: darID,\r\n\t\t\t\ttype: darStatus.type,\r\n\t\t\t\tstatus: newStatus,\r\n\t\t\t\tdlManagerId: darStatus.dlManagerId\r\n\t\t\t}\r\n\t\t};\r\n\t\t//console.log (\"change Status request\");\r\n\t\t//console.log (request);\r\n\t\tvar self = this;\r\n\t\tvar changeStatusURL = self.url + '/' + darID;\r\n\t\t//console.log (\"changeStatusURL : \");\r\n\t\t//console.log (changeStatusURL);\r\n\r\n\t\treturn $.ajax({\r\n\t\t\turl: changeStatusURL,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdataType: 'json',\r\n\t\t\tcontentType: 'application/json',\r\n\t\t\tdata: JSON.stringify(request),\r\n\t\t\tsuccess: function(data) {\r\n\r\n\t\t\t\t// If the server sends back a message get it in order to be displayed\r\n\t\t\t\tvar message = \"\";\r\n\t\t\t\tif (data.dataAccessRequestStatus.message) {\r\n\t\t\t\t\tmessage = data.dataAccessRequestStatus.message;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.dataAccessRequestStatus.status == newStatus) {\r\n\t\t\t\t\tvar darStatus = self.get(\"dataAccessRequestStatuses\")[self.getDARStatusIndex(darID)];\r\n\t\t\t\t\tdarStatus.status = newStatus;\r\n\t\t\t\t\t// Notify that the DAR status has been successfully changed\r\n\t\t\t\t\tself.trigger('update:status', darStatus, message)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.trigger('error:statusUpdate', changeStatusURL);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\tif (jqXHR.status == 0) {\r\n\t\t\t\t\tlocation.reload();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"ERROR while updating status :\" + textStatus + ' ' + errorThrown);\r\n\t\t\t\t\t// Notify that the download manager status change has Failed\r\n\t\t\t\t\tself.trigger('error:statusUpdate', changeStatusURL);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t *\tReassign the given dars to a new download manager\r\n\t */\r\n\treassignDownloadManager : function( selectedDars, dmId ) {\r\n\r\n\t\tvar groupedDars = _.groupBy(selectedDars, \"status\")\r\n\t\tfor ( var status in groupedDars ) {\r\n\t\t\tif ( status != validStatusesConfig.completedStatus.value ) {\r\n\t\t\t\tvar darIdList = _.map( groupedDars[status], function(a) {\r\n\t\t\t\t\treturn a.ID\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Create request\r\n\t\t\t\tvar request = {\r\n\t\t\t\t\t\"DarIdList\": darIdList,\r\n\t\t\t\t\t\"DataAccessRequestStatus\": {\r\n\t\t\t\t\t\t\"status\": String(status),\r\n\t\t\t\t\t\t\"dlManagerId\": dmId\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar self = this;\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: this.url,\r\n\t\t\t\t\ttype: \"POST\",\r\n\t\t\t\t\tdataType: 'json',\r\n\t\t\t\t\tcontentType: 'application/json',\r\n\t\t\t\t\tdata: JSON.stringify(request),\r\n\t\t\t\t\tsuccess: function(response) {\r\n\t\t\t\t\t\t// Update each dar\r\n\t\t\t\t\t\tfor ( var i=0; i<response.length; i++ ) {\r\n\t\t\t\t\t\t\tvar updatedDar = response[i];\r\n\t\t\t\t\t\t\tvar darStatus = self.get(\"dataAccessRequestStatuses\")[self.getDARStatusIndex(updatedDar.ID)]\r\n\t\t\t\t\t\t\tdarStatus.status = parseInt(updatedDar.status); // TODO: clairify the type of status (string or int) ?\r\n\t\t\t\t\t\t\tdarStatus.dlManagerId = updatedDar.dlManagerId;\r\n\t\t\t\t\t\t\tself.trigger(\"update:status\", darStatus, updatedDar.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\t\t\tif (jqXHR.status == 0) {\r\n\t\t\t\t\t\t\tlocation.reload();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.log(\"ERROR while updating status :\" + textStatus + ' ' + errorThrown);\r\n\t\t\t\t\t\t\tself.trigger(\"error:statusUpdate\", request);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = new DataAccessRequestStatuses();","var Logger = require('logger');\r\nvar nameShopcart_template = require('account/template/nameShopcartTemplate');\r\nvar ngeoWidget = require('ui/widget');\r\nvar Configuration = require('configuration');\r\n\r\nvar CreateShopcartView = Backbone.View.extend({\r\n\r\n\tevents: {\r\n\r\n\t\t//called when the submit button is clicked\r\n\t\t'click #submitShopcart': function(event) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tvar name = this.$el.find('#shopcartNameField').val();\r\n\t\t\tif (name && name != \"\") {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tthis.submit(name, {\r\n\t\t\t\t\tsuccess: function(model) {\r\n\t\t\t\t\t\tif (self.options.success) {\r\n\t\t\t\t\t\t\tself.options.success(model);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself.$el.ngeowidget('hide');\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\tself.$el.find('#serverMessage').html('<p>' + self.errorMessage() + '</p>');\r\n\t\t\t\t\t\t//$('#submitShopcart').button('disable');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.$el.find('#serverMessage').append('<p>Error : name cannot be empty</p>');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * submit the create shopcart request\r\n\t */\r\n\tsubmit: function(name, options) {\r\n\t\tthis.model.create({\r\n\t\t\tname: name\r\n\t\t}, options);\r\n\t},\r\n\r\n\t/** \r\n\t * Return an error message\r\n\t */\r\n\terrorMessage: function() {\r\n\t\treturn \"Error : cannot create the shopcart on the server.\";\r\n\t},\r\n\r\n\t/** \r\n\t * Render the view\r\n\t */\r\n\trender: function() {\r\n\r\n\t\tthis.$el.append(nameShopcart_template());\r\n\t\tthis.$el.appendTo('.ui-page-active');\r\n\t\tthis.$el.ngeowidget({\r\n\t\t\ttitle: this.options.title,\r\n\t\t\thide: $.proxy(this.remove, this),\r\n\t\t\ttheme: Configuration.localConfig.theme\r\n\t\t});\r\n\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\t//Open the popup\r\n\t\tthis.$el.ngeowidget(\"show\");\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nmodule.exports = CreateShopcartView;","var Configuration = require('configuration');\r\nvar accountDARs_template = require('account/template/accountDARsContent');\r\nvar DAR_monitoring_template = require('account/template/dataAccessRequestMonitoringContent');\r\nvar darFilter_template = require('account/template/darMonitoringFilterContent');\r\n\r\nvar DownloadManagers = require('dataAccess/model/downloadManagers');\r\nvar reassingDownloadPopup_template = require('account/template/reassignDownloadPopupContent');\r\n\r\nvar validStatusesConfig = Configuration.localConfig.dataAccessRequestStatuses.validStatuses;\r\n\r\n// Animation timeout callbacks\r\nvar timeouts = {};\r\n\r\nvar DataAccessRequestMonitoringView = Backbone.View.extend({\r\n\r\n\tinitialize: function() {\r\n\t\tthis.model.on(\"update:status\", this.updateStatus, this);\r\n\t\tthis.model.on(\"error:statusUpdate\", function(request) {\r\n\t\t\t// TODO !\r\n\t\t});\r\n\r\n\t\tthis.model.on(\"sync\", this.render, this);\r\n\t\tthis.model.on(\"error\", this.error, this);\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t\t// Pause/Unpause the given DAR handler\r\n\t\t'click .pauseResumeButton' : function(event) {\r\n\t\t\tvar dar = $(event.currentTarget).closest('.darStatus').data(\"DAR\");\r\n\t\t\t\r\n\t\t\t// Toggle status : processing/paused\r\n\t\t\tif (dar.status == validStatusesConfig.inProgressStatus.value) {\r\n\t\t\t\tthis.model.requestChangeStatus(dar.ID, validStatusesConfig.pausedStatus.value);\r\n\t\t\t} else if (dar.status == validStatusesConfig.pausedStatus.value) {\r\n\t\t\t\tthis.model.requestChangeStatus(dar.ID, validStatusesConfig.inProgressStatus.value);\r\n\t\t\t} else {\r\n\t\t\t\t//not supported case : should not happen !\r\n\t\t\t\tconsole.warn(\"Not supported status : \" + status);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Stop the given DAR event handler\r\n\t\t'click .stopDownloadButton' : function(event) {\r\n\t\t\tvar darId = $(event.currentTarget).closest('.darStatus').data(\"DAR\").ID;\r\n\t\t\t\r\n\t\t\t// Stop the given dar\r\n\t\t\tthis.model.requestChangeStatus(darId, validStatusesConfig.cancelledStatus.value);\r\n\t\t},\r\n\r\n\t\t// Reassign button\r\n\t\t'click #reassignDM' : function(event){\r\n\t\t\tvar $button = $(event.currentTarget);\r\n\r\n\t\t\t// if ( $button.text() == \"OK\" ) {\r\n\r\n\t\t\t\t// Reassign dars\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar selectedDars = [];\r\n\t\t\t\tthis.$el.find('.ui-icon-checkbox-on').each(function(input) {\r\n\t\t\t\t\tvar dar = $(this).next('.darStatus').data(\"DAR\");\r\n\t\t\t\t\tselectedDars.push( dar );\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif ( selectedDars.length ) {\r\n\r\n\t\t\t\t\t// Open download manager list\r\n\t\t\t\t\tvar $openedPopup =\r\n\t\t\t\t\t\t$(reassingDownloadPopup_template( DownloadManagers.attributes ))\r\n\t\t\t\t\t\t\t.appendTo('.ui-page-active')\r\n\t\t\t\t\t\t\t.ngeowidget({\r\n\t\t\t\t\t\t\t\ttitle: \"Select new download manager\",\r\n\t\t\t\t\t\t\t\thide: function() {\r\n\t\t\t\t\t\t\t\t\t$openedPopup.ngeowidget(\"destroy\").remove();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).ngeowidget(\"show\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Define callbacks for the given buttons\r\n\t\t\t\t\t$openedPopup\r\n\t\t\t\t\t\t.find('.submit').click(function(){\r\n\t\t\t\t\t\t\t// Send request\r\n\t\t\t\t\t\t\tself.model.reassignDownloadManager( selectedDars, $openedPopup.find(\"select\").val() );\r\n\t\t\t\t\t\t\t$openedPopup.ngeowidget(\"hide\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// this.$el.find('.checkDar').css({\r\n\t\t\t\t// \t// visibility: \"hidden\",\r\n\t\t\t\t// \twidth: \"0px\"\r\n\t\t\t\t// \t//opacity: 0\r\n\t\t\t\t// });\r\n\t\t\t\t// $button.html(\"Re-assign download managers\").button(\"refresh\");\r\n\t\t\t// } else {\r\n\t\t\t\t// Show checkboxes to allow user to select dars which must be re-assigned\r\n\t\t\t\t// this.$el.find('.checkDar').removeClass('ui-icon-checkbox-on').addClass('ui-icon-checkbox-off').css({\r\n\t\t\t\t// \t// visibility: \"visible\",\r\n\t\t\t\t// \twidth: \"18px\"\r\n\t\t\t\t// \t//opacity: 1\r\n\t\t\t\t// });\r\n\t\t\t\t// $button.html(\"OK\").button(\"refresh\");\r\n\t\t\t// }\r\n\t\t},\r\n\r\n\t\t// Pause all checked DAR statuses\r\n\t\t'click #pauseAll' : function(){\r\n\t\t\tvar self = this;\r\n\t\t\tthis.$el.find('.ui-icon-checkbox-on').each(function(input) {\r\n\t\t\t\tvar dar = $(this).next('.darStatus').data(\"DAR\");\r\n\t\t\t\tif ( dar.status == validStatusesConfig.inProgressStatus.value ) {\r\n\t\t\t\t\tself.model.requestChangeStatus(dar.ID, validStatusesConfig.pausedStatus.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Resume all DAR checked statuses\r\n\t\t'click #resumeAll' : function(){\r\n\t\t\tvar self = this;\r\n\t\t\tthis.$el.find('.ui-icon-checkbox-on').each(function(input) {\r\n\t\t\t\tvar dar = $(this).next('.darStatus').data(\"DAR\");\r\n\t\t\t\tif ( dar.status == validStatusesConfig.pausedStatus.value ) {\r\n\t\t\t\t\tself.model.requestChangeStatus(dar.ID, validStatusesConfig.inProgressStatus.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Stop all DAR checked statuses\r\n\t\t'click #stopAll' : function(){\r\n\t\t\tvar self = this;\r\n\t\t\tthis.$el.find('.ui-icon-checkbox-on').each(function(input) {\r\n\t\t\t\tvar dar = $(this).next('.darStatus').data(\"DAR\");\r\n\t\t\t\tif ( dar.status != validStatusesConfig.cancelledStatus.value ) {\r\n\t\t\t\t\tself.model.requestChangeStatus(dar.ID, validStatusesConfig.cancelledStatus.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Update checked dar needed to reassign\r\n\t\t'click .checkDar' : function(event) {\r\n\t\t\tvar $button = $(event.currentTarget);\r\n\t\t\tif ( $button.hasClass('ui-icon-checkbox-off') ) {\r\n\t\t\t\t$button.removeClass('ui-icon-checkbox-off').addClass('ui-icon-checkbox-on');\r\n\t\t\t} else {\r\n\t\t\t\t$button.removeClass('ui-icon-checkbox-on').addClass('ui-icon-checkbox-off');\r\n\t\t\t}\r\n\t\t\tthis.updateFooterButtonsState();\r\n\t\t},\r\n\r\n\t\t// Filter statuses by download manager\r\n\t\t'click li': function(event) {\r\n\t\t\t//console.log($('#'+ event.currentTarget.id));\r\n\t\t\tvar target = $('#' + event.currentTarget.id);\r\n\t\t\tvar filtredStatuses;\r\n\r\n\t\t\tif (target.hasClass('ui-btn-active')) {\r\n\t\t\t\ttarget.removeClass('ui-btn-active');\r\n\t\t\t\tthis.selectedDownloadManagertId = undefined;\r\n\t\t\t\t// No Download manager is selected so get the whole list of DARs\r\n\t\t\t\tthis.orderedStatuses.orderedStatusesToDisplay = this.model.getOrderedStatuses();\r\n\t\t\t\tthis.render();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.$el.find('.ui-btn-active').removeClass('ui-btn-active');\r\n\t\t\t\ttarget.addClass('ui-btn-active');\r\n\t\t\t\tthis.selectedDownloadManagertId = event.currentTarget.id;\r\n\t\t\t\t//set up the list of DARs according to the selected Download manager\r\n\t\t\t\tthis.orderedStatuses.orderedStatusesToDisplay = this.model.getFilterOrderedStatuses(this.selectedDownloadManagertId);\r\n\t\t\t\t//the update view method is used rather than render method in order to keep the status of the download manager\r\n\t\t\t\t//selected in the list and just update the list and not all the view.\r\n\t\t\t\tthis.updateView();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tUpdate footer buttons enabled/disabled layout according to dar statuses\r\n\t */\r\n\tupdateFooterButtonsState: function() {\r\n\t\t// Update global disabled/enabled state\r\n\t\tif ( this.$el.find('.ui-icon-checkbox-on').length == 0 ) {\r\n\t\t\tthis.$el.find(\"#darFooterButtons\").addClass(\"ui-disabled\");\r\n\t\t} else {\r\n\t\t\tthis.$el.find(\"#darFooterButtons\").removeClass(\"ui-disabled\");\r\n\t\t}\r\n\r\n\t\t// Update each button state depending on checked dars\r\n\t\tvar checkedDars = this.$el.find('.ui-icon-checkbox-on').next('.darStatus');\r\n\t\tvar enableStop = _.find(checkedDars, function(dar) {\r\n\t\t\treturn $(dar).data(\"DAR\").status == validStatusesConfig.inProgressStatus.value || $(dar).data(\"DAR\").status == validStatusesConfig.pausedStatus.value;\r\n\t\t});\r\n\t\tvar enablePause = _.find(checkedDars, function(dar) {\r\n\t\t\treturn $(dar).data(\"DAR\").status == validStatusesConfig.inProgressStatus.value;\r\n\t\t});\r\n\t\tvar enableResume = _.find(checkedDars, function(dar) {\r\n\t\t\treturn $(dar).data(\"DAR\").status == validStatusesConfig.pausedStatus.value;\r\n\t\t});\r\n\t\tvar enableReassign = _.find(checkedDars, function(dar) {\r\n\t\t\treturn $(dar).data(\"DAR\").status != validStatusesConfig.completedStatus.value;\r\n\t\t});\r\n\t\tthis.$el.find('#stopAll').button(enableStop ? 'enable' : 'disable').button('refresh');\r\n\t\tthis.$el.find('#resumeAll').button(enableResume ? 'enable' : 'disable').button('refresh');\r\n\t\tthis.$el.find('#pauseAll').button(enablePause ? 'enable' : 'disable').button('refresh');\r\n\t\tthis.$el.find('#reassignDM').button(enableReassign ? 'enable' : 'disable').button('refresh');\r\n\t},\r\n\r\n\t/**\r\n\t * Call back method called after a DAR status change response received from the server.  \r\n\t * The method changes the DAR icon and the status of the buttons according to the new changed status of the DAR\r\n\t */\r\n\tupdateStatus: function(darStatus, message) {\r\n\t\tvar darDiv = $(\"#darsDiv div[id='\" + darStatus.ID + \"']\");\r\n\r\n\t\t// Update download manager id\r\n\t\tdarDiv.find(\"tbody tr:eq(0) td:eq(2)\").html(darStatus.dlManagerId);\r\n\r\n\t\tvar messageEltId = \"#serverDARMonitoringResponse_\" + darStatus.ID;\r\n\t\tthis.showMessage(\"Status changed to \" + this.model.getStatusReadableString(darStatus.status) + \" : \" + message, messageEltId);\r\n\r\n\t\tvar collapsibleHeader = darDiv.find(\".ui-btn-inner:eq(0)\");\r\n\t\tvar pauseButton = darDiv.find(\"button[id='pause_\" + darStatus.ID + \"']\");\r\n\t\tvar stopButton = darDiv.find(\"button[id='stop_\" + darStatus.ID + \"']\");\r\n\r\n\t\t// Update status and icon\r\n\t\tswitch (darStatus.status) {\r\n\r\n\t\t\tcase validStatusesConfig.inProgressStatus.value:\r\n\t\t\t\t// Cancelled or Paused -> InProgress\r\n\t\t\t\tcollapsibleHeader.find(\".statusIcon\").removeClass(\"ui-icon-cancelled ui-icon-paused\").addClass(\"ui-icon-processing\");\r\n\t\t\t\tpauseButton.html(\"Pause\").button('enable').button(\"refresh\");\r\n\t\t\t\tstopButton.button('enable');\r\n\t\t\t\tdarDiv.find(\"tbody tr:eq(0) td:eq(1)\").html(validStatusesConfig.inProgressStatus.status);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase validStatusesConfig.pausedStatus.value:\r\n\t\t\t\t// Cancelled or InProgress -> Paused\r\n\t\t\t\tcollapsibleHeader.find(\".statusIcon\").removeClass(\"ui-icon-cancelled ui-icon-processing\").addClass(\"ui-icon-paused\");\r\n\t\t\t\tpauseButton.html(\"Resume\").button('enable').button(\"refresh\");\r\n\t\t\t\tstopButton.button('enable');\r\n\t\t\t\tdarDiv.find(\"tbody tr:eq(0) td:eq(1)\").html(validStatusesConfig.pausedStatus.status);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase validStatusesConfig.cancelledStatus.value:\r\n\t\t\t\t// InProgress or Paused -> Cancelled\r\n\t\t\t\tcollapsibleHeader.find(\".statusIcon\").removeClass(\"ui-icon-processing ui-icon-paused\").addClass(\"ui-icon-cancelled\");\r\n\t\t\t\tpauseButton.button('disable');\r\n\t\t\t\tstopButton.button('disable');\r\n\t\t\t\tdarDiv.find(\"tbody tr:eq(0) td:eq(1)\").html(validStatusesConfig.cancelledStatus.status);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: // Unknown status\r\n\t\t\t\tcollapsibleHeader.find(\".statusIcon\").removeClass('ui-icon-processing ui-icon-paused ui-icon-cancelled').addClass('ui-icon-unknown');\r\n\t\t\t\tpauseButton.button('disable');\r\n\t\t\t\tstopButton.button('disable');\r\n\t\t\t\tdarDiv.find(\"tbody tr:eq(0) td:eq(1)\").html(\"unknown\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.$el.find(\"#dmsDiv\").html(darFilter_template(this.model)).trigger(\"create\");\r\n\t\tthis.updateFooterButtonsState();\r\n\t},\r\n\r\n\t/** \r\n\t * Display a notification message inside the given elementId\r\n\t */\r\n\tshowMessage: function(message, elementId) {\r\n\t\tif (timeouts[elementId]) {\r\n\t\t\tclearTimeout(timeouts[elementId]);\r\n\t\t}\r\n\t\t$(elementId)\r\n\t\t\t.empty()\r\n\t\t\t.append(message)\r\n\t\t\t.slideDown();\r\n\r\n\t\t// Hide status message after a given time\r\n\t\ttimeouts[elementId] = setTimeout(function() {\r\n\t\t\t$(elementId).slideUp();\r\n\t\t}, Configuration.data.dataAccessRequestStatuses.messagefadeOutTime);\r\n\t},\r\n\r\n\t/** \r\n\t * Update the list of selected data access statuses when a download manager has been selected.\r\n\t */\r\n\tupdateView: function() {\r\n\t\t//this.$el.find(\"#dmsDiv\").html(darFilter_template(this.model));\r\n\t\tvar darsContent = DAR_monitoring_template(this.orderedStatuses);\r\n\t\tthis.$el.find(\"#darsDiv\").html(darsContent);\r\n\t\tthis.$el.trigger('create');\r\n\t\tthis.setUpStatusIcons();\r\n\t},\r\n\r\n\t/**\r\n\t *\tError callback\r\n\t */\r\n\terror: function(model, xhr) {\r\n\t\tif (xhr.status == 404) {\r\n\t\t\t// This is normal, the user has no download managers so just render it.\r\n\t\t\tthis.render();\r\n\t\t} else {\r\n\t\t\tthis.$el.empty();\r\n\t\t\tthis.$el.append(\"<div class='ui-error-message'><p><b> Failure: Error when loading the data access requests.</p></b>\" +\r\n\t\t\t\t\"<p><b> Please check the interface with the server.</p></b></div>\");\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Refresh the view size\r\n\t * Update dar list to have a good max height\r\n\t */\r\n\trefreshSize: function() {\r\n\t\tvar parentOffset = this.$el.offset();\r\n\t\tvar $content = this.$el.find('#darsDiv');\r\n\r\n\t\tvar height = $(window).height() - (parentOffset.top + this.$el.outerHeight()) + $content.height();\r\n\r\n\t\t$content.css('max-height', height);\r\n\t},\r\n\r\n\t/** \r\n\t * Display the list of DMs assigned to Data Access Requests in the left side and the list of \r\n\t * Data access request in the right side.\r\n\t * By default all the DARS are displayed.\r\n\t */\r\n\trender: function() {\r\n\r\n\t\t//orderedStatuses is the model for the monitoring view, it wrappes the DataAccessRequestStatuses model\r\n\t\t//and the orderedStatusesToDisplay which the array of the DARs to be displayed.\r\n\t\t//It is useful to update the orderedStatusesToDisplay according the DM selected.\r\n\t\tthis.orderedStatuses = {\r\n\t\t\torderedStatusesToDisplay: this.model.getOrderedStatuses(),\r\n\t\t\tmodel: this.model\r\n\t\t};\r\n\r\n\t\tvar mainContent = accountDARs_template(this.model);\r\n\t\tthis.$el.html(mainContent);\r\n\r\n\t\tthis.$el.find(\"#dmsDiv\").html(darFilter_template(this.model));\r\n\r\n\t\tvar darsContent = DAR_monitoring_template(this.orderedStatuses);\r\n\t\t// var darsWidth = $('#darsDiv').width();\r\n\t\t// var slidingContent = '<div style=\"transition: all 0.2s; width: '+ (darsWidth*2) +'px; white-space: nowrap;\" id=\"slidingContent\">\\\r\n\t\t// \t<div id=\"statuses\" style=\"float: left; width: '+ darsWidth +'px;\" class=\"slidingStep\">'+ darsContent +'</div>\\\r\n\t\t// \t<div id=\"dmSelection\" style=\"float: left; width: '+ darsWidth +'px;\" class=\"slidingStep\">' + reassingDownloadPopup_template( DownloadManagers.attributes ) +'</div>\\\r\n\t\t// </div>';\r\n\t\tthis.$el.find(\"#darsDiv\").html(darsContent);\r\n\t\tthis.$el.trigger('create');\r\n\t\tthis.setUpStatusIcons();\r\n\t\tthis.refreshSize();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Assign the correct status icon and update the buttons status for each data access request \r\n\t * depending on the DAR status.\r\n\t */\r\n\tsetUpStatusIcons: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t_.each(this.orderedStatuses.orderedStatusesToDisplay, function(orderedStatus) {\r\n\t\t\t_.each(orderedStatus.DARs, function(darStatus, i) {\r\n\r\n\t\t\t\t// Select the DAR element\r\n\t\t\t\tvar selector = \"div[id='\" + darStatus.ID + \"']\";\r\n\t\t\t\t//\t\t\t\t\tconsole.log(\"selector\");\r\n\t\t\t\t//\t\t\t\t\tconsole.log(selector);\t\r\n\t\t\t\tvar darDiv = $(\"#darsDiv\").find(selector).data(\"DAR\", darStatus);\r\n\t\t\t\tvar collapsibleHeader = darDiv.find(\".ui-btn-inner:eq(0)\");\r\n\t\t\t\tvar pauseButton = darDiv.find(\"button[id='pause_\" + darStatus.ID + \"']\");\r\n\t\t\t\tvar stopButton = darDiv.find(\"button[id='stop_\" + darStatus.ID + \"']\");\r\n\t\t\t\t//\t\t\t\t\tconsole.log(collapsibleHeader);\r\n\t\t\t\t//\t\t\t\t\tconsole.log($(collapsibleHeader).find(\".ui-btn-inner\"));\r\n\r\n\t\t\t\tswitch (darStatus.status) {\r\n\r\n\t\t\t\t\t// Processing\r\n\t\t\t\t\tcase validStatusesConfig.inProgressStatus.value:\r\n\t\t\t\t\t\tcollapsibleHeader.append('<span class=\"statusIcon ui-icon-processing ui-icon .ui-shadow\">&nbsp;</span>');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t// Paused \r\n\t\t\t\t\tcase validStatusesConfig.pausedStatus.value:\r\n\t\t\t\t\t\tcollapsibleHeader.append('<span class=\"statusIcon ui-icon-paused ui-icon .ui-shadow\">&nbsp;</span>');\r\n\t\t\t\t\t\tpauseButton.html(\"Resume\").button(\"refresh\");\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t// Completed\r\n\t\t\t\t\tcase validStatusesConfig.completedStatus.value:\r\n\t\t\t\t\t\tcollapsibleHeader.append('<span class=\"statusIcon ui-icon-completed ui-icon .ui-shadow\">&nbsp;</span>');\r\n\t\t\t\t\t\tpauseButton.button('disable');\r\n\t\t\t\t\t\tstopButton.button('disable');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t// Cancelled\r\n\t\t\t\t\tcase validStatusesConfig.cancelledStatus.value:\r\n\t\t\t\t\t\tcollapsibleHeader.append('<span class=\"statusIcon ui-icon-cancelled ui-icon .ui-shadow\">&nbsp;</span>');\r\n\t\t\t\t\t\tpauseButton.button('disable');\r\n\t\t\t\t\t\tstopButton.button('disable');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t// Unknown Status\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tcollapsibleHeader.append('<span class=\"ui-icon-unknown ui-icon .ui-shadow\">&nbsp;</span>');\r\n\t\t\t\t\t\tpauseButton.button('disable');\r\n\t\t\t\t\t\tstopButton.button('disable');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = DataAccessRequestMonitoringView;","var Configuration = require('configuration');\r\nvar DownloadManagers = require('dataAccess/model/downloadManagers');\r\nvar downloadManagersMonitoring_template = require('account/template/downloadManagersMonitoringContent');\r\nvar downloadManagerInstall_template = require('dataAccess/template/downloadManagerInstallContent');\r\nvar downloadManagersList_template = require('account/template/downloadManagersTableContent');\r\nvar ngeoWidget = require('ui/widget');\r\n\r\nvar DownloadManagersMonitoringView = Backbone.View.extend({\r\n\r\n\tinitialize: function() {\r\n\t\tthis.model.on(\"sync\", this.buildDownloadManagersTable, this);\r\n\t\tthis.model.on(\"status:change\", this.buildDownloadManagersTable, this);\r\n\t\tthis.model.on(\"error\", this.error, this);\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t\t// Call when user clicks on a a button\r\n\t\t'click #stop_dm': function(event) {\r\n\t\t\tthis.$stopDialog.ngeowidget(\"show\").find(\"#stopImmediately\").prop(\"checked\", \"checked\").checkboxradio(\"refresh\");\r\n\t\t},\r\n\r\n\t\t'click tbody tr': function(event) {\r\n\t\t\t// Allow a unique row selection\r\n\t\t\t$(\"tr\").removeClass('dm_selected');\r\n\t\t\t$(event.currentTarget).toggleClass('dm_selected');\r\n\t\t\t// Each row id follows this expression: row_id where id is the related download manager id\r\n\t\t\tvar dmID = $(event.currentTarget).attr('data-dmId');\r\n\t\t\tvar status = this.model.getDownloadManagerStatus(dmID);\r\n\r\n\t\t\tif (status == \"ACTIVE\" || status == \"INACTIVE\") {\r\n\t\t\t\t$(\"#stop_dm\").button('enable');\r\n\t\t\t} else {\r\n\t\t\t\t$(\"#stop_dm\").button('disable');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Call when an error occurs on the server\r\n\t */\r\n\terror: function(model, xhr) {\r\n\t\tif (xhr.status == 404) {\r\n\t\t\t// This is normal, the user has no download managers so just render it.\r\n\t\t\tthis.render();\r\n\t\t} else {\r\n\t\t\tthis.$el.empty();\r\n\t\t\tthis.$el.append(\"<div class='ui-error-message'><p><b> Failure: Error when loading the download managers.</p></b>\" +\r\n\t\t\t\t\"<p><b> Please check the interface with the server.</p></b></div>\");\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Refresh the view size\r\n\t * Update download manager list to have a good max height\r\n\t */\r\n\trefreshSize: function() {\r\n\t\tvar parentOffset = this.$el.offset();\r\n\t\tvar $content = this.$el.find('#downloadManagersMonitoringContent');\r\n\r\n\t\tvar height = $(window).height() - (parentOffset.top + this.$el.outerHeight()) + $content.height() - 50;\r\n\r\n\t\t$content.css('max-height', height);\r\n\t},\r\n\r\n\tlistTemplate: downloadManagersList_template,\r\n\r\n\tbuildDownloadManagersTable: function() {\r\n\t\tif (this.model.get('downloadmanagers').length > 0) {\r\n\t\t\tthis.$el.find('#downloadManagersMonitoringContent').html(this.listTemplate(this.model.attributes));\r\n\t\t} else {\r\n\t\t\tthis.$el.find('#downloadManagersMonitoringContent').html(\"<p class='ui-error-message'><b>No download managers have been registered.</b></p>\");\r\n\t\t}\r\n\t\tthis.$el.trigger('create');\r\n\t},\r\n\r\n\t/**\r\n\t * Call to build the view when the download managers are synced\r\n\t */\r\n\trender: function() {\r\n\r\n\t\tthis.$el.empty();\r\n\r\n\t\t// Add HTML to install a download manager\r\n\t\tvar installContent = downloadManagerInstall_template({\r\n\t\t\tdownloadManagerInstallationLink: Configuration.data.downloadManager.downloadManagerInstallationLink,\r\n\t\t\tdownloadmanagers: this.model.get('downloadmanagers')\r\n\t\t});\r\n\t\tthis.$el.append(installContent)\r\n\t\t\t\t.append(downloadManagersMonitoring_template());\r\n\r\n\t\tthis.buildDownloadManagersTable();\r\n\r\n\t\t$(\"#stop_dm\").button('disable');\r\n\t\tthis.$stopDialog = this.$el.find('#stopDMDialog')\r\n\t\t\t.appendTo('.ui-page-active')\r\n\t\t\t.ngeowidget({\r\n\t\t\t\ttitle: \"Stop Immediately?\",\r\n\t\t\t\tclosable: false\r\n\t\t\t});\r\n\t\tthis.$stopDialog.ngeowidget('hide');\r\n\r\n\t\tvar self = this;\r\n\t\tthis.$stopDialog.find('button.confirm').click(function(event) {\r\n\t\t\tvar dmID = $('tr.dm_selected').attr('data-dmId');\r\n\t\t\tif ( self.$stopDialog.find(\"#stopImmediately\").is(\":checked\") ) {\r\n\t\t\t\tcommand = \"STOP\";\r\n\t\t\t} else {\r\n\t\t\t\tcommand = \"STOP_IMMEDIATELY\";\r\n\t\t\t}\r\n\r\n\t\t\tself.$stopDialog.ngeowidget('hide');\r\n\t\t\tself.model.requestChangeStatus(dmID, command);\r\n\t\t\t$(\"#stop_dm\").button('disable');\r\n\t\t});\r\n\t\t\r\n\t\tthis.$stopDialog.find('button.cancel').click(function(event) {\r\n\t\t\tself.$stopDialog.ngeowidget('hide');\r\n\t\t});\r\n\r\n\t\tthis.refreshSize();\r\n\r\n\t\treturn this;\r\n\t},\r\n});\r\n\r\nmodule.exports = DownloadManagersMonitoringView;","var CreateShopcartView = require('account/view/createShopcartView');\r\n\r\n/** The duplicate view is very similar to the createShopcart view \r\n * except for the submit action request\r\n */\r\nvar DuplicateShopcartView = CreateShopcartView.extend({\r\n\r\n\t/** submit to the server */\r\n\tsubmit: function(name, options) {\r\n\r\n\t\tvar features = this.model.getCurrent().featureCollection.features;\r\n\r\n\t\tvar wrapSuccess = function(model) {\r\n\t\t\tmodel.addItems(features);\r\n\t\t\tif (options.success) options.success();\r\n\t\t};\r\n\r\n\r\n\t\tvar attributes = {\r\n\t\t\t\"name\": name,\r\n\t\t\t\"userId\": \"\",\r\n\t\t\t\"isDefault\": false\r\n\t\t};\r\n\r\n\t\tthis.model.create(attributes, {\r\n\t\t\twait: true,\r\n\t\t\tsuccess: wrapSuccess,\r\n\t\t\terror: options.error\r\n\t\t});\r\n\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = DuplicateShopcartView;","var Logger = require('logger');\r\n\r\nvar importShopcartView = Backbone.View.extend({\r\n\r\n\tevents: {\r\n\t\t//TO BE IMPLEMENTED once the format is defined\r\n\t},\r\n\r\n\t// Render the view\r\n\trender: function() {\r\n\r\n\t\tthis.$el.append('<div id=\"shopcartImportDiv\"><div id=\"shopcartDropZone\">\\b Drop a Shopcart File Here (KML, GeoJSON or GML) \\b</div><p id=\"shopcartImportMessage\"></p></div>');\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nmodule.exports = importShopcartView;","var Logger = require('logger');\r\nvar inquiries_template = require('account/template/inquiriesContent');\r\nvar Configuration = require('configuration');\r\n\r\n/** the mode is the Inquiry object */\r\nvar InquiriesView = Backbone.View.extend({\r\n\r\n\tevents: {\r\n\t\t//the button clicked to submit the inquiry \r\n\t\t'click #submitInquiry': function(event) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tif (this.validateInquiryForm())\r\n\t\t\t\tthis.submit();\r\n\t\t},\r\n\r\n\t\t'change #inquiryType': function(event) {\r\n\t\t\t//at initialisation, the inquiry type choosen is '-1' and the '-1' option is unselectable.\r\n\t\t\t//the submit button is disabled at initialisation\r\n\t\t\t//so whenever we select an inquiryType, we forcely chose other than '-1' inquiryType\r\n\t\t\t//so enable the button submit\r\n\t\t\tevent.preventDefault();\r\n\t\t\t$('#submitInquiryButtonContainer').removeClass(\"ui-disabled\");\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Check if the texarea containing message is not empty and the chosen inquiryType is valid.\r\n\t * If valid then enable button submit, otherwise disable it\r\n\t * @return \r\n\t *\ttrue if it is valid\r\n\t *\tfalse otherwise\r\n\t */\r\n\tvalidateInquiryForm: function() {\r\n\t\tvar message = this.$el.find('#inquiryMessage').val().trim();\r\n\t\tvar iType = this.$el.find('select').val();\r\n\t\tvar isValid = true;\r\n\r\n\t\tif (message == null || message == '') {\r\n\t\t\tLogger.inform(\"Please enter your inquiry message\");\r\n\t\t\tisValid = false;\r\n\t\t} else if (iType == null || iType == '-1') {\r\n\t\t\t//normally, we will never enter here, because, this function is called whenever\r\n\t\t\t//the submit button is clicked.\r\n\t\t\t//And the submit button is enabled only if the 'inquiry type' is valid\r\n\t\t\tLogger.inform(\"Please choose an inquiry type\");\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\r\n\t\treturn isValid;\r\n\t},\r\n\r\n\t// Submit an inquiry to the web server\r\n\tsubmit: function() {\r\n\r\n\t\t// Build the JSON to send to the server\r\n\t\tvar body = {\r\n\t\t\tUserInquiry: {\r\n\t\t\t\tinquiryType: this.$el.find('select').val(),\r\n\t\t\t\tinquiryText: this.$el.find('#inquiryMessage').val().trim()\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar self = this;\r\n\t\t$.ajax({\r\n\t\t\turl: \"/ngeo/userInquiry\",\r\n\t\t\tdata: JSON.stringify(body),\r\n\t\t\ttype: 'POST',\r\n\t\t\tcontentType: 'application/json',\r\n\t\t\tsuccess: function() {\r\n\t\t\t\tLogger.inform('Inquiry successfully send to the server.');\r\n\t\t\t\tself.$el.find('select').val('-1');\r\n\t\t\t\tself.$el.find('select').selectmenu('refresh', true);\r\n\t\t\t\tself.$el.find('#inquiryMessage').val('');\r\n\t\t\t\t//as the select inquiry is reinitialized and the 'select' value is \"-1\", then disable button 'submit'\r\n\t\t\t\t//so user cannot send 'a not valid' inquiryType\r\n\t\t\t\tself.$el.find('#submitInquiryButtonContainer').addClass(\"ui-disabled\");\r\n\t\t\t},\r\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\tLogger.error('Submit an inquiry failed  :  ' + errorThrown + ' (' + textStatus + ')');\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t// Render the view\r\n\trender: function() {\r\n\r\n\t\tthis.$el.append(inquiries_template({\r\n\t\t\ttheme: Configuration.localConfig.theme\r\n\t\t}));\r\n\t\tthis.$el.find('#submitInquiryButtonContainer').addClass(\"ui-disabled\");\r\n\t\tthis.$el.trigger('create');\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nmodule.exports = InquiriesView;","var Logger = require('logger');\r\nvar Configuration = require('configuration');\r\nvar Map = require('map/map');\r\nvar MapUtils = require('map/utils');\r\nvar UserPrefs = require('userPrefs');\r\n//require('highchecktree');\r\nvar layerManager_template = require('account/template/layerManagerContent');\r\nvar layerSearchPopup_template = require('account/template/layerSearchPopupContent');\r\n\r\n/**\r\n *\tPrivate module variables\r\n */\r\nvar $openedPopup;\r\n\r\n/**\r\n *\tOVER UGLY METHOD to make delete action on the object for the given key=value\r\n */\r\nvar nestedOp = function(theObject, key, value, action) {\r\n\tvar result = null;\r\n\tif (theObject instanceof Array) {\r\n\t\tfor (var i = 0; i < theObject.length && result == null; i++) {\r\n\t\t\tresult = nestedOp(theObject[i], key, value, action);\r\n\t\t}\r\n\r\n\t\t// Remove the object from the array\r\n\t\tif (result && action == \"delete\") {\r\n\t\t\ttheObject.splice(i - 1, 1);\r\n\t\t\tresult = false;\r\n\t\t}\r\n\t} else {\r\n\t\tfor (var prop in theObject) {\r\n\r\n\t\t\tif (result != null)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (prop == key && theObject[prop] == value) {\r\n\t\t\t\tif (action == \"delete\") {\r\n\t\t\t\t\tconsole.log(\"Deleting \" + prop + ': ' + theObject[prop]);\r\n\t\t\t\t\ttheObject = undefined;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (action == \"get\") {\r\n\t\t\t\t\tconsole.log(prop + ': ' + theObject[prop]);\r\n\t\t\t\t\treturn theObject;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (theObject[prop] instanceof Object || theObject[prop] instanceof Array) {\r\n\t\t\t\tresult = nestedOp(theObject[prop], key, value, action);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n// var findObjectById = function(root, prop, value, action) {\r\n//     if (root.nestedLayers) {\r\n//     \tfor ( var i=root.nestedLayers.length-1; i>=0; i-- ) {\r\n//     \t\tvar nLayer = root.nestedLayers[i];\r\n//     \t\tfor ( var key in nLayer ) {\r\n//     \t\t\tif ( key == prop && nLayer[key] == value ) {\r\n//     \t\t\t\tif ( action == \"fetch\" ) {\r\n//     \t\t\t\t\tconsole.log(\"Fetching : \");\r\n//     \t\t\t\t\treturn nLayer;\r\n//     \t\t\t\t} else {\r\n//     \t\t\t\t\tconsole.log(\"Deleting : \" + key);\r\n//     \t\t\t\t\tdelete nLayer;\r\n//     \t\t\t\t\tbreak;\r\n//     \t\t\t\t}\r\n//     \t\t\t} else if ( key == \"nestedLayers\" ) {\r\n//     \t\t\t\treturn findObjectById( nLayer.nestedLayers, prop, value, action );\r\n//     \t\t\t}\r\n//     \t\t}\r\n//     \t}\r\n//         // for (var k in root.nestedLayers) {\r\n//         //     if (root.nestedLayers[k][prop] == value) {\r\n//         //         if(action==\"fetch\") {\r\n//         //           return root.nestedLayers[k]; \r\n//         //         }\r\n//         //         else \r\n//         //         {\r\n//         //         \tconsole.log(\"Deleting \" + k);\r\n//         //            delete root.nestedLayers[k];\r\n//         //         }\r\n//         //     }\r\n//         //     else if (root.nestedLayers[k].nestedLayers.length) {\r\n//         //         return findObjectById(root.nestedLayers[k], prop, value, action);\r\n//         //     }\r\n//         // }\r\n//     }\r\n// }\r\n\r\n/**\r\n * Callback called when a layer is checked\r\n */\r\nvar layerCheckedCallback = function() {\r\n\tvar $this = $(this);\r\n\t$this.data('layer').setVisible($this.prop('checked'));\r\n};\r\n\r\n/**\r\n *\tBuild highchecktree item for the given layer\r\n *\t@param layer\r\n *\t\tCould come from 3 cases:\r\n *\t\t\t<ul>\r\n *\t\t\t\t<li>WMS layer coming from configuration</li>\r\n *\t\t\t\t<li>Added by user within mapserver url(coming from \"wmsCapabilitiesFormat.read\")</li>\r\n *\t\t\t\t<li>Added by user within full wms/wmts request(coming from \"MapUtils.createWmsLayerFromUrl\")</li>\r\n *\t\t\t</ul>\r\n *\t@return\r\n *\t\tItem object for highCheckTree plugin\r\n */\r\nvar buildItem = function(layer) {\r\n\tvar params;\r\n\tvar isConfigurationLayer = layer.engineLayer;\r\n\tif (isConfigurationLayer) {\r\n\t\t// Already created layer by conf\r\n\t\tparams = layer.params;\r\n\t} else if (layer.baseUrl || layer.type == \"KML\") {\r\n\t\t// WMS/KML url added by user\r\n\t\tparams = layer;\r\n\t} else if (layer.name) {\r\n\t\t// Layers coming from get capabilities of WMS mapserver\r\n\t\t// Only layers with name attribute are accepted, otherwise it's just a group of layers\r\n\t\tparams = {\r\n\t\t\ttype: \"WMS\",\r\n\t\t\tname: layer.title,\r\n\t\t\tbaseUrl: layer.baseUrl,\r\n\t\t\tvisible: false,\r\n\t\t\tparams: {\r\n\t\t\t\tlayers: layer.name\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (layer.tileMatrixSets && layer.identifier) {\r\n\t\t// Layers coming from get capabilities of WMTS mapserver\r\n\r\n\t\t// Get current map's projection\r\n\t\tvar mapProjectionNumbers = [Configuration.get(\"map.projection\").replace(\"EPSG:\",\"\")];\r\n\r\n\t\t// Add \"G00gle\" projection in case of Mercator\r\n\t\tif ( Configuration.get(\"map.projection\") == \"EPSG:3857\" )\r\n\t\t\tmapProjectionNumbers.push(\"900913\");\r\n\r\n\t\t// Extract the given matrix of current layer\r\n\t\t// Check out if mapserver(!) tileMatrixSets contains current map projection\r\n\t\t// NB: could have 4326 AND 3857, allows to extract matrixSet identifier\r\n\t\tvar matrixSet = _.find(layer.tileMatrixSets, function(set) { return _.find(mapProjectionNumbers, function(projNum) { return set.supportedCRS.indexOf(projNum) >= 0 } ); });\r\n\t\t\r\n\t\tif ( matrixSet ) {\r\n\t\t\t// Check out if current layer is compatible with current map projection\r\n\t\t\t// NB: could be 3857 only\r\n\t\t\tvar isCompatible = _.find(layer.tileMatrixSetLinks, function(link) { return link.tileMatrixSet == matrixSet.identifier });\r\n\t\t\tif ( isCompatible ) {\r\n\t\t\t\t// Add WMTS layers only compatible with current map projection\r\n\t\t\t\tparams = {\r\n\t\t\t\t\ttype: \"WMTS\",\r\n\t\t\t\t\ttitle: layer.title,\r\n\t\t\t\t\tname: layer.identifier,\r\n\t\t\t\t\tbaseUrl: layer.baseUrl,\r\n\t\t\t\t\tvisible: false,\r\n\t\t\t\t\tprojection: Configuration.get(\"map.projection\"),\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tlayer: layer.identifier,\r\n\t\t\t\t\t\tmatrixSet: matrixSet.identifier,\r\n\t\t\t\t\t\tformat: layer.formats[0], // Take first one by default\r\n\t\t\t\t\t\tmatrixIds: matrixSet.matrixIds.map(function(id) { return id.identifier })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Layer bounds should be in displayProjection -> 4326\r\n\t\t\t\tvar boundsBase = layer.bounds ? layer.bounds : null;\r\n\t\t\t\tif ( boundsBase ) {\r\n\t\t\t\t\tparams.bbox = [boundsBase.left, boundsBase.bottom,boundsBase.right,boundsBase.top];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tvar label = params ? (params.title || params.name) : layer.title;\r\n\treturn {\r\n\t\titem: {\r\n\t\t\tid: label,\r\n\t\t\tlabel: label,\r\n\t\t\tchecked: isConfigurationLayer,\r\n\t\t\tlayerDesc: params,\r\n\t\t\tlayer: isConfigurationLayer ? layer : null\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/**\r\n *\tCreates highCheckTree structure from the given layers\r\n */\r\nvar buildHighCheckTreeData = function(layers, baseUrl) {\r\n\tvar data = [];\r\n\t_.each(layers, function(layer) {\r\n\t\tvar item = buildItem(layer);\r\n\r\n\t\tif ( item ) {\r\n\t\t\tif (item.item.layerDesc && !item.item.layerDesc.baseUrl) {\r\n\t\t\t\t// Update baseUrl for layers coming from GetCapabilities\r\n\t\t\t\t// NB: layerDesc doesn't exist for layer which serves only to group WMS layers\r\n\t\t\t\titem.item.layerDesc.baseUrl = baseUrl;\r\n\t\t\t}\r\n\r\n\t\t\tif (layer.nestedLayers && layer.nestedLayers.length > 0) {\r\n\t\t\t\t// Create children\r\n\t\t\t\titem.children = buildHighCheckTreeData(layer.nestedLayers, baseUrl);\r\n\t\t\t}\r\n\t\t\tdata.push(item);\r\n\t\t}\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n/**\r\n *\tAdd a new data to trees\r\n */\r\nvar addToTrees = function($trees, data) {\r\n\t// Initialize high check tree\r\n\t$('<div>').appendTo($trees).highCheckTree({\r\n\t\tdata: data,\r\n\t\tonCheck: function($li) {\r\n\t\t\tvar layerDesc = $li.data(\"layerDesc\");\r\n\t\t\tif (layerDesc) {\r\n\r\n\t\t\t\t// Store on $li to be able to remove later\r\n\t\t\t\t$li.data(\"layer\", Map.addLayer(layerDesc));\r\n\r\n\t\t\t\t// KML layers cannot be used as background\r\n\t\t\t\tif (layerDesc.type == \"KML\") {\r\n\t\t\t\t\t$li.find(\"> .options\").remove(); // A little bit radical..\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUnCheck: function($li) {\r\n\t\t\tvar layer = $li.data(\"layer\");\r\n\t\t\tvar layerDesc = $li.data(\"layerDesc\");\r\n\t\t\tif (layer) {\r\n\t\t\t\tMap.removeLayer(layer);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAddLi: function($li, node) {\r\n\t\t\tif (node.item.layerDesc) {\r\n\t\t\t\t$li.data(\"layerDesc\", node.item.layerDesc);\r\n\t\t\t}\r\n\t\t\tif (node.item.layer) {\r\n\t\t\t\t$li.data(\"layer\", node.item.layer);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDeleteLi: function($li) {\r\n\t\t\tvar layer = $li.data(\"layer\");\r\n\t\t\tvar layerDesc = $li.data(\"layerDesc\");\r\n\t\t\tif (layer) {\r\n\t\t\t\tMap.removeLayer(layer);\r\n\t\t\t}\r\n\r\n\t\t\tvar parentName = $li.closest('.checktree').find(' > li').attr(\"rel\");\r\n\t\t\tvar userLayers = JSON.parse(UserPrefs.get(\"userLayers\") || \"[]\");\r\n\t\t\tvar parentLayer = _.findWhere(userLayers, {\r\n\t\t\t\tname: parentName\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif ($li.attr(\"rel\") == parentLayer.name) {\r\n\t\t\t\tuserLayers.splice(userLayers.indexOf(parentLayer), 1);\r\n\t\t\t} else {\r\n\t\t\t\tnestedOp(parentLayer.data, \"title\", $li.attr(\"rel\"), \"delete\");\r\n\t\t\t}\r\n\t\t\tUserPrefs.save(\"userLayers\", JSON.stringify(userLayers));\r\n\t\t},\r\n\t\toptions: {\r\n\t\t\t\"isBackground\": {\r\n\t\t\t\tcallback: function($li, isChecked) {\r\n\t\t\t\t\tvar layer = $li.data(\"layer\");\r\n\t\t\t\t\tvar layerDesc = $li.data(\"layerDesc\");\r\n\t\t\t\t\tif (layer) {\r\n\t\t\t\t\t\tif (isChecked) {\r\n\t\t\t\t\t\t\tconsole.log(\"Becomes background\");\r\n\t\t\t\t\t\t\tMap.removeLayer(layer);\r\n\t\t\t\t\t\t\tlayerDesc.isBackground = true;\r\n\t\t\t\t\t\t\t$li.data(\"layer\", Map.addLayer(layerDesc));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.log(\"Becomes overlay\");\r\n\t\t\t\t\t\t\tMap.removeLayer(layer);\r\n\t\t\t\t\t\t\tlayerDesc.isBackground = undefined;\r\n\t\t\t\t\t\t\t$li.data(\"layer\", Map.addLayer(layerDesc));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$li.data(\"layerDesc\", layerDesc);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.warn(\"NO LAYER BUILDED\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlabelOn: \"Background\",\r\n\t\t\t\tlabelOff: \"Overlay\",\r\n\t\t\t\ttype: \"switch\"\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n *\tSave layer to user prefs\r\n */\r\nvar saveLayer = function(layer, name, baseUrl) {\r\n\t// Update user prefereneces\r\n\tvar userLayers = JSON.parse(UserPrefs.get('userLayers') || \"[]\");\r\n\tuserLayers.push({\r\n\t\tname: name,\r\n\t\tbaseUrl: baseUrl,\r\n\t\tdata: layer\r\n\t});\r\n\r\n\tUserPrefs.save('userLayers', JSON.stringify(userLayers));\r\n};\r\n\r\n/**\r\n *\tLayer manager view\r\n */\r\nvar LayerManagerView = Backbone.View.extend({\r\n\r\n\tevents: {\r\n\t\t'click #addLayer': 'onAdd',\r\n\t},\r\n\r\n\t/**\r\n\t *\tOpen popup to add layer to map\r\n\t *\tCould be: wms mapserver url, wms/wmts url of specific layer or url to KML layer\r\n\t */\r\n\tonAdd: function(event) {\r\n\r\n\t\t// Create dynamic popup\r\n\t\t$openedPopup = $(layerSearchPopup_template()).appendTo('.ui-page-active');\r\n\t\t$openedPopup.popup()\r\n\t\t\t.bind(\"popupafterclose\", function() {\r\n\t\t\t\t$(this).remove();\r\n\t\t\t});\r\n\r\n\t\t$openedPopup.popup(\"open\").trigger(\"create\");\r\n\t\tthis.centerElement($openedPopup.closest('.ui-popup-container'));\r\n\r\n\t\tvar baseUrl;\r\n\t\tvar self = this;\r\n\t\t// On search callback\r\n\t\tvar onSearch = function() {\r\n\t\t\t// Just some examples\r\n\t\t\t// Mapserver\r\n\t\t\t// baseUrl = \"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r-t.cgi\";\r\n\t\t\t// baseUrl = \"http://neowms.sci.gsfc.nasa.gov/wms/wms\";\r\n\t\t\t// baseUrl = \"http://demonstrator.telespazio.com/wmspub\";\r\n\t\t\t// baseUrl = \"http://www.ign.es/wmts/pnoa-ma?SERVICE=WMTS\";\r\n\r\n\t\t\t// Specific layer (wms/wmts)\r\n\t\t\t// baseUrl = \"http://demonstrator.telespazio.com/wmspub?LAYERS=GTOPO&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&STYLES=&FORMAT=image%2Fjpeg&SRS=EPSG%3A4326&BBOX=90,0,112.5,22.5&WIDTH=256&HEIGHT=256\"\r\n\t\t\t// baseUrl = \"https://c.tiles.maps.eox.at/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=terrain-light&TILEMATRIXSET=WGS84&TILEMATRIX=2&TILEROW=1&TILECOL=0&FORMAT=image%2Fpng\"\r\n\t\t\t// baseUrlMercator = \"https://c.tiles.maps.eox.at/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=terrain_3857&TILEMATRIXSET=g&TILEMATRIX=2&TILEROW=1&TILECOL=0&FORMAT=image%2Fpng\"\r\n\t\t\t// baseUrlMercatorOL3 = \"http://services.arcgisonline.com/arcgis/rest/services/Demographics/USA_Population_Density/MapServer/WMTS/\";\r\n\r\n\t\t\t// KML\r\n\t\t\t// baseUrl = \"http://quakes.bgs.ac.uk/earthquakes/recent_world_events.kml\"\r\n\t\t\tbaseUrl = $openedPopup.find(\"input[name='layerUrl']\").val();\r\n\t\t\tvar type = $openedPopup.find('input[name=\"capabilities-type\"]:checked').val()\r\n\t\t\tif (baseUrl != \"\") {\r\n\t\t\t\t$openedPopup.find(\".status\").hide();\r\n\t\t\t\tvar name = $openedPopup.find(\"input[name='layerName']\").val();\r\n\t\t\t\tvar layer = {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tbaseUrl: baseUrl,\r\n\t\t\t\t\ttype: type\r\n\t\t\t\t};\r\n\t\t\t\tself.addLayer(layer, {\r\n\t\t\t\t\tonError: function(message) {\r\n\t\t\t\t\t\t$openedPopup.find(\".status\").show().html(message);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonSuccess: function(layer) {\r\n\t\t\t\t\t\tsaveLayer(layer, name, baseUrl);\r\n\t\t\t\t\t\t$openedPopup.popup(\"close\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$openedPopup.find(\".status\").show().html(\"Please enter the mapserver or KML url\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Define callbacks for the given buttons\r\n\t\t$openedPopup\r\n\t\t\t.find('a[data-icon=\"search\"]').click(onSearch).end()\r\n\t\t\t.find('input[name=\"layerUrl\"]').on('input propertychange', function(event) {\r\n\t\t\t\tvar layerUrl = $(this).val();\r\n\t\t\t\tif ( layerUrl.match(/LAYER|.kml/) ) {\r\n\t\t\t\t\t// Single layer or KML url\r\n\t\t\t\t\t$openedPopup.find('form').hide();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// MapServer url, so show the box allowing user to choose type\r\n\t\t\t\t\t$openedPopup.find('form').show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t},\r\n\r\n\t/**\r\n\t *\tAdd WMS/WMTS/KML layer to GUI\r\n\t */\r\n\taddLayer: function(layer, options) {\r\n\t\tif (layer.baseUrl.endsWith(\".kml\")) {\r\n\t\t\t// KML\r\n\t\t\tvar kmlDesc = {\r\n\t\t\t\t// Use proxy URL to avoid CORS problem\r\n\t\t\t\tlocation: Configuration.get(\"proxyUrl\") + layer.baseUrl,\r\n\t\t\t\tname: layer.name,\r\n\t\t\t\ttype: \"KML\",\r\n\t\t\t\tvisible: true\r\n\t\t\t};\r\n\r\n\t\t\tvar item = buildItem(kmlDesc);\r\n\t\t\taddToTrees(this.$el.find(\"#trees\"), [item]);\r\n\r\n\t\t\tif (options && options.onSuccess)\r\n\t\t\t\toptions.onSuccess(kmlDesc);\r\n\r\n\t\t} else if (layer.baseUrl.toUpperCase().indexOf(\"LAYER=\") > 0) {\r\n\t\t\t// WMS/WMTS single url\r\n\t\t\tvar wmsLayer = MapUtils.createWmsLayerFromUrl(layer.baseUrl);\r\n\t\t\t// Override title by user defined\r\n\t\t\twmsLayer.title = layer.name;\r\n\t\t\tvar item = buildItem(wmsLayer);\r\n\t\t\tif ( item ) {\r\n\t\t\t\taddToTrees(this.$el.find(\"#trees\"), [item]);\r\n\r\n\t\t\t\tif (options && options.onSuccess)\r\n\t\t\t\t\toptions.onSuccess(wmsLayer);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"Something wrong happend when adding \" + layer.name);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// WMS mapserver url\r\n\t\t\tif (options) {\r\n\t\t\t\t// Show loading\r\n\t\t\t\t$.mobile.loading(\"show\", {\r\n\t\t\t\t\ttext: \"Loading mapserver layers..\",\r\n\t\t\t\t\ttextVisible: true\r\n\t\t\t\t});\r\n\t\t\t\toptions.onComplete = function() {\r\n\t\t\t\t\t$.mobile.loading(\"hide\", {\r\n\t\t\t\t\t\ttextVisible: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add all layers coming from GetCapabilities request\r\n\t\t\tthis.exploreCapabilities(layer, options);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tExplore capabilities of the given baseUrl\r\n\t */\r\n\texploreCapabilities: function(layer, options) {\r\n\r\n\t\tvar self = this;\r\n\t\t// Launch search request to explore capabilities\r\n\t\t$.ajax({\r\n\t\t\ttype: \"GET\",\r\n\t\t\turl: layer.baseUrl,\r\n\t\t\tdata: {\r\n\t\t\t\tSERVICE: layer.type,\r\n\t\t\t\t//VERSION: '1.1.0', // No need to negociate version, since the highest one will be returned\r\n\t\t\t\t//@see http://cite.opengeospatial.org/OGCTestData/wms/1.1.1/spec/wms1.1.1.html#basic_elements.version.negotiation\r\n\t\t\t\tREQUEST: 'GetCapabilities'\r\n\t\t\t},\r\n\t\t\tsuccess: function(doc) {\r\n\r\n\t\t\t\tvar capabilities = layer.type == \"WMS\" ? new OpenLayers.Format.WMSCapabilities() : new OpenLayers.Format.WMTSCapabilities();\r\n\t\t\t\tvar c = capabilities.read(doc);\r\n\r\n\t\t\t\tif (!c || !(c.capability || c.contents)) {\r\n\t\t\t\t\tif (options && options.onError)\r\n\t\t\t\t\t\toptions.onError(\"Error while parsing capabilities\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar layers = layer.type == \"WMS\" ? c.capability.nestedLayers : c.contents.layers;\r\n\t\t\t\t\r\n\t\t\t\t// HACK: store tileMatrixSets on layer object for WMTS : used to extract projection on build\r\n\t\t\t\tif ( layer.type == \"WMTS\" ) {\r\n\t\t\t\t\t_.map(layers, function(layer) { layer.tileMatrixSets = c.contents.tileMatrixSets });\r\n\t\t\t\t}\r\n\t\t\t\tvar tree = buildHighCheckTreeData(layers, layer.baseUrl);\r\n\r\n\t\t\t\taddToTrees(self.$el.find(\"#trees\"), [{\r\n\t\t\t\t\titem: {\r\n\t\t\t\t\t\tid: layer.name,\r\n\t\t\t\t\t\tlabel: layer.name,\r\n\t\t\t\t\t\tchecked: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchildren: tree\r\n\t\t\t\t}]);\r\n\r\n\t\t\t\tif (options && options.onSuccess)\r\n\t\t\t\t\toptions.onSuccess(layers);\r\n\t\t\t},\r\n\t\t\terror: function(r) {\r\n\t\t\t\tif (options && options.onError)\r\n\t\t\t\t\toptions.onError(\"Error while searching on \" + layer.baseUrl);\r\n\t\t\t},\r\n\t\t\tcomplete: function() {\r\n\t\t\t\tif (options && options.onComplete)\r\n\t\t\t\t\toptions.onComplete();\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t *\tCenter the given element\r\n\t */\r\n\tcenterElement: function(element) {\r\n\t\t$(element).css({\r\n\t\t\t'top': Math.abs((($(window).height() - $(element).outerHeight()) / 2) + $(window).scrollTop()),\r\n\t\t\t'left': Math.abs((($(window).width() - $(element).outerWidth()) / 2) + $(window).scrollLeft())\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t *\tAdd user layers\r\n\t *\tCurrently method use local storage, in long term in must be something more appropriated\r\n\t */\r\n\taddUserLayers: function() {\r\n\t\tvar self = this;\r\n\t\tvar userLayers = JSON.parse(UserPrefs.get(\"userLayers\") || \"[]\");\r\n\t\t_.each(userLayers, function(layer) {\r\n\t\t\t// Check if layer contains data coming from GetCapabilities\t\t\t\r\n\t\t\tif (_.isArray(layer.data)) {\r\n\t\t\t\tvar tree = buildHighCheckTreeData(layer.data, layer.baseUrl);\r\n\r\n\t\t\t\taddToTrees(self.$el.find(\"#trees\"), [{\r\n\t\t\t\t\titem: {\r\n\t\t\t\t\t\tid: layer.name,\r\n\t\t\t\t\t\tlabel: layer.name,\r\n\t\t\t\t\t\tchecked: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchildren: tree\r\n\t\t\t\t}]);\r\n\t\t\t} else if (layer.data.type == \"WMS\" || layer.data.type == \"WMTS\" || layer.data.type == \"KML\") {\r\n\t\t\t\t// Ordinary WMS/WMTS/KML layer\r\n\t\t\t\tself.addLayer(layer);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(\"Can't handle layer\");\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t *\tRender\r\n\t */\r\n\trender: function() {\r\n\r\n\t\tthis.$el.append(layerManager_template());\r\n\r\n\t\t// Add WMS/KML layers coming from configuration to GUI\r\n\t\tvar data = buildHighCheckTreeData(_.filter(Map.layers, function(layer) {\r\n\t\t\treturn layer.params.type == \"WMS\" || layer.params.type == \"KML\";\r\n\t\t}));\r\n\t\taddToTrees(this.$el.find(\"#trees\"), data);\r\n\r\n\t\tthis.addUserLayers();\r\n\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nmodule.exports = LayerManagerView;","var CreateShopcartView = require('account/view/createShopcartView');\r\n\r\n/** The rename view is very similar to the createShopcart view \r\n * except for the submit action request\r\n */\r\nvar RenameShopcartView = CreateShopcartView.extend({\r\n\r\n\t/** submit the rename query to the server */\r\n\tsubmit: function(name, options) {\r\n\t\tthis.model.getCurrent().save({\r\n\t\t\t\"name\": name\r\n\t\t}, options);\r\n\t},\r\n\r\n\t/** \r\n\t * Return an error message\r\n\t */\r\n\terrorMessage: function() {\r\n\t\treturn \"Error : Shopcart cannot be renamed.\";\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = RenameShopcartView;","var Configuration = require('configuration');\r\nvar CreateShopcartView = require('account/view/createShopcartView');\r\nvar RenameShopcartView = require('account/view/renameShopcartView');\r\nvar DuplicateShopcartView = require('account/view/duplicateShopcartView');\r\nvar ShopcartExportWidget = require('shopcart/widget/shopcartExportWidget');\r\nvar SharePopup = require('ui/sharePopup');\r\nvar shopcartManagerContent_template = require('account/template/shopcartManagerContent');\r\n\r\nvar ShopcartManagerView = Backbone.View.extend({\r\n\r\n\tinitialize: function() {\r\n\t\tthis.model.on(\"sync\", this.render, this);\r\n\t\tthis.model.on(\"error\", this.error, this);\r\n\t},\r\n\r\n\tevents: {\r\n\t\t'click label': function(event) {\r\n\t\t\tthis.model.setCurrent(this.model.get(event.currentTarget.id));\r\n\t\t},\r\n\r\n\t\t'click #new_shp': function(event) {\r\n\r\n\t\t\tvar createShopcartView = new CreateShopcartView({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\ttitle: \"New shopcart\"\r\n\t\t\t});\r\n\t\t\tcreateShopcartView.render();\r\n\t\t},\r\n\r\n\t\t'click #duplicate_shp': function(event) {\r\n\r\n\t\t\tvar duplicateShopcartView = new DuplicateShopcartView({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\ttitle: \"Duplicate shopcart\"\r\n\t\t\t});\r\n\t\t\tduplicateShopcartView.render();\r\n\t\t},\r\n\r\n\t\t'click #rename_shp': function(event) {\r\n\r\n\t\t\tvar renameShopcartView = new RenameShopcartView({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\ttitle: \"Rename shopcart\"\r\n\t\t\t});\r\n\t\t\trenameShopcartView.render();\r\n\t\t},\r\n\r\n\t\t//called when the share button is clicked.\r\n\t\t'click #share_shp': function(event) {\r\n\r\n\t\t\tSharePopup.open({\r\n\t\t\t\turl: Configuration.serverHostName + (window.location.pathname) + this.model.getShopcartSharedURL(),\r\n\t\t\t\tpositionTo: '#share_shp'\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t'click #delete_shp': function(event) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.model.getCurrent().destroy()\r\n\t\t\t\t.done(function() {\r\n\t\t\t\t\tself.model.setCurrent(self.model.at(0));\r\n\t\t\t\t\tself.render();\r\n\t\t\t\t})\r\n\t\t\t\t.fail(function(xhr, textStatus, errorThrown) {\r\n\t\t\t\t\tself.showMessage(errorThrown);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t//added export as in the shopcart item view\r\n\t\t'click #export_shp': function(event) {\r\n\r\n\t\t\tvar shopcartExportWidget = new ShopcartExportWidget();\r\n\t\t\tshopcartExportWidget.open();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Refresh the view size\r\n\t */\r\n\trefreshSize: function() {\r\n\t\tvar parentOffset = this.$el.offset();\r\n\t\tvar $content = this.$el.find('#shopcartListDiv');\r\n\r\n\t\tvar height = $(window).height() - (parentOffset.top + this.$el.outerHeight()) + $content.height() - 50;\r\n\r\n\t\t$content.css('max-height', height);\r\n\t},\r\n\r\n\trender: function() {\r\n\t\tvar mainContent = shopcartManagerContent_template({\r\n\t\t\tshopcarts: this.model\r\n\t\t});\r\n\t\tthis.$el.html(mainContent);\r\n\r\n\t\t// Select the current one\r\n\t\tif (this.model.getCurrent()) {\r\n\t\t\tvar currentShopcartSelect = \"#\" + this.model.getCurrent().id + \"_input\";\r\n\t\t\tthis.$el.find(currentShopcartSelect).attr('checked', true);\r\n\t\t}\r\n\r\n\t\tthis.$el.trigger(\"create\");\r\n\r\n\t\tthis.refreshSize();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/** display the error message if any */\r\n\tshowMessage: function(message) {\r\n\t\tif (this.timeOut) {\r\n\t\t\tclearTimeout(this.timeOut);\r\n\t\t}\r\n\r\n\t\t$(\"#errorMessageDiv\")\r\n\t\t\t.html(message)\r\n\t\t\t.slideDown();\r\n\r\n\t\t// Hide status message after a given time\r\n\t\tthis.timeOut = setTimeout(function() {\r\n\t\t\t$(\"#errorMessageDiv\").slideUp();\r\n\t\t}, Configuration.data.dataAccessRequestStatuses.messagefadeOutTime);\r\n\t},\r\n\r\n\t/**\r\n\t * this is a callback method to display an error message when an error occurs during \r\n\t * shopcart list retrieving. \r\n\t */\r\n\terror: function() {\r\n\t\tthis.$el.html(\"<div class='ui-error-message'><p><b> Failure: Error when loading the shopcart list.</p></b>\" +\r\n\t\t\t\"<p><b> Please check the interface with the server.</p></b></div>\");\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = ShopcartManagerView;","var UserPrefs = require('userPrefs');\r\nvar userPrefs_template = require('account/template/userPrefsContent');\r\nvar Configuration = require('configuration');\r\n\r\n/**\r\n * The model is the UserPrefs singleton.\r\n * Simple Implemetantion with only the reset of the preferences \r\n * without knowledge on the type of the feature to remove.\r\n */\r\nvar UserPrefsView = Backbone.View.extend({\r\n\r\n\tinitialize: function() {\r\n\t\tUserPrefs.on(\"addedPreference removedPreference\", this.refresh, this);\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t\t'click #clearPrefs': function(event) {\r\n\t\t\tUserPrefs.reset();\r\n\t\t}\r\n\t},\r\n\r\n\trender: function() {\r\n\r\n\t\tthis.$el.append(userPrefs_template({\r\n\t\t\ttheme: Configuration.localConfig.theme,\r\n\t\t\tUserPrefs: UserPrefs\r\n\t\t}));\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tthis.$el.empty();\r\n\t\tthis.render();\r\n\t}\r\n});\r\n\r\nmodule.exports = UserPrefsView;","/**\r\n * Configuration module\r\n */\r\n\r\n/**\r\n * Helper function to remove comments from the JSON file\r\n */\r\nvar removeComments = function(string) {\r\n\tvar starCommentRe = new RegExp(\"/\\\\\\*(.|[\\r\\n])*?\\\\\\*/\", \"g\");\r\n\tvar slashCommentRe = new RegExp(\"(^[\\/]|[^:]\\/)\\/.*[\\r|\\n]\", \"g\");\r\n\tstring = string.replace(slashCommentRe, \"\");\r\n\tstring = string.replace(starCommentRe, \"\");\r\n\r\n\treturn string;\r\n};\r\n\r\n/**\r\n * Helper recursive function to get a parameter from the configuration data\r\n */\r\nvar _getValue = function(object, property, defaultValue) {\r\n\tif (object) {\r\n\t\tvar value = null;\r\n\t\tvar kv = property.split(\"=\"); // Split by \"=\" to handle arrays\r\n\t\tif (kv.length == 2) {\r\n\t\t\t// Array\r\n\t\t\tvalue = _.find(object, function(item) {\r\n\t\t\t\treturn item[kv[0]] == kv[1];\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// Object\r\n\t\t\tvalue = object[property];\r\n\t\t}\r\n\r\n\t\tif (typeof value != 'undefined') {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\treturn defaultValue;\r\n};\r\n\r\nvar configuration = {\r\n\r\n\t// The base url to retreive the configurations\r\n\turl: '../conf',\r\n\r\n\t// The base server url\r\n\tbaseServerUrl: '/ngeo',\r\n\r\n\t// The server host name\r\n\tserverHostName: window.location.protocol + '//' + window.location.host,\r\n\r\n\t// Local configuration\r\n\tlocalConfig: null,\r\n\r\n\t// Configuration\r\n\tdata: {},\r\n\r\n\t// Load configurations\r\n\tload: function() {\r\n\t\tvar externalData = {};\r\n\t\treturn $.when(\r\n\t\t\t// Local configuration\r\n\t\t\t$.ajax({\r\n\t\t\t\t//url: this.serverHostName + \"/client-dev/conf/localConfiguration.json\",\r\n\t\t\t\turl: this.url + \"/localConfiguration.json\",\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tsuccess: function(data) {\r\n\t\t\t\t\tconfiguration.localConfig = data;\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\t\tconsole.log(\"Local configuration not found \" + textStatus + ' ' + errorThrown);\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\t// Server configuration\r\n\t\t\t$.when(\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: this.url + \"/configuration.json\",\r\n\t\t\t\t\tdataType: 'text',\r\n\t\t\t\t\tsuccess: function(data) {\r\n\t\t\t\t\t\tconfiguration.setConfigurationData(data);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\t\t\tconsole.log(\"Configuration not found \" + textStatus + ' ' + errorThrown);\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: this.baseServerUrl + \"/webClientConfigurationData\",\r\n\t\t\t\t\tdataType: 'text',\r\n\t\t\t\t\tsuccess: function(data) {\r\n\t\t\t\t\t\texternalData = data;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\t\t\tconsole.log(\"Configuration not found \" + textStatus + ' ' + errorThrown);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t).then(function(){\r\n\t\t\t\t// Override our's server configuration with one coming from WEBS\r\n\t\t\t\tconfiguration.buildServerConfiguration(externalData);\r\n\t\t\t})\r\n\t\t);\r\n\t},\r\n\r\n\tsetConfigurationData: function(configurationData) {\r\n\t\tconfiguration.data = JSON.parse(removeComments(configurationData));\r\n\t},\r\n\r\n\t/**\r\n\t *\tBuild server configuration\r\n\t */\r\n\tbuildServerConfiguration: function(externalData) {\r\n\t\t// Remove comments \r\n\t\texternalData = JSON.parse(removeComments(externalData));\r\n\r\n\t\t// Merge configurations with priority to configuration coming from server\r\n\t\t$.extend(true, configuration.data, externalData);\r\n\t},\r\n\r\n\t// Get a configuration parameter\r\n\tget: function(path, defaultValue) {\r\n\t\treturn this.data ? this.getFromPath(this.data, path, defaultValue) : defaultValue;\r\n\t},\r\n\r\n\t/**\r\n\t *\tGet mapped property for the given object\r\n\t *\tEx: with \"propertyId\": \"path.in.the.object\" defined in configuration.json\r\n\t *\tand object = { path: { in: { the: { object: \"someValue\" } } } }\r\n\t *\tBy calling:\r\n\t *\t>Configuration.getMappedProperty(object, \"propertyId\");\r\n\t *\tYou will get:\r\n\t *\t>\"someValue\"\r\n\t *\r\n\t *\t@param object\r\n\t *\t\tObject from which you need to extract the property\r\n\t *\t@param propertyId\r\n\t *\t\tThe property id which is defined in configuration.json in serverPropertyMapper object\r\n\t *\t@param defaultValue\r\n\t *\t\tThe default value if the path wasn't found\r\n\t */\r\n\tgetMappedProperty: function(object, propertyId, defaultValue) {\r\n\t\t//var propertyPath = this.get(\"serverPropertyMapper.\"+propertyId);\r\n\t\tvar propertyPath = this.getFromPath(this.localConfig, \"serverPropertyMapper.\" + propertyId);\r\n\t\tif (propertyPath) {\r\n\t\t\tvar value = this.getFromPath(object, propertyPath, defaultValue);\r\n\t\t\tif (propertyId == \"browses\" && !_.isArray(value)) {\r\n\t\t\t\t// HACK: since WEBS sends browses as an Object when there is only one browse\r\n\t\t\t\t// we don't want to change all the logic in WEBC so convert it to array here for now\r\n\t\t\t\t// For more details see NGEO-2182 (in comments)\r\n\t\t\t\tvalue = [value];\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t} else {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tSet mapped property\r\n\t *\t@see getMappedProperty for more\r\n\t */\r\n\tsetMappedProperty: function(object, propertyId, value) {\r\n\t\t//var propertyPath = this.get(\"serverPropertyMapper.\"+propertyId);\r\n\t\tvar propertyPath = this.getFromPath(this.localConfig, \"serverPropertyMapper.\" + propertyId);\r\n\t\tif (propertyPath) {\r\n\t\t\tvar parentPath = propertyPath.substr(propertyPath, propertyPath.lastIndexOf(\".\"));\r\n\t\t\tvar prop = propertyPath.substr(propertyPath.lastIndexOf(\".\") + 1);\r\n\t\t\tvar parentValue = this.getFromPath(object, parentPath, null)\r\n\t\t\tif (parentValue) {\r\n\t\t\t\tparentValue[prop] = value;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(parentPath + \" doesn't exist\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.warn(propertyId + \" wasn't found in serverPropertyMapper\");\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tHelper imperative function to get a parameter from the configuration data\r\n\t *\t(much faster than recursive one...)\r\n\t */\r\n\tgetFromPath: function(object, path, defaultValue) {\r\n\t\tvar names = path.split('.');\r\n\t\tvar obj = object;\r\n\t\tfor (var i = 0; obj && i < names.length - 1; i++) {\r\n\t\t\tobj = _getValue(obj, names[i]);\r\n\t\t}\r\n\r\n\t\treturn _getValue(obj, names[names.length - 1], defaultValue);\r\n\t}\r\n};\r\n\r\nmodule.exports = configuration;","var Configuration = require('configuration');\r\n\r\n/**\r\n * This module deals with the creation and submission of a generic data access request\r\n */\r\nvar DataAccessRequest = {\r\n\r\n  id: \"\", //data access request id returned by the server \r\n\r\n  step: 0, //step is a counter of request steps. It is set to 0 when no request has been sent\r\n  // it is set to 1 when a request has been sent\r\n\r\n  requestStage: \"\",\r\n\r\n  downloadLocation: {\r\n    DownloadManagerId: \"\",\r\n    DownloadDirectory: \"\"\r\n  },\r\n\r\n  createBulkOrder: false,\r\n\r\n  firstRequest: {}, //keeps track of the first stage request in order to validate the second stage request \r\n\r\n\r\n  initialize: function() {\r\n\r\n    this.step = 0;\r\n    this.id = \"\";\r\n    this.requestStage = Configuration.localConfig.dataAccessRequestStatuses.validationRequestStage;\r\n    this.downloadLocation = {\r\n      DownloadManagerId: \"\",\r\n      DownloadDirectory: \"\"\r\n    };\r\n\r\n    this.resetRequest();\r\n  },\r\n\r\n  /** Submit the request to the server */\r\n  submit: function() {\r\n\r\n    //check that the request is valid before sending it to the server\r\n    if (!this.isValid()) {\r\n      return;\r\n    }\r\n\r\n    var self = this;\r\n\r\n    return $.ajax({\r\n      data: JSON.stringify(self.getRequest()),\r\n      url: self.url,\r\n      type: 'PUT',\r\n      dataType: 'json',\r\n      contentType: 'application/json',\r\n      success: function(data) {\r\n\r\n        console.log(\" SUCCESS : Received Validation Response from the server :\");\r\n        console.log(data);\r\n\r\n        //check the server response status with the configured server response statuses  \r\n        var statusesConfig = Configuration.localConfig.dataAccessRequestStatuses;\r\n        var validStatusesConfig = statusesConfig.validStatuses;\r\n\r\n        switch (data.dataAccessRequestStatus.status) {\r\n\r\n          case validStatusesConfig.validatedStatus.value:\r\n\r\n            //initial stage\r\n            if (self.step == 0 && self.id == \"\" && self.requestStage == statusesConfig.validationRequestStage) {\r\n              self.step = 1;\r\n              self.id = data.dataAccessRequestStatus.ID;\r\n              self.requestStage = statusesConfig.confirmationRequestStage;\r\n\r\n              self.validationProcessing(data.dataAccessRequestStatus);\r\n\r\n              self.trigger('SuccessValidationRequest', data.dataAccessRequestStatus.message, validStatusesConfig.validatedStatus.message);\r\n\r\n            } else {\r\n              self.trigger('FailureRequest');\r\n\r\n            }\r\n            break;\r\n\r\n          case validStatusesConfig.bulkOrderStatus.value:\r\n\r\n            if (self.step == 0 && self.requestStage == statusesConfig.validationRequestStage) {\r\n              self.step = 1;\r\n              self.id = data.dataAccessRequestStatus.ID;\r\n              //Bulk order is considered add the createBulkOrder\r\n              self.createBulkOrder = true;\r\n              self.requestStage = statusesConfig.confirmationRequestStage;\r\n\r\n              self.trigger('SuccessValidationRequest', data.dataAccessRequestStatus.message, validStatusesConfig.bulkOrderStatus.message);\r\n            } else {\r\n              self.trigger('FailureRequest');\r\n            }\r\n\r\n            break;\r\n\r\n          case validStatusesConfig.pausedStatus.value:\r\n          case validStatusesConfig.inProgressStatus.value:\r\n\r\n            if (self.step == 1 /*&& self.id == data.dataAccessRequestStatus.ID*/ &&\r\n              self.requestStage == statusesConfig.confirmationRequestStage) { //2 steps done\r\n              self.trigger('SuccessConfirmationRequest', data.dataAccessRequestStatus.message, validStatusesConfig.inProgressStatus.message);\r\n            } else {\r\n              self.trigger('FailureRequest');\r\n            }\r\n            break;\r\n\r\n            /*\t\t\t\t\t // FL : this status should never happen?\r\n  \t\t\t\t\t\t\t\t\t\t\tcase validStatusesConfig.pausedStatus.value:\r\n  \t\t\t\t\t\t\t\t\t\t\t\t  self.serverResponse = validStatusesConfig.pausedStatus.message;\r\n  \t\t\t\t\t\t\t\t\t\t\t\t  self.trigger('FailureValidationRequest');\r\n  \t\t\t\t\t\t\t\t\t\t\t\t  break;\r\n  \t\t\t\t\t\t\t\t\t\t\t\t  \r\n  \t\t\t\t\t\t\t\t\t\t\t  case validStatusesConfig.cancelledStatus.value:\r\n  \t\t\t\t\t\t\t\t\t\t\t\t  self.serverResponse = validStatusesConfig.cancelledStatus.message;\r\n  \t\t\t\t\t\t\t\t\t\t\t\t  self.trigger('FailureValidationRequest');\r\n  \t\t\t\t\t\t\t\t\t\t\t\t  break;*/\r\n\r\n          default:\r\n            self.serverResponse = Configuration.localConfig.dataAccessRequestStatuses.unExpectedStatusError;\r\n            self.trigger('FailureRequest');\r\n            break;\r\n        }\r\n\r\n      },\r\n\r\n      error: function(jqXHR, textStatus, errorThrown) {\r\n        if (jqXHR.status == 0) {\r\n          location.reload();\r\n        } else {\r\n          console.log(\"ERROR when posting DAR :\" + textStatus + ' ' + errorThrown);\r\n          self.serverResponse = Configuration.localConfig.dataAccessRequestStatuses.requestSubmissionError;\r\n          self.trigger('FailureRequest');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n//add events method to object\r\n_.extend(DataAccessRequest, Backbone.Events);\r\n\r\nmodule.exports = DataAccessRequest;","/**\r\n * Download managers model \r\n * The DownloadManagers is a singleton to be used for DAR and Download managers \r\n * assignment and monitoring \r\n */\r\n\r\nvar Configuration = require('configuration');\r\nvar SearchResults = require('logger');\r\nvar Logger = require('dataAccess/model/dataAccessRequest');\r\n\r\nvar DownloadManagers = Backbone.Model.extend({\r\n\r\n\tdefaults: {\r\n\t\tdownloadmanagers: []\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\t\t// The base url to retreive the download managers list\r\n\t\tthis.url = Configuration.baseServerUrl + '/downloadManagers';\r\n\t\tthis.listenTo(this, \"error\", this.onError);\r\n\t},\r\n\r\n\t/**\r\n\t * Call when the model cannot be fetched from the server\r\n\t */\r\n\tonError: function(model, response) {\r\n\t\tif (response.status == 0) {\r\n\t\t\tlocation.reload();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Get a download manager user friendly name given its id\r\n\t */\r\n\tgetDownloadManagerName: function(id) {\r\n\t\tvar dm = _.findWhere(this.get(\"downloadmanagers\"), {\r\n\t\t\tdownloadManagerId: id\r\n\t\t});\r\n\t\treturn dm ? dm.downloadManagerFriendlyName : id;\r\n\t},\r\n\r\n\t/**\r\n\t * Get a download manager status given its id\r\n\t */\r\n\tgetDownloadManagerStatus: function(id) {\r\n\t\tvar dm = _.findWhere(this.get(\"downloadmanagers\"), {\r\n\t\t\tdownloadManagerId: id\r\n\t\t});\r\n\t\treturn dm ? dm.status : null;\r\n\t},\r\n\r\n\t/** \r\n\t * Submit the DM change status request to the server.\r\n\t */\r\n\trequestChangeStatus: function(dmID, newStatus) {\r\n\r\n\t\tvar dm = _.findWhere(this.get(\"downloadmanagers\"), {\r\n\t\t\tdownloadManagerId: dmID\r\n\t\t});\r\n\t\tif (!dm)\r\n\t\t\treturn;\r\n\r\n\t\tvar self = this;\r\n\t\tvar dmChangeStatusURL = self.url + '/' + dmID + '/changeStatus?new_status=' + newStatus;\r\n\t\tvar prevStatus = dm.status;\r\n\r\n\t\treturn $.ajax({\r\n\t\t\t\turl: dmChangeStatusURL,\r\n\t\t\t\ttype: 'GET',\r\n\t\t\t\tdataType: 'json'\r\n\t\t\t})\r\n\t\t\t.done(function(data) {\r\n\t\t\t\tdm.status = data.status;\r\n\t\t\t\tself.trigger(\"status:change\");\r\n\t\t\t})\r\n\t\t\t.fail(function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\tif (jqXHR.status == 0) {\r\n\t\t\t\t\tlocation.reload();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tLogger.error(\"Cannot change downloand manager status request :\" + textStatus + ' ' + errorThrown);\r\n\t\t\t\t\t// restore previous status\r\n\t\t\t\t\tdm.status = prevStatus;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = new DownloadManagers();"," var Configuration = require('configuration');\r\n var SearchResults = require('searchResults/model/searchResults');\r\n var DataAccessRequest = require('dataAccess/model/dataAccessRequest');\r\n\r\n /**\r\n  * This module deals with the creation and submission of simple data access requests \r\n  * It extends DataAccessRequest module\r\n  */\r\n var SimpleDataAccessRequest = {\r\n\r\n   url: Configuration.baseServerUrl + \"/simpleDataAccessRequest\",\r\n\r\n   name: \"download\",\r\n\r\n   rejectedProductsNB: 0, //nb of products checked but not having a url \r\n\r\n   productURLs: [],\r\n\r\n   totalSize: 0,\r\n\r\n   /**\r\n    * Reset specific parameters of a simple DAR\r\n    */\r\n   resetRequest: function() {\r\n\r\n     this.rejectedProductsNB = 0;\r\n     this.productURLs = [];\r\n     this.hostedProcessId = null;\r\n     this.name = \"download\";\r\n   },\r\n\r\n   /**\r\n\t *\tGet dataset included in request\r\n\t */\r\n\tgetDataType: function() {\r\n\t\tvar datasetNameRegExp = new RegExp(/catalogue\\/(\\w+)\\//);\r\n\t\tvar match = datasetNameRegExp.exec(this.productURLs[0]); // Take catalogue of first product for now\r\n\t\tif ( match ) {\r\n\t\t\treturn match[1];\r\n\t\t}\r\n\t\tconsole.warn(\"Can't extract datatype from product url \" + this.productURLs[0]);\r\n\t\treturn null;\r\n\t},\r\n\r\n   /**\r\n    * Get the current request to submit\r\n    */\r\n   getRequest: function() {\r\n\r\n     // The JSON to send to the server\r\n     if (this.hostedProcessId) {\r\n       this.url = Configuration.baseServerUrl + \"/hostedProcessDataAccessRequest\";\r\n       var params = [];\r\n       // Add hosted processing parameters\r\n       for (var i = 0; i < this.productURLs.length; i++) {\r\n         params.push({\r\n           name: \"productURL\",\r\n           value: this.productURLs[i]\r\n         });\r\n       }\r\n       params = params.concat(this.parameters);\r\n\r\n       var request = {\r\n         hostedProcessDataAccessRequest: {\r\n           requestStage: this.requestStage,\r\n           hostedProcessId: this.hostedProcessId,\r\n           downloadLocation: this.downloadLocation,\r\n           parameter: params,\r\n           name: this.name\r\n         }\r\n       };\r\n     } else {\r\n       this.url = Configuration.baseServerUrl + \"/simpleDataAccessRequest\";\r\n\r\n       var request = {\r\n         SimpleDataAccessRequest: {\r\n           requestStage: this.requestStage,\r\n           downloadLocation: this.downloadLocation,\r\n           productURLs: [],\r\n           name: this.name\r\n         }\r\n       };\r\n       // Add create bulk order if needed\r\n       if (this.createBulkOrder) {\r\n         request.SimpleDataAccessRequest.createBulkOrder = true;\r\n       }\r\n\r\n       // Transform product URLs\r\n       for (var i = 0; i < this.productURLs.length; i++) {\r\n         request.SimpleDataAccessRequest.productURLs.push({\r\n           productURL: this.productURLs[i]\r\n         });\r\n       }\r\n     }\r\n\r\n     console.log(request);\r\n\r\n     return request;\r\n   },\r\n\r\n   /** \r\n    * Get message the display when a simple DAT creation is triggered\r\n    */\r\n   getSpecificMessage: function() {\r\n\r\n     /*\t\tvar collapsibleContent = \"<h5>Selected Products : \" + (this.productURLs.length + this.rejectedProductsNB) + \"<h5>\";\r\n  \t\t\t\t\r\n  \t\t\t\tif (this.rejectedProductsNB == 0){\r\n  \t\t\t\t\tcollapsibleContent += \"<p>All the selected items have been included in the request.<p>\";\r\n  \t\t\t\t}else{\r\n  \t\t\t\t\tcollapsibleContent += \"<p> \" + this.rejectedProductsNB + \" products are not included in the request since they do not have a url.\";\r\n  \t\t\t\t}\r\n  \t\t\t\t\r\n  \t\t\t\treturn collapsibleContent; */\r\n\r\n     if (this.productURLs.length == 1) {\r\n       return \"<p>One product is included in the request.</p>\";\r\n     } else {\r\n       return \"<p>\" + this.productURLs.length + \" products are included in the request.</p>\";\r\n     }\r\n   },\r\n\r\n\r\n   /** \r\n    * Set the list of products for the DAR \r\n    * if the file name is empty the product is rejected\r\n    */\r\n   setProducts: function(products) {\r\n     this.productURLs = SearchResults.getProductUrls(products);\r\n     this.rejectedProductsNB = products.length - this.productURLs.length;\r\n   },\r\n\r\n   /**\r\n    * Check whether the request is valid or not\r\n    */\r\n   isValid: function() {\r\n\r\n     var dataAccessConfig = Configuration.localConfig.dataAccessRequestStatuses;\r\n\r\n     // If request not valid when no download manager then display the specific message\r\n     // the validate button is not disabled since when the user selects a download manager the request\r\n     if (this.downloadLocation.DownloadManagerId == \"\") {\r\n       this.serverResponse = dataAccessConfig.invalidDownloadManagersError;\r\n       return false;\r\n     }\r\n\r\n     // Request not valid when no product urls set then display the specific message\r\n     if (this.productURLs.length == 0) {\r\n       this.serverResponse = Configuration.localConfig.simpleDataAccess.invalidProductURLsError;\r\n       this.trigger('RequestNotValidEvent');\r\n       return false;\r\n     }\r\n\r\n     // Initial request : nominal case\r\n     if (this.step == 0 &&\r\n       this.id == \"\" &&\r\n       this.requestStage == dataAccessConfig.validationRequestStage) {\r\n       return true;\r\n     }\r\n\r\n     // Second stage submission with and without bulk order\r\n     if (this.step == 1 &&\r\n       this.id != \"\" &&\r\n       this.requestStage == dataAccessConfig.confirmationRequestStage) {\r\n       return true;\r\n     }\r\n\r\n     // Disable the request validation if the request is not valid\r\n     this.trigger('RequestNotValidEvent');\r\n\r\n     return false;\r\n   },\r\n\r\n   /** \r\n    * Specific simple DAR additional processing after validation request\r\n    */\r\n   validationProcessing: function(dataAccessRequestStatus) {\r\n\r\n     // Calculate the total download estimated size  \r\n     this.totalSize = 0;\r\n     var productStatuses = dataAccessRequestStatus.productStatuses;\r\n     for (var i = 0; i < productStatuses.length; i++) {\r\n       if (productStatuses[i] && productStatuses[i].expectedSize) {\r\n         this.totalSize += parseInt(productStatuses[i].expectedSize);\r\n       }\r\n     }\r\n   }\r\n }\r\n\r\n // Add DataAccessRequest methods to SimpleDataAccessRequest\r\n _.extend(SimpleDataAccessRequest, DataAccessRequest);\r\n\r\n module.exports = SimpleDataAccessRequest;","var Configuration = require('configuration');\r\nvar DataAccessRequest = require('dataAccess/model/dataAccessRequest');\r\nvar DatasetSearch = require('search/model/datasetSearch');\r\n\r\n\r\n// A constant\r\nvar ONE_MONTH = 24 * 30 * 3600 * 1000;\r\n\r\n/**\r\n * This module deals with the creation and submission of a Standing order data access request\r\n * It extends DataAccessRequest module.\r\n */\r\nvar StandingOrderDataAccessRequest = {\r\n\r\n\turl: Configuration.baseServerUrl + \"/standingOrderDataAccessRequest\",\r\n\r\n\tOpenSearchURL: \"\",\r\n\r\n\tstartDate: new Date(),\r\n\r\n\tendDate: new Date(new Date().getTime() + ONE_MONTH),\r\n\r\n\ttimeDriven: false,\r\n\r\n\trepeatPeriod: 0,\r\n\r\n\tslideAcquisitionTime: false,\r\n\r\n\tDownloadOptions: {},\r\n\r\n\tSchedulingOptions: {},\r\n\r\n\tname: \"subscription\",\r\n\r\n\tresetRequest: function() {\r\n\r\n\t\tthis.OpenSearchURL = \"\";\r\n\t\tthis.DownloadOptions = {};\r\n\t\tthis.SchedulingOptions = {};\r\n\t\tthis.hostedProcessId = null;\r\n\t\tthis.name = \"subscription\";\r\n\t},\r\n\r\n\t/**\r\n\t *\tGet dataset included in request\r\n\t */\r\n\tgetDataType: function() {\r\n\t\tvar datasetNameRegExp = new RegExp(/catalogue\\/(\\w*)\\//)\r\n\t\treturn datasetNameRegExp.exec(this.OpenSearchURL)[1];\r\n\t},\r\n\r\n\t/** \r\n\t * Build the request to submit\r\n\t */\r\n\tgetRequest: function() {\r\n\r\n\t\tvar request = {\r\n\t\t\tStandingOrderDataAccessRequest: {\r\n\t\t\t\trequestStage: this.requestStage,\r\n\t\t\t\tOpenSearchURL: this.OpenSearchURL,\r\n\t\t\t\tDownloadOptions: this.DownloadOptions,\r\n\t\t\t\tSchedulingOptions: this.getSchedulingOptions(),\r\n\t\t\t\tdownloadLocation: this.downloadLocation,\r\n\t\t\t\tname: this.name\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Add hosted processing parameters if defined\r\n\t\tif (this.hostedProcessId) {\r\n\t\t\trequest.StandingOrderDataAccessRequest.hostedProcessId = this.hostedProcessId;\r\n\t\t\trequest.StandingOrderDataAccessRequest.parameter = this.parameters;\r\n\t\t}\r\n\r\n\t\t// If createBulkOrder is set to true after a validation request\r\n\t\t// take into account the createBulkOrder for the confirmation request\r\n\t\tif (this.createBulkOrder) {\r\n\t\t\trequest.StandingOrderDataAccessRequest.createBulkOrder = true;\r\n\t\t}\r\n\r\n\t\t// console.log(request);\r\n\t\treturn request;\r\n\t},\r\n\r\n\t/** \r\n\t * The shared standing order url contains :\r\n\t * \t1- all the search parameters as for as for a shared search url. \r\n\t *  2- scheduling options parameters relative to a standing order request\r\n\t */\r\n\tgetSharedURL: function(standingOrder) {\r\n\r\n\t\tvar datasetId = standingOrder.dataset.get(\"datasetId\");\r\n\t\tvar url = \"#data-services-area/sto/\" + datasetId + '?';\r\n\r\n\t\turl += standingOrder.getOpenSearchParameters(datasetId);\r\n\r\n\t\t// Get the scheduling object either the STO is TimeDriven or Data-Driven\r\n\t\tvar options = this.timeDriven ? this.getSchedulingOptions().TimeDriven : this.getSchedulingOptions().DataDriven;\r\n\t\turl += \"&\" + $.param(options);\r\n\r\n\t\treturn url;\r\n\t},\r\n\r\n\t/** \r\n\t * Method used in the case of a shared standing order url.\r\n\t * It fill in the STO request with the given values.\r\n\t */\r\n\tpopulateModelfromURL: function(query, standingOrder) {\r\n\r\n\t\tthis.initialize();\r\n\r\n\t\tvar vars = query.split(\"&\");\r\n\r\n\t\tfor (var i = 0; i < vars.length; i++) {\r\n\r\n\t\t\tvar pair = vars[i].split(\"=\");\r\n\r\n\t\t\tswitch (pair[0]) {\r\n\r\n\t\t\t\tcase \"startDate\":\r\n\t\t\t\t\tthis.startDate = Date.fromISOString(pair[1]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"endDate\":\r\n\t\t\t\t\tthis.endDate = Date.fromISOString(pair[1]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"repeatPeriod\":\r\n\t\t\t\t\tthis.repeatPeriod = pair[1];\r\n\t\t\t\t\tthis.timeDriven = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"slideAcquisitionTime\":\r\n\t\t\t\t\tthis.slideAcquisitionTime = (pair[1] == \"true\"); //set boolean value not the string !\r\n\t\t\t\t\tthis.timeDriven = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set open search url\r\n\t\tthis.OpenSearchURL = standingOrder.getOpenSearchURL();\r\n\t\t// Set selected download options\r\n\t\tthis.DownloadOptions = standingOrder.getSelectedDownloadOptions();\r\n\t},\r\n\r\n\t/**\r\n\t * Build the Scheduling option property depending on the STO type\r\n\t */\r\n\tgetSchedulingOptions: function() {\r\n\r\n\t\tif (this.timeDriven) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tTimeDriven: {\r\n\t\t\t\t\tstartDate: this.startDate.toISODateString(),\r\n\t\t\t\t\tendDate: this.endDate.toISODateString(),\r\n\t\t\t\t\trepeatPeriod: this.repeatPeriod,\r\n\t\t\t\t\tslideAcquisitionTime: this.slideAcquisitionTime\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tDataDriven: {\r\n\t\t\t\t\tstartDate: this.startDate.toISODateString(),\r\n\t\t\t\t\tendDate: this.endDate.toISODateString()\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\t/** \r\n\t * Message to display as information \r\n\t * Display nothing for STO\r\n\t */\r\n\tgetSpecificMessage: function() {\r\n\r\n\t\t//\t\tvar collapsibleContent = \"<h5> Standing Order info <h5>\";\r\n\t\t//\t\t\r\n\t\t//\t\tcollapsibleContent += \"<p> OpenSearchURL: \" + this.OpenSearchURL + \"<p>\";\r\n\t\t//\t\t\r\n\t\t//\t\tif (this.DownloadOptions === {} ){\r\n\t\t//\t\t\tcollapsibleContent += \"<p> There are no download Options <p>\";\r\n\t\t//\t\t\r\n\t\t//\t\t}else{\t\r\n\t\t//\r\n\t\t//\t\t\t_.each(this.DownloadOptions, function(value, key){\r\n\t\t//\t\t\t\tcollapsibleContent += \"<p>\" + value + \" : \" + key + \"<p>\";\r\n\t\t//\t\t\t});\r\n\t\t//\t\t}\r\n\t\t//\t\t\r\n\t\t//\t\treturn collapsibleContent; \r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Check whether the request is valid or not\r\n\t */\r\n\tisValid: function() {\r\n\r\n\t\tvar dataAccessConfig = Configuration.localConfig.dataAccessRequestStatuses;\r\n\t\tvar standingOrderConfig = Configuration.localConfig.standingOrder;\r\n\r\n\t\t//if request not valid when no download manager then display the specific message\r\n\t\t//the validate button is not disabled since when the user selects a download manager the request\r\n\t\tif (this.downloadLocation.DownloadManagerId == \"\") {\r\n\t\t\tthis.serverResponse = dataAccessConfig.invalidDownloadManagersError;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this.OpenSearchURL == \"\" || !this.OpenSearchURL) {\r\n\t\t\tthis.serverResponse = standingOrderConfig.invalidOpenSearchURLError;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!this.DownloadOptions) {\r\n\t\t\tthis.serverResponse = standingOrderConfig.invalidDownloadOptionsError;\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar computedShedulingOptions = this.getSchedulingOptions();\r\n\r\n\t\t//initial request : nominal case\r\n\t\t//slideAcquisitionTime is a boolean and repeatPeriod is number so compare with undefined\r\n\t\t//to avoid 0/boolean false tests \r\n\t\tif (this.step == 0 &&\r\n\t\t\tthis.id == \"\" &&\r\n\t\t\tthis.requestStage == dataAccessConfig.validationRequestStage &&\r\n\t\t\tthis.OpenSearchURL && this.DownloadOptions &&\r\n\t\t\tthis.SchedulingOptions &&\r\n\t\t\t((computedShedulingOptions.DataDriven && computedShedulingOptions.DataDriven.endDate) ||\r\n\t\t\t\t(computedShedulingOptions.TimeDriven && computedShedulingOptions.TimeDriven.endDate &&\r\n\t\t\t\t\tcomputedShedulingOptions.TimeDriven.repeatPeriod != undefined &&\r\n\t\t\t\t\tcomputedShedulingOptions.TimeDriven.slideAcquisitionTime != undefined))) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t//second stage submission with and without bulk order\r\n\t\t//no need to test the other properties because they cannot be changed in the meantime\r\n\t\tif (this.step == 1 &&\r\n\t\t\tthis.id != \"\" &&\r\n\t\t\tthis.requestStage == dataAccessConfig.confirmationRequestStage\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t//disable the request validation if the request is not valid\r\n\t\tthis.trigger('RequestNotValidEvent');\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Specific Standing order additional processing after validation request\r\n\t */\r\n\tvalidationProcessing: function(dataAccessRequestStatus) {\r\n\t\t//there is nothing specific for standing orders\r\n\t}\r\n\r\n}\r\n\r\n// Add DataAccessRequest methods to StandingOrderDataAccessRequest\r\n_.extend(StandingOrderDataAccessRequest, DataAccessRequest);\r\n\r\nmodule.exports = StandingOrderDataAccessRequest;","var Configuration = require('configuration');\r\nvar HostedProcessList = require('hostedProcesses/model/hostedProcessList');\r\nvar SelectHostedProcessView = require('hostedProcesses/view/selectHostedProcessesView');\r\n\r\nvar dataAccessRequestView_template = require('dataAccess/template/dataAccessRequestViewContent');\r\nvar downloadManagerInstall_template = require('dataAccess/template/downloadManagerInstallContent');\r\n\r\n\r\n/**\r\n * This view handles the displaying of download managers and the assignment \r\n * of a download manager to a data access request either a SimpleDataAccessRequest \r\n * or a StandingOrderDataAccessRequest.\r\n * It handles hosted process configuration as well.\r\n * \r\n * The attribute request is the request to be submitted.\r\n */\r\nvar DataAccessRequestView = Backbone.View.extend({\r\n\r\n\tevents: {\r\n\t\t'click #validateRequest': function(event) {\r\n\r\n\t\t\tvar hpIsSelected = this.selectHostedProcessView && this.selectHostedProcessView.$el.find('.selected').length > 0;\r\n\t\t\tif (!hpIsSelected || this.selectHostedProcessView.validateParameters()) {\r\n\t\t\t\t// No hosted process selected or selected one have valide parameters\r\n\t\t\t\t$(\"#serverMessage\").empty();\r\n\t\t\t\tvar dmId = this.request.downloadLocation.DownloadManagerId = this.$el.find(\"#downloadManagersList\").val();\r\n\t\t\t\tvar dir = this.request.downloadLocation.DownloadDirectory = this.$el.find(\"#downloadDirectory\").val();\r\n\r\n\t\t\t\t// Disable the DMs list to avoid choosing a different DM once the\r\n\t\t\t\t// validation request has been submitted\r\n\t\t\t\tthis.$el.find('#downloadManagersList').selectmenu('disable');\r\n\t\t\t\tthis.$el.find('#downloadDirectory').textinput('disable').end()\r\n\t\t\t\t\t.find(\"#darName\").textinput('disable');\r\n\r\n\t\t\t\t// Submit the request\r\n\t\t\t\tthis.request.submit();\r\n\r\n\t\t\t\t// Store the used directories\r\n\t\t\t\tvar dirs = localStorage.getItem(\"directories-\" + dmId) || \"\";\r\n\t\t\t\tdirs = dirs.split(',');\r\n\t\t\t\tif (dirs.indexOf(dir) < 0) {\r\n\t\t\t\t\tdirs.push(dir);\r\n\t\t\t\t}\r\n\t\t\t\tlocalStorage.setItem(\"directories-\" + dmId, dirs.join(','));\r\n\t\t\t} else {\r\n\t\t\t\t$(\"#serverMessage\").html('<p style=\"color: red;\">Please, configure the product processing parameters first</p>');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'change #darName' : function(event) {\r\n\t\t\tthis.request.name = $(event.target).val();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Set the request to view\r\n\t */\r\n\tsetRequest: function(request) {\r\n\t\tif (this.request) {\r\n\t\t\tthis.stopListening(this.request);\r\n\t\t}\r\n\r\n\t\tthis.request = request;\r\n\t\tif (this.request) {\r\n\t\t\tthis.listenTo(this.request, 'SuccessValidationRequest', this.onValidationSuccess);\r\n\t\t\tthis.listenTo(this.request, 'SuccessConfirmationRequest', this.onConfirmationSuccess);\r\n\t\t\tthis.listenTo(this.request, 'FailureRequest', this.onFailure);\r\n\t\t\tthis.listenTo(this.request, 'RequestNotValidEvent', this.onFailure);\r\n\t\t}\r\n\t},\r\n\r\n\t/** \r\n\t * Change the button status to disabled in case the requests are not valid\r\n\t */\r\n\tonFailure: function() {\r\n\t\t$(\"#validateRequest\").button('disable');\r\n\t\t// TODO : improve message according to the failure ?\r\n\t\t// NGEO 782 : fixed failure response message content\r\n\t\t$(\"#serverMessage\").html(\"Invalid server response\");\r\n\t},\r\n\r\n\t/** \r\n\t * Change the button text to highlight the request stage \"Confirmation\" \r\n\t * Update the button text in the jqm span for button text to make the\r\n\t * button text updated\r\n\t */\r\n\tonValidationSuccess: function(serverMessage, configMessage) {\r\n\t\t$(\"#validateRequest\").html(\"Confirm\");\r\n\t\t$(\"#downloadManagersFooter .ui-btn-text\").html(\"Confirm\");\r\n\r\n\t\tvar message = '<p>' + configMessage + '</p><p>' + serverMessage + '</p>';\r\n\t\t// Display the estimated size and a warning message if the size exceeds a thresold (REQ)\r\n\t\tif (this.request.totalSize) {\r\n\t\t\tmessage += \"<p> Estimated Size : \" + filesize(this.request.totalSize) + \".<p>\";\r\n\t\t\tif (this.request.totalSize > Configuration.get('simpleDataAccessRequest.warningMaximumSize', 1e9)) {\r\n\t\t\t\tmessage += \"<p>WARNING : The amount of data to download is huge.</p><p>Are you sure you want to confirm your request?</p>\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t// NGEO 782 : fixed failure response message content\r\n\t\t$(\"#serverMessage\").html(message);\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the confirmation succeeds\r\n\t */\r\n\tonConfirmationSuccess: function(serverMessage, configMessage) {\r\n\t\t// Disable the confirm button\r\n\t\t$(\"#validateRequest\").button('disable');\r\n\t\t// Display the message\r\n\t\t// NGEO 782 : fixed failure response message content\r\n\t\t$(\"#serverMessage\").html('<p>' + configMessage + '</p><p>' + serverMessage + '</p>');\r\n\r\n\t\t// NGEO-900 : close widget when finished\r\n\t\tvar self = this;\r\n\t\tsetTimeout(function() {\r\n\t\t\tself.$el.parent().ngeowidget('hide')\r\n\t\t}, 1000);\r\n\t},\r\n\r\n\t/**\r\n\t * Directory suggestion, depends on the selected download manager\r\n\t */\r\n\tdirectorySuggestion: function(term, response) {\r\n\t\tvar dmId = this.$el.find(\"#downloadManagersList\").val();\r\n\t\tvar dirs = localStorage.getItem(\"directories-\" + dmId);\r\n\t\tvar suggestions = [];\r\n\t\tif (dirs) {\r\n\t\t\tdirs = dirs.split(',');\r\n\t\t\tfor (var n = 0; n < dirs.length; n++) {\r\n\t\t\t\tif (dirs[n] !== term && dirs[n].indexOf(term) >= 0) {\r\n\t\t\t\t\tsuggestions.push(dirs[n]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresponse(suggestions);\r\n\t},\r\n\r\n\t/**\r\n\t * Render the view\r\n\t */\r\n\trender: function() {\r\n\r\n\t\t// NGEO-2079: Generate a default name for current request\r\n\t\tthis.request.name += \"-\"+ this.request.getDataType() +\"-\" + new Date().toISOString();\r\n\r\n\t\t// After the download managers are retrieved\r\n\t\t// if (this.model.attributes.downloadmanagers != 0) {\r\n\t\tif (this.model.attributes.downloadmanagers == 0) {\r\n\t\t\t// No download manager is already registered : propose a link to the user to install one\r\n\t\t\tvar installContent = downloadManagerInstall_template({\r\n\t\t\t\tdownloadManagerInstallationLink: Configuration.data.downloadManager.downloadManagerInstallationLink,\r\n\t\t\t\tdownloadmanagers: this.model.get('downloadmanagers')\r\n\t\t\t});\r\n\t\t\tthis.$el.html(\"<p class='ui-error-message'><b>No download manager has been registered.<br>In order to download products, you need to install a download manager.</b></p>\" + installContent);\r\n\r\n\t\t} else {\r\n\t\t\t// Render the data access request template\r\n\t\t\tvar content = dataAccessRequestView_template({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\trequest: this.request,\r\n\t\t\t\ttheme: Configuration.localConfig.theme\r\n\t\t\t});\r\n\t\t\tthis.$el.html(content);\r\n\r\n\t\t\tthis.$el.find(\"#downloadDirectory\").autoComplete({\r\n\t\t\t\tminChars: 0,\r\n\t\t\t\tcache: false,\r\n\t\t\t\tsource: $.proxy(this.directorySuggestion, this)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Create hosted process list\r\n\t\tvar hostedProcessList = new HostedProcessList();\r\n\t\tvar self = this;\r\n\t\thostedProcessList.fetch()\r\n\t\t\t.done(function() {\r\n\t\t\t\tif ( hostedProcessList.get(\"hostedProcess\").length > 0 ) {\r\n\t\t\t\t\tself.selectHostedProcessView = new SelectHostedProcessView({\r\n\t\t\t\t\t\tmodel: hostedProcessList,\r\n\t\t\t\t\t\tel: self.$el.find(\"#hostedProcesses\"),\r\n\t\t\t\t\t\trequest: self.request\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tself.selectHostedProcessView.render();\r\n\t\t\t\t\tself.$el.find(\"#hostedProcesses\").trigger('create');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// NGEO-1942: hide panel when no product processing is available\r\n\t\t\t\t\tself.$el.find(\"#productProcessingContainer\").remove();\r\n\t\t\t\t\tself.$el.trigger(\"create\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.fail(function() {\r\n\t\t\t\tself.$el.find(\"#hostedProcesses\").html('No product processing available.');\r\n\t\t\t});\r\n\r\n\t\tthis.$el.find(\"#dataAccessSpecificMessage\").append(this.request.getSpecificMessage());\r\n\t\t// Trigger JQM styling\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = DataAccessRequestView;","/**\n * Data widget module\n * Used to assign a download manager/product processing to a data access request\n */\n\nvar Configuration = require('configuration');\nvar DataAccessRequestView = require('dataAccess/view/dataAccessRequestView');\nvar DownloadManagers = require('dataAccess/model/downloadManagers');\nvar ngeoWidget = require('ui/widget');\n\nvar DataAccessWidget = function() {\n\n\tvar parentElement = $('<div id=\"dataAccessPopup\">');\n\tvar element = $('<div id=\"dataAccessPopupContent\"></div>');\n\telement.appendTo(parentElement);\n\tparentElement.appendTo('.ui-page-active');\n\tvar self = this;\n\tparentElement.ngeowidget({\n\t\ttitle: 'Data Access Request'\n\t});\n\n\tvar dataAccessRequestView = new DataAccessRequestView({\n\t\tmodel: DownloadManagers,\n\t\tel: element\n\t});\n\n\t/**\n\t *\tOpen the popup\n\t *\t@param request\n\t *\t\tThe request to be used by widget: could be SimpleDataAccessRequest or StandingOrderDataAccessRequest\n\t */\n\tthis.open = function(request) {\n\n\t\t// Load the available download managers: even if fetch has failed\n\t\tDownloadManagers.fetch().complete(function() {\n\t\t\t// Build the given request\n\t\t\tdataAccessRequestView.setRequest(request);\n\t\t\tdataAccessRequestView.render();\n\n\t\t\t// Open the popup\n\t\t\tparentElement.ngeowidget(\"show\");\n\t\t});\n\t};\n\n\n\t/**\n\t *\tFor the moment not used since the popup can be \n\t *\tclosed by clicking out side its content.\n\t */\n\tthis.close = function() {\n\t\tparentElement.ngeowidget(\"hide\");\n\t};\n};\n\nmodule.exports = new DataAccessWidget();","var Configuration = require('configuration');\r\nvar DownloadManagers = require('dataAccess/model/downloadManagers');\r\nvar directDownload_template = require('dataAccess/template/directDownloadWidgetContent');\r\n\r\n\r\nvar DirectDownloadWidget = function(url) {\r\n\r\n\tvar parentElement = $('<div id=\"directDownloadPopup\" data-role=\"popup\" data-overlay-theme=\"a\" class=\"popup-widget-background\">');\r\n\tparentElement = parentElement.appendTo('.ui-page-active');\r\n\r\n\t/**\r\n\t *\tOpen the popup\r\n\t */\r\n\tthis.open = function(event) {\r\n\r\n\r\n\t\tparentElement.bind({\r\n\t\t\tpopupafterclose: function(event, ui) {\r\n\t\t\t\tparentElement.remove();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Create the content\r\n\t\tif (DownloadManagers.get('downloadmanagers').length >= 1) {\r\n\t\t\tparentElement.html(directDownload_template({\r\n\t\t\t\turl: url,\r\n\t\t\t\tdownloadHelperUrl: Configuration.baseServerUrl + \"/downloadHelper\" + \"?productURI=\" + encodeURIComponent(url + '.ngeo')\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tparentElement.html(directDownload_template({\r\n\t\t\t\turl: url,\r\n\t\t\t\tdownloadHelperUrl: false\r\n\t\t\t}));\r\n\r\n\t\t\t// Try to fetch again  the download manages to display the special link\r\n\t\t\tDownloadManagers.fetch().done(function() {\r\n\t\t\t\tparentElement.html(directDownload_template({\r\n\t\t\t\t\turl: url,\r\n\t\t\t\t\tdownloadHelperUrl: Configuration.baseServerUrl + \"/downloadHelper\" + \"?productURI=\" + encodeURIComponent(url + '.ngeo')\r\n\t\t\t\t}));\r\n\t\t\t\tparentElement.trigger('create');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tparentElement.trigger('create');\r\n\r\n\t\tparentElement.popup();\r\n\t\tparentElement.popup(\"open\", {\r\n\t\t\tx: event.pageX,\r\n\t\t\ty: event.pageY,\r\n\t\t\tpositionTo: \"origin\"\r\n\t\t});\r\n\r\n\t};\r\n\r\n\r\n\t/**\r\n\t *\tFor the moment not used since the popup can be \r\n\t *\tclosed by clicking out side its content.\r\n\t */\r\n\tthis.close = function() {\r\n\t\tparentElement.popup(\"close\");\r\n\t};\r\n};\r\n\r\nmodule.exports = DirectDownloadWidget;","var globalEvents = {};\r\n\r\n_.extend(globalEvents, Backbone.Events);\r\n\r\nmodule.exports = globalEvents;","/** \n\tLoad a page from help\n */\nfunction loadPage(url) {\n\t$.ajax({\n\t\turl: url,\n\t\tdataType: 'text',\n\t\tsuccess: function(data) {\n\t\t\tvar $container = $('#contentContainer');\n\n\t\t\t// Fix image path\n\t\t\t// Use a regexp to have some preloading when using .html()\n\t\t\tvar fixImgData = data.replace(/<img([^>]*)\\ssrc=['\"]([^'\"]+)['\"]/gi, \"<img$1 src='pages/userManual/$2'\");\n\n\t\t\t// Set HMTL and called trigger create to apply jQM styling\n\t\t\t$container\n\t\t\t\t.html(fixImgData)\n\t\t\t\t.trigger('create');\n\n\t\t\t// Manage fragment in the URL\n\t\t\tvar posFrag = url.indexOf('#');\n\t\t\tif (posFrag >= 0) {\n\t\t\t\tvar $fragment = $(url.substr(posFrag));\n\t\t\t\tif ($fragment.length > 0) {\n\n\t\t\t\t\t$container.imagesLoaded(function() {\n\t\t\t\t\t\t$container.scrollTop($fragment.offset().top + $container.scrollTop() - $container.offset().top);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$container.scrollTop(0);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/** \n\tCallback when window is resized\n */\nfunction onWindowResize() {\n\t$('#contentContainer').height($(window).height() - $('header').outerHeight(true));\n}\n\n/** When the document is ready, clean-up styling */\n$(document).ready(function() {\n\n\tvar router = new Backbone.Router();\n\trouter.route(\"chapter/:chapter(/:section)\", \"chapter\", function(chapter, section) {\n\t\tvar url = \"pages/userManual/\" + chapter + \".html\";\n\t\tif (section) {\n\t\t\turl += \"#\" + section;\n\t\t}\n\t\tloadPage(url);\n\t});\n\trouter.route(\"\", \"index\", function() {\n\t\tloadPage(\"pages/userManual/overview.html\");\n\t});\n\n\t// Remove some automatic styling from jQuery Mobile that don't fit in ngEO style\n\t$(\"body\").removeClass(\"ui-mobile-viewport\");\n\t$(\"header\").find(\"a\").removeClass(\"ui-link\");\n\n\tonWindowResize();\n\t$(window).resize(onWindowResize);\n\n\tBackbone.history.start();\n});","\"use strict\";\n\nvar Configuration = require(\"configuration\");\n\nmodule.exports = {\n\tinitialize: function(confPath) {\n\t\t// MS: Ugly hack to find the relative path to configuration\n\t\tConfiguration.url = confPath ? confPath : \"conf\";\n\t\tConfiguration.load().done(function() {\n\t\t\t$(\"body .contactUs\").attr(\"href\", \"mailto:\" + Configuration.get(\"mailto\"));\n\t\t});\n\t}\n};","var Configuration = require('configuration');\n\n/**\n *\tHosted process list\n */\nvar HostedProcessList = Backbone.Model.extend({\n\n\tdefaults: {\n\t\thostedProcesses: []\n\t},\n\n\t// Constructor : initialize the url from the configuration\n\tinitialize: function() {\n\t\t// The base url to retreive the hosted process list\n\t\tthis.url = Configuration.baseServerUrl + '/hostedProcesses';\n\t}\n});\n\nmodule.exports = HostedProcessList;","var Configuration = require('configuration');\n//require('jqm-datebox');\nvar hostedProcess_template = require('hostedProcesses/template/hostedProcessConfigurationContent');\n\n/**\n *\tFunction checking the validity of string as url\n */\nvar isValidURL = function(str) {\n\tvar pattern = new RegExp(/^(ht|f)tps?:\\/\\/[a-z0-9-\\.]+\\.[a-z]{2,4}\\/?([^\\s<>\\#%\"\\,\\{\\}\\\\|\\\\\\^\\[\\]`]+)?$/gi);\n\tif (!str.match(pattern)) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\n/**\n * This view handles the displaying the configuration of the given process\n */\nvar HostedProcessConfigurationView = Backbone.View.extend({\n\n\tid: \"hostedProcessConfiguration\",\n\tinitialize: function(options) {\n\t\tthis.request = options.request;\n\t},\n\tevents: {\n\t\t\"click #validateHostedProcessConfiguration\": function() {\n\t\t\tthis.$el.find('#validateMessage').empty();\n\n\t\t\t// Create new properties\n\t\t\tvar properties = []\n\t\t\tvar selectOptions;\n\t\t\tvar self = this;\n\t\t\tthis.$el.find('input, div')\n\t\t\t\t.removeClass('invalid');\n\t\t\tthis.$el.find('select, input')\n\t\t\t\t.each(function(i) {\n\t\t\t\t\tif (self.validateField(this)) {\n\t\t\t\t\t\tproperties.push({\n\t\t\t\t\t\t\tname: $(this).attr(\"id\"),\n\t\t\t\t\t\t\tvalue: $(this).val()\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($(this).data(\"role\") == \"datebox\") {\n\t\t\t\t\t\t\t$(this).parent().addClass('invalid');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$(this).addClass('invalid');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\tif (this.$el.find('.invalid').length == 0) {\n\t\t\t\tthis.request['parameters'] = properties;\n\t\t\t\t$('#dataAccessPopup').ngeowidget(\"show\");\n\t\t\t}\n\t\t}\n\t},\n\trender: function() {\n\t\t// Todo create Backbone.Model ? or pass by options ?\n\t\tvar content = hostedProcess_template({\n\t\t\thostedProcess: this.model\n\t\t});\n\t\tthis.$el.append(content);\n\n\t\tif (this.$el.find('.configurationInputs').length == 0) {\n\t\t\tthis.$el.find('#validateHostedProcessConfiguration').before('<p style=\"text-align: center;\">No parameter to configure by user</p>');\n\t\t}\n\t},\n\n\t/**\n\t *\tCheck if field was filled by user and check its validity\n\t */\n\tvalidateField: function(field) {\n\t\tvar value = $(field).val();\n\t\tvar isValid = true;\n\t\tif (value) {\n\t\t\tif ($(field).attr('type') == \"number\") {\n\t\t\t\tvar min = parseFloat($(field).attr(\"min\"));\n\t\t\t\tvar max = parseFloat($(field).attr(\"max\"));\n\t\t\t\tif (min > value || max < value) {\n\t\t\t\t\tthis.$el.find('#validateMessage').append('<p style=\"color: red;\">Value of ' + $(field).attr(\"id\") + ' field must be between ' + min + ' and ' + max + '</p>');\n\t\t\t\t\tisValid = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($(field).attr('type') == \"url\" && !isValidURL(value)) {\n\t\t\t\tthis.$el.find('#validateMessage').append('<p style=\"color: red;\">The url of ' + $(field).attr('id') + ' field is not valid</p>');\n\t\t\t\tisValid = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.$el.find('.missingError').length == 0) {\n\t\t\t\tthis.$el.find('#validateMessage').prepend('<p style=\"color: red;\" class=\"missingError\">Please, fill all the missing parameters</p>')\n\t\t\t}\n\t\t\tisValid = false;\n\t\t}\n\t\treturn isValid;\n\t}\n});\n\nmodule.exports = HostedProcessConfigurationView;","var Configuration = require('configuration');\nvar HostedProcessConfigurationView = require('hostedProcesses/view/hostedProcessConfigurationView');\nvar StandingOrderDataAccessRequest = require('dataAccess/model/standingOrderDataAccessRequest');\nrequire('ui/widget');\nvar hostedProcessesList_template = require('hostedProcesses/template/hostedProcessesListContent');\n\n/**\n * This view handles the displaying of hosted processes\n */\nvar SelectHostedProcessView = Backbone.View.extend({\n\n\tid: \"hostedProcessView\",\n\tinitialize: function(options) {\n\t\tthis.request = options.request;\n\t},\n\tevents: {\n\t\t\"click #configureHostedProcess\": function() {\n\t\t\t$(\"#serverMessage\").empty();\n\n\t\t\tvar selectedHostedProcessIndex = this.$el.find('.selected').data(\"value\");\n\n\t\t\tvar element = $('<div id=\"hostedProcessConfiguration\">');\n\t\t\telement.appendTo('.ui-page-active');\n\n\t\t\telement.ngeowidget({\n\t\t\t\ttitle: \"Product processing\",\n\t\t\t\thide: function() {\n\t\t\t\t\telement.remove();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar hostedProcessConfigurationView = new HostedProcessConfigurationView({\n\t\t\t\tmodel: this.model.get('hostedProcess')[selectedHostedProcessIndex],\n\t\t\t\tel: element,\n\t\t\t\trequest: this.request\n\t\t\t});\n\n\t\t\thostedProcessConfigurationView.render();\n\t\t\telement.trigger('create');\n\t\t\telement.ngeowidget(\"show\");\n\t\t},\n\t\t\"click .hostedProcess\": function(event) {\n\t\t\tvar $selectedHostedProcess = $(event.target).closest('.hostedProcess');\n\n\t\t\t// Set hostedProcessId and reinit parameters\n\t\t\tvar selectedHostedProcessIndex = $selectedHostedProcess.data(\"value\");\n\t\t\tthis.request.hostedProcessId = this.model.get('hostedProcess')[selectedHostedProcessIndex].hostedProcessId;\n\t\t\tthis.request.parameters = [];\n\n\t\t\t$selectedHostedProcess\n\t\t\t\t.siblings().removeClass('selected').end()\n\t\t\t\t.toggleClass('selected');\n\n\t\t\tvar configureBtn = this.$el.find('#configureHostedProcess');\n\t\t\tif (this.$el.find('.selected').length > 0) {\n\t\t\t\tconfigureBtn.removeAttr('disabled');\n\t\t\t} else {\n\t\t\t\tconfigureBtn.attr('disabled', 'disabled');\n\t\t\t}\n\t\t\tconfigureBtn.button(\"refresh\");\n\t\t}\n\t},\n\n\trender: function() {\n\t\tvar content = hostedProcessesList_template({\n\t\t\thostedProcesses: this.model.get('hostedProcess'),\n\t\t\ttheme: Configuration.localConfig.theme\n\t\t});\n\n\t\tthis.$el.html(content);\n\n\t},\n\n\t/**\n\t *\tCheck if hosted process parameters are filled, handle EOProductURL type\n\t */\n\tvalidateParameters: function() {\n\t\tvar self = this;\n\t\tvar hostedProcess = _.find(this.model.get('hostedProcess'), function(hp) {\n\t\t\treturn hp.hostedProcessId == self.request.hostedProcessId;\n\t\t});\n\t\tfor (var i = 0; i < hostedProcess.parameter.length; i++) {\n\t\t\tvar parameter = hostedProcess.parameter[i];\n\t\t\tvar parameterFilled = _.where(this.request.parameters, {\n\t\t\t\tname: parameter.name\n\t\t\t}).length > 0;\n\t\t\tif (parameter.type != \"EOProductURL\") {\n\t\t\t\tif (!parameterFilled)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*else\n\t\t\t{\n\t\t\t\t// Handle EOProductURL\n\t\t\t\tif ( !parameterFilled )\n\t\t\t\t{\n\t\t\t\t\t// Add EOProductParameter if doesn't exists\n\t\t\t\t\tvar eoProductURLParameter = {\n\t\t\t\t\t\tname: parameter.name,\n\t\t\t\t\t\tvalue : []\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// TODO find other way to differenciate standingOrderDataAccessRequest\n\t\t\t\t\tif ( this.request.url.search('standingOrderDataAccessRequest') < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Simple or enhanced access request --> Fill EOProductURL parameter with the choosen products\n\t\t\t\t\t\tfor ( var j=0; j<this.request.productURLs.length; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\teoProductURLParameter.value.push( this.request.productURLs[j] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.request.parameters.push(eoProductURLParameter);\n\t\t\t\t}\n\t\t\t}*/\n\t\t}\n\n\t\treturn true;\n\t}\n});\n\nmodule.exports = SelectHostedProcessView;","$(document).bind(\"mobileinit\", function() {\n\t$.mobile.ignoreContentEnabled = true;\n\t$.mobile.ajaxEnabled = false;\n\t$.mobile.linkBindingEnabled = false;\n\t$.mobile.hashListeningEnabled = false;\n\t$.mobile.pushStateEnabled = false;\n});","/** Console fix\t: create a dummy console.log when console is not present. Otherwise it is not working on some browser configuration */\r\nwindow.console || (console = {\r\n\tlog: function() {}\r\n});\r\n\r\n// Store the opened popup in order to close it\r\n// since jqm doesn't allow popup-chaining\r\nvar openedPopup;\r\n\r\nmodule.exports = {\r\n\terror: function(message) {\r\n\r\n\t\tif (openedPopup)\r\n\t\t\topenedPopup.popup(\"close\");\r\n\r\n\t\tconsole.log('Error : ' + message);\r\n\t\t// Create a pop-up to warn the user\r\n\t\topenedPopup = $('<div><p>Error : ' + message + '</p></div>')\r\n\t\t\t.appendTo('.ui-page-active')\r\n\t\t\t.popup({\r\n\t\t\t\tafterclose: function(event, ui) {\r\n\t\t\t\t\t$(this).remove();\r\n\t\t\t\t\topenedPopup = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.popup('open');\r\n\t},\r\n\r\n\tinform: function(message) {\r\n\r\n\t\tif (openedPopup)\r\n\t\t\topenedPopup.popup(\"close\");\r\n\r\n\r\n\t\tconsole.log(message);\r\n\t\t// Create a pop-up to warn the user\r\n\t\topenedPopup = $('<div><p>' + message + '</p></div>')\r\n\t\t\t.appendTo('.ui-page-active')\r\n\t\t\t.popup({\r\n\t\t\t\tafterclose: function(event, ui) {\r\n\t\t\t\t\t$(this).remove();\r\n\t\t\t\t\topenedPopup = null;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.popup('open');\r\n\t},\r\n\r\n\twarning: function(message, object) {\r\n\t\tif (object != undefined) {\r\n\t\t\tconsole.log('Warning : ' + message, object);\r\n\t\t} else {\r\n\t\t\tconsole.log('Warning : ' + message);\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tlog: function(message, object) {\r\n\t\tif (object != undefined) {\r\n\t\t\tconsole.log('Log : ' + message, object);\r\n\t\t} else {\r\n\t\t\tconsole.log('Log : ' + message);\r\n\t\t}\r\n\t}\r\n};","/**\n * Main ngEO module\n */\n\n\"use strict\";\n\nvar Configuration = require('configuration');\nvar MenuBar = require('ui/menubar');\nvar ContextHelp = require('ui/context-help');\nvar Logger = require('logger');\n\nmodule.exports = {\n\n\tinitialize: function init() {\n\t\t/** Use a defered object for document ready */\n\t\tvar doc_ready = $.Deferred();\n\n\t\t// Remove history to avoid popups refreshing the page on close (related to migration of jqm from 1.2 to 1.3)\n\t\t// For more details see: http://stackoverflow.com/questions/11907944/closing-jquery-mobile-new-popup-cause-page-to-refresh-uselessly\n\t\t// TODO: find better solution\n\t\t$.mobile.popup.prototype.options.history = false;\n\t\t// Set it to false, to avoid breaking the route by Backbone\n\t\t$.mobile.hashListeningEnabled = false;\n\n\t\t// NGEO-1774: Check if the request contains \"sharedUrl\" parameter\n\t\t// TODO: Replace sharedUrl value by shared parameters to avoid another redirection\n\t\tvar sharedUrlIndex = window.location.search.indexOf(\"sharedUrl=\");\n\t\tif (sharedUrlIndex > 0) {\n\t\t\t// Redirect to the given shared url\n\t\t\tvar sharedUrl = window.location.search.substr(sharedUrlIndex + \"sharedUrl=\".length);\n\t\t\tsharedUrl = decodeURIComponent(sharedUrl);\n\t\t\twindow.location = sharedUrl;\n\t\t}\n\n\t\t/**\n\t\t * When the document is ready and configuration is loaded load the rest of the application\n\t\t */\n\t\t$.when(doc_ready, Configuration.load())\n\t\t\t.done(function() {\n\n\t\t\t\t// Update mailto coordinates\n\t\t\t\t$(\"body .contactUs\").attr(\"href\", \"mailto:\" + Configuration.get(\"mailto\"));\n\n\t\t\t\tvar Map = require('map/map');\n\t\t\t\t$.mobile.loading(\"show\");\n\n\t\t\t\t// Remove some automatic styling from jQuery Mobile that don't fit in ngEO style\n\t\t\t\t$(\"body\").removeClass(\"ui-mobile-viewport\");\n\t\t\t\t$(\"header\").find(\"a\").removeClass(\"ui-link\");\n\t\t\t\t// Initialize map\n\t\t\t\tMap.initialize(\"map\");\n\t\t\t\t// Load the map module and initialize it\n\n\t\t\t\t// Initialize menu bar\n\t\t\t\tMenuBar.initialize(\"header nav\");\n\n\t\t\t\t$.mobile.activePage.find('#helpToolbar').toolbar({\n\t\t\t\t\tonlyIcon: false\n\t\t\t\t});\n\t\t\t\tContextHelp($.mobile.activePage);\n\t\t\t})\n\t\t\t.fail(function(jqXHR, textStatus, errorThrown) {\n\t\t\t\tLogger.error('Cannot load configuration : ' + errorThrown);\n\t\t\t});\n\n\n\t\t// When the document is ready, resolve the deferred object\n\t\t$(document).ready(doc_ready.resolve);\n\t}\n\n};","var datetime_template = require('search/template/datetime_template');\n\n/**\n *\tDate time widget\n *\t@param options\n *\t\tdate: Date object to be modified\n *\t\tkeyDates: Key dates\n *\t\tonUpdate: On update callback\n */\nvar DateTimeWidget = function(options) {\n\tvar parentElement = $('<div id=\"dateTimeWidget\">');\n\n\tvar datetime_content = $(datetime_template({\n\t\tdate: options.date,\n\t\tkeyDates: options.keyDates,\n\t\tdateLabel: \"Start date:\",\n\t\ttimeLabel: \"Start time:\"\n\t}));\n\n\t$(datetime_content).appendTo(parentElement);\n\n\tparentElement.appendTo('.ui-page-active');\n\tparentElement.ngeowidget({\n\t\ttitle: \"Date time\",\n\t\t// Reinit the standing order when the widget is closed (FL: is it really needed?)\n\t\thide: function() {\n\t\t\tconsole.log(\"date\",parentElement.find('.dateInput').val());\n\t\t\tconsole.log(\"time\",parentElement.find('.timeInput').val());\n\n\t\t\tvar date = parentElement.find('.dateInput').val(); //.datebox(\"getTheDate\").toISODateString()\n\t\t\tvar time = parentElement.find('.timeInput').val(); //.datebox(\"getTheDate\").toISODateString(true).split(\" \")[1];\n\t\t\tvar isoDateTime = date+\"T\"+time+\":00.000Z\";\n\n\t\t\tif ( options.onUpdate ) {\n\t\t\t\toptions.onUpdate(Date.fromISOString(isoDateTime));\n\t\t\t}\n\t\t\tparentElement.remove();\n\t\t}\n\t});\n\n\t/**\n\t *\tOpen the popup\n\t */\n\tthis.open = function() {\n\n\t\t//trigger jqm styling\n\t\tparentElement.ngeowidget(\"show\");\n\t\tparentElement.trigger(\"create\");\n\t};\n\n\t/**\n\t *\tFor the moment not used since the popup can be \n\t *\tclosed by clicking out side its content.\n\t */\n\tthis.close = function() {\n\t\tparentElement.ngeowidget(\"hide\");\n\t};\n}\n\nmodule.exports = DateTimeWidget;","var Logger = require('logger');\r\nvar UserPrefs = require('userPrefs');\r\nvar MenuBar = require('ui/menubar');\r\nvar DatasetSearch = require('search/model/datasetSearch');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar DataSetAuthorizations = require('search/model/datasetAuthorizations');\r\nvar SearchResults = require('searchResults/model/searchResults');\r\nvar StandingOrderDataAccessRequest = require('dataAccess/model/standingOrderDataAccessRequest');\r\nvar DataSetSelectionView = require('search/view/datasetSelectionView');\r\nvar SearchCriteriaView = require('search/view/searchCriteriaView');\r\nvar StandingOrder = require('search/model/standingOrder');\r\nvar StandingOrderView = require('search/view/standingOrderView');\r\n\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t * Initialize the search component for data-services-area.\r\n\t *\r\n\t * @param element \tThe root element of the data-services-area\r\n\t * @param router \tThe data-services-area router\r\n\t */\r\n\tinitialize: function(element, router, panelManager) {\r\n\r\n\t\t// Create the main search view\r\n\t\tvar datasetView = new DataSetSelectionView({\r\n\t\t\tmodel: DataSetPopulation\r\n\t\t});\r\n\r\n\t\tvar datasetPopulationCallbacks = [];\r\n\r\n\t\tvar onDatasetPopulationLoaded = function() {\r\n\r\n\t\t\t// Execute all registered callbacks\r\n\t\t\tfor ( var i=0; i<datasetPopulationCallbacks.length; i++ ) {\r\n\t\t\t\tdatasetPopulationCallbacks[i]();\r\n\t\t\t}\r\n\r\n\t\t\t$(\"#dataset\").removeClass('ui-disabled');\r\n\t\t\tpanelManager.on('leftResized', datasetView.updateContentHeight, datasetView);\r\n\t\t\tpanelManager.left.add(datasetView, '#dataset');\r\n\t\t\tdatasetView.render();\r\n\t\t};\r\n\r\n\t\tvar onDatasetPopulationFailed = function() {\r\n\t\t\tif (dsaXHR.state() == \"rejected\") {\r\n\t\t\t\tLogger.error('Cannot retreive the DataSet Authorizations from the server');\r\n\t\t\t\tdspXHR.done(onDatasetPopulationLoaded);\r\n\t\t\t} else {\r\n\t\t\t\t$(\"#dataset\").addClass('ui-disabled');\r\n\t\t\t\tLogger.error('Cannot retreive the DataSetPopulationMatrix and/or DataSet Authorizations from the server');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Fetch population and authorization from the server\r\n\t\tvar dspXHR = DataSetPopulation.fetch();\r\n\t\tvar dsaXHR = DataSetAuthorizations.fetch();\r\n\r\n\t\t$.when(dspXHR, dsaXHR).then(\r\n\t\t\t// Success\r\n\t\t\tonDatasetPopulationLoaded,\r\n\t\t\t// Error\r\n\t\t\tonDatasetPopulationFailed\r\n\t\t);\r\n\r\n\t\t// Create the view and append it to the panel manager\r\n\t\tvar searchView = new SearchCriteriaView({\r\n\t\t\tmodel: DatasetSearch,\r\n\t\t});\r\n\r\n\t\t// Create the model for standing order\t\t\r\n\t\tvar standingOrder = new StandingOrder();\r\n\r\n\t\t// Create the standing order view and append it to the panel manager\r\n\t\tvar standingOrderView = new StandingOrderView({\r\n\t\t\tmodel: standingOrder\r\n\t\t});\r\n\r\n\t\tpanelManager.on('leftResized', searchView.updateContentHeight, searchView);\r\n\t\tpanelManager.on('leftResized', standingOrderView.updateContentHeight, standingOrderView);\r\n\t\tpanelManager.left.add(searchView, '#search');\r\n\t\tpanelManager.left.add(standingOrderView, '#subscribe');\r\n\t\tsearchView.render();\r\n\t\tstandingOrderView.render();\r\n\r\n\t\t// Route search shared url\r\n\t\trouter.route(\r\n\t\t\t\"data-services-area/search?:query\",\r\n\t\t\t\"search\",\r\n\t\t\tfunction(query) {\r\n\t\t\t\t// Query contains osParameters={...}, substr starting from \"{\"\r\n\t\t\t\tvar sharedParameters = JSON.parse(query.substr(query.indexOf(\"{\")));\r\n\r\n\t\t\t\t// Build dataset ids ta\r\n\t\t\t\tvar datasetIds = _.keys(_.omit(sharedParameters, \"commonCriteria\"));\r\n\r\n\t\t\t\t// Variable used to count the number of fetched datasets\r\n\t\t\t\tvar datasetsToBeFetched = datasetIds.length;\r\n\r\n\t\t\t\t// Show the page first\r\n\t\t\t\tMenuBar.showPage(\"data-services-area\");\r\n\r\n\t\t\t\t// On dataset fetch callback\r\n\t\t\t\tvar onFetch = function(dataset, status) {\r\n\r\n\t\t\t\t\tvar datasetId = dataset.get('datasetId');\r\n\t\t\t\t\tif (status == \"SUCCESS\") {\r\n\r\n\t\t\t\t\t\t// Update datasetsearch from common criterias containing date&area + adv&do options of the given dataset\r\n\t\t\t\t\t\tvar currentSharedParameters = sharedParameters['commonCriteria'];\r\n\r\n\t\t\t\t\t\t// Check if dataset has download or advanced options, add to shared params if so\r\n\t\t\t\t\t\tif ( sharedParameters[datasetId] )\r\n\t\t\t\t\t\t\tcurrentSharedParameters += \"&\" + sharedParameters[datasetId];\r\n\t\t\t\t\t\tDatasetSearch.populateModelfromURL(currentSharedParameters, datasetId);\r\n\r\n\t\t\t\t\t\t// Refresh the view\r\n\t\t\t\t\t\tsearchView.refresh();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tLogger.error('Cannot load the dataset ' + datasetId + '.<br> The search cannot be shared.');\r\n\t\t\t\t\t\tMenuBar.showPage(\"data-services-area\");\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Unsubscribe onFetch event once there are no more shared datasets\r\n\t\t\t\t\t// to initialize\r\n\t\t\t\t\tif (--datasetsToBeFetched == 0) {\r\n\t\t\t\t\t\tDataSetPopulation.off(\"datasetFetch\", onFetch);\r\n\r\n\t\t\t\t\t\t// Explicitely set start/stop dates to force the update of datetimeslider\r\n\t\t\t\t\t\tDatasetSearch.set({\r\n\t\t\t\t\t\t\tstart: DatasetSearch.get('start'),\r\n\t\t\t\t\t\t\tstop: DatasetSearch.get('stop')\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// And launch the search!\r\n\t\t\t\t\t\tSearchResults.launch(DatasetSearch);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// Show search panel\r\n\t\t\t\t\t\t$('#search').click();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdatasetPopulationCallbacks.push(function() {\r\n\t\t\t\t\tDataSetPopulation.on(\"datasetFetch\", onFetch);\r\n\t\t\t\t\t// Select & fetch all shared datasets\r\n\t\t\t\t\t_.each(datasetIds, function(id) {\r\n\t\t\t\t\t\tDataSetPopulation.select(id);\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t// Route standing order shared url\r\n\t\trouter.route(\r\n\t\t\t\"data-services-area/sto/:datasetId?:query\",\r\n\t\t\t\"sto\",\r\n\t\t\tfunction(datasetId, query) {\r\n\r\n\t\t\t\t// Show the page first\r\n\t\t\t\tMenuBar.showPage(\"data-services-area\");\r\n\r\n\t\t\t\t// Once dataset has been loaded, populate standing order's model\r\n\t\t\t\tDataSetPopulation.once(\"datasetFetch\", function(dataset, status) {\r\n\r\n\t\t\t\t\tif (status == \"SUCCESS\") {\r\n\r\n\t\t\t\t\t\tstandingOrder.populateModelfromURL(query);\r\n\t\t\t\t\t\tStandingOrderDataAccessRequest.populateModelfromURL(query, standingOrder);\r\n\r\n\t\t\t\t\t\t// Refresh the view\r\n\t\t\t\t\t\tstandingOrderView.refresh();\r\n\r\n\t\t\t\t\t\t// Show standing order panel\r\n\t\t\t\t\t\t$('#subscribe').click();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tLogger.error('Cannot load the dataset ' + dataset + '.<br> The standing order cannot be shared.');\r\n\t\t\t\t\t\tMenuBar.showPage(\"data-services-area\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tdatasetPopulationCallbacks.push(function() {\t\t\t\t\t\r\n\t\t\t\t\t// Set the datasetId from the URL, the dataset will be loaded, and if exists it will be initialized\r\n\t\t\t\t\tDataSetPopulation.select(datasetId);\r\n\t\t\t\t})\r\n\r\n\t\t\t});\r\n\r\n\t\t// Set the default route\r\n\t\trouter.route(\r\n\t\t\t\"data-services-area\", \"dsa\",\r\n\t\t\tfunction() {\r\n\r\n\t\t\t\tdatasetPopulationCallbacks.push(function() {\r\n\t\t\t\t\t// Select the dataset id stored in the prefs\r\n\t\t\t\t\tvar prefsDS = UserPrefs.get(\"Dataset\");\r\n\t\t\t\t\tif (prefsDS && prefsDS != \"None\" && _.isString(prefsDS)) {\r\n\r\n\t\t\t\t\t\tvar datasets = prefsDS.split(',');\r\n\t\t\t\t\t\tfor (var i = 0; i < datasets.length; i++) {\r\n\t\t\t\t\t\t\tDataSetPopulation.select(datasets[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Show the page\r\n\t\t\t\tMenuBar.showPage(\"data-services-area\");\r\n\r\n\t\t\t});\r\n\r\n\t\t// Update interface when dataset selection has changed\r\n\t\tvar onDatasetSelectionChanged = function(dataset) {\r\n\t\t\tvar numDatasets = DatasetSearch.datasetIds.length;\r\n\t\t\tif (numDatasets == 0) {\r\n\t\t\t\tUserPrefs.save(\"Dataset\", \"None\");\r\n\r\n\t\t\t\t$('#subscribe').addClass('ui-disabled');\r\n\t\t\t\t$('#search').addClass('ui-disabled');\r\n\t\t\t} else if (numDatasets == 1) {\r\n\t\t\t\tUserPrefs.save(\"Dataset\", DatasetSearch.getDatasetPath());\r\n\r\n\t\t\t\tif (DataSetAuthorizations.hasDownloadAccess(DatasetSearch.getDatasetPath())) {\r\n\t\t\t\t\t$('#subscribe').removeClass('ui-disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$('#subscribe').addClass('ui-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t$('#search').removeClass('ui-disabled');\r\n\t\t\t} else {\r\n\t\t\t\tUserPrefs.save(\"Dataset\", DatasetSearch.getDatasetPath());\r\n\t\t\t\t$('#subscribe').addClass('ui-disabled');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tDataSetPopulation.on(\"select\", onDatasetSelectionChanged);\r\n\t\tDataSetPopulation.on(\"unselect\", onDatasetSelectionChanged);\r\n\r\n\t},\r\n};","var Configuration = require('configuration');\r\nvar DataSet = require('search/model/dataset');\r\nvar DataSetAuthorizations = require('search/model/datasetAuthorizations');\r\n\r\n/**\r\n * Function to match a row from the matrix with the given filter\r\n */\r\nvar matchRow = function(filter, row) {\r\n\tfor (var i = 0; i < filter.length; i++) {\r\n\t\tif (filter[i] && filter[i] != row[i]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * Small criteria structure\r\n */\r\nvar Criteria = function(name) {\r\n\tthis.title = name;\r\n\tthis.selectedValue = \"\";\r\n\tthis.possibleValues = [];\r\n};\r\n\r\nCriteria.prototype.addValue = function(value) {\r\n\tif (value != '' && !_.contains(this.possibleValues, value)) {\r\n\t\tthis.possibleValues.push(value);\r\n\t}\r\n};\r\n\r\n/**\r\n * Dataset population model \r\n * Handled transparently the criteria received from the server.\r\n * Filters the datasets according to a criteria list\r\n */\r\nvar DataSetPopulation = Backbone.Model.extend({\r\n\r\n\tdefaults: {\r\n\t\tcriterias: null,\r\n\t\tmatrix: null\r\n\t},\r\n\r\n\t// Constructor : initialize the url from the configuration\r\n\tinitialize: function() {\r\n\t\t// The base url to retreive the datasets population matrix\r\n\t\tthis.url = Configuration.baseServerUrl + '/datasetPopulationMatrix';\r\n\t\tthis.selection = {};\r\n\t\tthis.cache = {};\r\n\t\tthis._usableForInterferomtry = {};\r\n\t},\r\n\r\n\t/**\r\n\t * Fetch dataset\r\n\t * Use a cache\r\n\t */\r\n\tfetchDataset: function(datasetId, callback) {\r\n\t\tif (this.cache.hasOwnProperty(datasetId)) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback(this.cache[datasetId]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar self = this;\r\n\t\t\tvar dataset = new DataSet({\r\n\t\t\t\tdatasetId: datasetId\r\n\t\t\t});\r\n\t\t\tdataset.fetch({\r\n\t\t\t\tsuccess: function(model) {\r\n\t\t\t\t\tself.cache[datasetId] = model;\r\n\t\t\t\t\tcallback(model);\r\n\t\t\t\t},\r\n\t\t\t\terror: function() {\r\n\t\t\t\t\tself.trigger('datasetFetch', datasetId, \"ERROR\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Select a dataset\r\n\t */\r\n\tselect: function(datasetId) {\r\n\t\tif (!this.selection.hasOwnProperty(datasetId)) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.fetchDataset(datasetId, function(model) {\r\n\t\t\t\tself.selection[datasetId] = model;\r\n\t\t\t\tself.trigger('select', model);\r\n\t\t\t\tself.trigger('datasetFetch', model, \"SUCCESS\");\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Select exclusively a dataset\r\n\t */\r\n\tselectExclusive: function(datasetId) {\r\n\t\tvar prevSelection = this.selection;\r\n\t\tthis.selection = {};\r\n\t\tfor (var x in prevSelection) {\r\n\t\t\tthis.trigger('unselect', prevSelection[x]);\r\n\t\t}\r\n\t\tthis.select(datasetId);\r\n\t},\r\n\r\n\t/**\r\n\t * Unselect a dataset\r\n\t */\r\n\tunselect: function(datasetId) {\r\n\t\tif (this.selection.hasOwnProperty(datasetId)) {\r\n\t\t\tvar dataset = this.selection[datasetId];\r\n\t\t\tdelete this.selection[datasetId];\r\n\t\t\tthis.trigger('unselect', dataset);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Check if a dataset is usable by interferomretry\r\n\t * See NGEOD-434\r\n\t */\r\n\tusableForInterferometry: function(datasetId) {\r\n\t\treturn this._usableForInterferomtry[datasetId];\r\n\t},\r\n\r\n\t/** \r\n\t * Parse the response from the server\r\n\t * Row example: [ \"\", \"\", \"Friendly ATS_TOA_1P\", \"\", \"false\", \"ATS_TOA_1P\", \"100\" ],\r\n\t *\t\t\t\t[ criteria1, criteria2, ..., criteriaN, id, count ]\r\n\t * Parse methode find special \"name\" criteria in response and put it in the end if exists\r\n\t */\r\n\tparse: function(response) {\r\n\r\n\t\tvar matrix = response.datasetpopulationmatrix.datasetPopulationValues;\r\n\t\tvar criteriaTitles = response.datasetpopulationmatrix.criteriaTitles;\r\n\t\tvar criterias = [];\r\n\t\t\r\n\t\t// See NGEOD-434\r\n\t\t// usableForInterferometry is stored in the criteria titles\r\n\t\tvar usableForInterferomtryIndex = criteriaTitles.indexOf('usableForInterferometry');\r\n\t\tif (usableForInterferomtryIndex >= 0) {\r\n\t\t\tfor (var n = 0; n < matrix.length; n++) {\r\n\t\t\t\tvar row = matrix[n];\r\n\t\t\t\tthis._usableForInterferomtry[row[row.length - 2]] = row[usableForInterferomtryIndex] == \"true\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Special treatment for name : remove it as a criteria and push it at end in the matrix\r\n\t\t// <!> Modifies criteriaTitles length so must be executed after usableForInterferometry detection <!>\r\n\t\tvar nameIndex = criteriaTitles.indexOf('name');\r\n\t\tif (nameIndex >= 0) {\r\n\t\t\tcriteriaTitles.splice(nameIndex, 1);\r\n\t\t\tfor (var n = 0; n < matrix.length; n++) {\r\n\t\t\t\tvar row = matrix[n];\r\n\t\t\t\trow.push(row[nameIndex]);\r\n\t\t\t\trow.splice(nameIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Object which contains rows/keyword information to be able to filter dataset by criterias\r\n\t\tthis.datasetInfoMap = {};\r\n\r\n\t\t// NGEO-2160 : Criterias are now build from \"keyword\" values\r\n\t\tthis.keywordIndex = response.datasetpopulationmatrix.criteriaTitles.indexOf(\"keyword\");\r\n\t\tfor ( var i = 0; i < matrix.length; i++ ) {\r\n\t\t\tvar datasetId = matrix[i][criteriaTitles.length];\r\n\t\t\tif ( !this.datasetInfoMap[datasetId] ) {\r\n\t\t\t\tthis.datasetInfoMap[datasetId] = {\r\n\t\t\t\t\trows: [],\r\n\t\t\t\t\tkeywords: {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.datasetInfoMap[datasetId].rows.push(matrix[i]);\r\n\r\n\t\t\tvar keyword = matrix[i][this.keywordIndex].split(\":\"); // GROUP:VALUE\r\n\t\t\t// Continue if empty\r\n\t\t\tif ( keyword.length != 2 )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar criteria = _.findWhere(criterias, { \"title\": keyword[0] });\r\n\t\t\tif ( !criteria ) {\r\n\t\t\t\tcriteria = new Criteria(keyword[0]);\r\n\t\t\t\tcriterias.push(criteria);\r\n\t\t\t}\r\n\t\t\tcriteria.addValue(keyword[1]);\r\n\t\t\tif ( !this.datasetInfoMap[datasetId].keywords[keyword[0]] )\r\n\t\t\t\tthis.datasetInfoMap[datasetId].keywords[keyword[0]] = [];\r\n\t\t\t// Store group:value as a dictionary in datasetInfoMap\r\n\t\t\tthis.datasetInfoMap[datasetId].keywords[keyword[0]].push(keyword[1]);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcriterias: criterias,\r\n\t\t\tcriteriaLength: criteriaTitles.length,\r\n\t\t\tmatrix: matrix\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t *\tExtract criteria values for the given datasets with the given criteria key\r\n\t */\r\n\tfilterCriteriaValues: function(datasets, criteria) {\r\n\t\tvar criteriaValues = [];\r\n\r\n\t\tfor ( var i = 0; i<datasets.length; i++ ) {\r\n\t\t\tvar dataset = this.datasetInfoMap[datasets[i].datasetId];\r\n\t\t\tfor ( var group in dataset.keywords ) {\r\n\t\t\t\tfor ( var j = 0; j<dataset.keywords[group].length; j++ ) {\r\n\t\t\t\t\tvar value = dataset.keywords[group][j];\r\n\t\t\t\t\tif ( group == criteria.title && (criteria.selectedValue == '' || criteria.selectedValue == value) && !_.contains(criteriaValues, value) ) {\r\n\t\t\t\t\t\tcriteriaValues.push(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn criteriaValues;\r\n\t},\r\n\r\n\t/**\r\n\t *\tGet user-friendly name for the given datasetId\r\n\t */\r\n\tgetFriendlyName: function(datasetId) {\r\n\t\tvar idIndex = this.get('criteriaLength');\r\n\t\tvar nameIndex = this.get('criteriaLength') + 2;\r\n\r\n\t\tvar datasetRow = _.find(this.get('matrix'), function(row) { return row[idIndex] == datasetId } )\r\n\t\treturn datasetRow[nameIndex] ? datasetRow[nameIndex] : datasetRow[idIndex];\r\n\t},\r\n\r\n\t/**\r\n\t * Return the datasets filtered by the given filter\r\n\t */\r\n\tfilterDatasets: function(criteriaFilter) {\r\n\r\n\t\tvar filteredDatasets = [];\r\n\t\tvar treatedDatasets = {};\r\n\r\n\t\t// Keep the id and count index for the dataset population row\r\n\t\tvar id_index = this.get('criteriaLength');\r\n\t\tvar count_index = this.get('criteriaLength') + 1;\r\n\t\tvar name_index = this.get('criteriaLength') + 2;\r\n\r\n\t\t// Process all grouped datasets\r\n\t\tfor ( var datasetId in this.datasetInfoMap ) {\r\n\r\n\t\t\tvar datasetInfos = this.datasetInfoMap[datasetId];\r\n\t\t\tvar passedFilter = true;\r\n\r\n\t\t\tvar selectedCriterias = _.filter(this.get('criterias'), function(o) { return o.selectedValue });\r\n\t\t\tif ( selectedCriterias.length ) {\r\n\r\n\t\t\t\tvar row = datasetInfos.rows[0];\r\n\t\t\t\t// Need filter all the datasets\r\n\t\t\t\tfor ( var i=0; i<selectedCriterias.length; i++ ) {\r\n\t\t\t\t\tvar criteria = selectedCriterias[i];\r\n\t\t\t\t\tpassedFilter &= _.contains(datasetInfos.keywords[criteria.title], criteria.selectedValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (passedFilter) {\r\n\t\t\t\tvar row = datasetInfos.rows[0];\r\n\t\t\t\t// No need to filter take all the datasets\r\n\t\t\t\tfilteredDatasets.push({\r\n\t\t\t\t\tdatasetId: datasetId,\r\n\t\t\t\t\ttagFriendlyId: datasetId.replace(/\\W/g,'_'),\r\n\t\t\t\t\tname: name_index < row.length ? row[name_index] : datasetId,\r\n\t\t\t\t\titemsCount: row[count_index]\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn filteredDatasets;\r\n\t},\r\n\r\n});\r\n\r\nmodule.exports = new DataSetPopulation();","var Configuration = require('configuration');\r\n\r\nvar _ReservedNames = ['start', 'stop', 'geom', 'bbox', 'id', 'lat', 'lon', 'radius', 'rel', 'loc'];\r\n\r\nvar Dataset = Backbone.Model.extend({\r\n\r\n\t// Dataset attributes\r\n\tdefaults: {\r\n\t\tdescription: \"\",\r\n\t\tkeywords: null,\r\n\t\tdownloadOptions: [],\r\n\t\tattributes: null,\r\n\t\tdatasetId: \"\",\r\n\t\tstartDate: null,\r\n\t\tendDate: null,\r\n\t\tvalidityEndDate: null\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\t\t// The base url to retreive the dataset Search Info\r\n\t\tthis.url = Configuration.baseServerUrl + '/datasetSearchInfo/' + this.get('datasetId');\r\n\t\tthis.listenTo(this, \"error\", this.onError);\r\n\r\n\t\t// NGEO-2171: datasetId can possibly have special characters so to use it as #id we need to remove them\r\n\t\tthis.tagFriendlyId = this.get(\"datasetId\").replace(/\\W/g, '_'); // Used in HTML tag-id generation\r\n\t},\r\n\r\n\t/** \r\n\t * Call when the model cannot be fetched from the server\r\n\t */\r\n\tonError: function(model, response) {\r\n\t\tif (response.status == 0) {\r\n\t\t\tlocation.reload();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Check if the keywords exists\r\n\t */\r\n\thasKeyword: function(val) {\r\n\t\treturn this.get('keywords').indexOf(val) >= 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Parse the response from server\r\n\t */\r\n\tparse: function(response, options) {\r\n\t\tvar resp = {};\r\n\t\tif (response.datasetSearchInfo) {\r\n\t\t\tresp.description = response.datasetSearchInfo.description;\r\n\t\t\tif (_.isArray(response.datasetSearchInfo.downloadOptions)) {\r\n\t\t\t\t// Remove reserved names\r\n\t\t\t\tresp.downloadOptions = _.reject(response.datasetSearchInfo.downloadOptions, function(o) {\r\n\t\t\t\t\treturn _.contains(_ReservedNames, o.argumentName);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (_.isArray(response.datasetSearchInfo.attributes)) {\r\n\t\t\t\t// Remove reserved names\r\n\t\t\t\tresp.attributes = _.reject(response.datasetSearchInfo.attributes, function(a) {\r\n\t\t\t\t\treturn _.contains(_ReservedNames, a.id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (_.isArray(response.datasetSearchInfo.keywords)) {\r\n\t\t\t\t// 'Flattenize' the keyword array\r\n\t\t\t\tresp.keywords = _.pluck(response.datasetSearchInfo.keywords, 'keyword');\r\n\t\t\t}\r\n\r\n\t\t\t// Set the start/end date for the dataset, ensure there is always a valid time extent\r\n\t\t\tif (response.datasetSearchInfo.endDate) {\r\n\t\t\t\tresp.endDate = Date.fromISOString(response.datasetSearchInfo.endDate);\r\n\t\t\t} else {\r\n\t\t\t\tresp.endDate = new Date();\r\n\t\t\t}\r\n\t\t\tif (response.datasetSearchInfo.startDate) {\r\n\t\t\t\tresp.startDate = Date.fromISOString(response.datasetSearchInfo.startDate);\r\n\t\t\t} else {\r\n\t\t\t\tresp.startDate = new Date(resp.endDate.getTime());\r\n\t\t\t\tresp.startDate.setUTCFullYear(resp.endDate.getUTCFullYear() - 10);\r\n\t\t\t}\r\n\r\n\t\t\tif (response.datasetSearchInfo.validityEndDate) {\r\n\t\t\t\tresp.validityEndDate = Date.fromISOString(response.datasetSearchInfo.validityEndDate);\r\n\t\t\t} else {\r\n\t\t\t\tresp.validityEndDate = new Date(resp.endDate.getTime());\r\n\t\t\t\tresp.validityEndDate.setUTCFullYear(resp.endDate.getUTCFullYear() + 5);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn resp;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = Dataset;","var Configuration = require('configuration');\r\n\r\n/**\r\n * Dataset authorizations  \r\n */\r\nvar DataSetAuthorizations = Backbone.Model.extend({\r\n\r\n\tdefaults: {\r\n\t\tauthorizations: null,\r\n\t},\r\n\r\n\t// Constructor : initialize the url from the configuration\r\n\tinitialize: function() {\r\n\t\t// The base url to retreive the datasets population matrix\r\n\t\tthis.url = Configuration.baseServerUrl + '/datasetAuthorization';\r\n\t},\r\n\r\n\t// Parse the response\r\n\tparse: function(response) {\r\n\r\n\t\treturn {\r\n\t\t\tauthorizations: response.datasetAuthorisationInfo\r\n\t\t};\r\n\t},\r\n\r\n\t// Check if a dataset has search access\r\n\thasSearchAccess: function(datasetId) {\r\n\t\tvar auth = _.findWhere(this.get('authorizations'), {\r\n\t\t\tdataSetId: datasetId\r\n\t\t});\r\n\t\treturn auth ? auth.searchAccessGranted == \"YES\" : true;\r\n\t},\r\n\r\n\t// Check if a dataset has download access\r\n\thasDownloadAccess: function(datasetId) {\r\n\t\tvar auth = _.findWhere(this.get('authorizations'), {\r\n\t\t\tdataSetId: datasetId\r\n\t\t});\r\n\t\treturn auth ? auth.downloadAccessGranted == \"YES\" : true;\r\n\t},\r\n\r\n\t// Check browse authorization\r\n\thasBrowseAuthorization: function(datasetId, layerName) {\r\n\t\tvar auth = _.findWhere(this.get('authorizations'), {\r\n\t\t\tdataSetId: datasetId\r\n\t\t});\r\n\t\tif (!auth) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Check viewAccessGranted : not in ICD but it is returned by WEBS so use it for now\r\n\t\tif (!_.isUndefined(auth.viewAccessGranted)) {\r\n\t\t\treturn auth.viewAccessGranted == \"YES\";\r\n\t\t}\r\n\r\n\t\t// Use  browse layer authorizations (if it exists) to estimate view access\r\n\t\tvar broweLayerAuthorizations = auth.browseLayerAuthorizations;\r\n\t\tif (!broweLayerAuthorizations || !_.isArray(broweLayerAuthorizations)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < broweLayerAuthorizations.length; i++) {\r\n\t\t\tif (broweLayerAuthorizations[i].browseLayerId == layerName) {\r\n\t\t\t\treturn broweLayerAuthorizations[i].viewAccessGranted == \"YES\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t// Check if a dataset has view access\r\n\thasViewAccess: function(datasetId) {\r\n\t\tvar auth = _.findWhere(this.get('authorizations'), {\r\n\t\t\tdataSetId: datasetId\r\n\t\t});\r\n\t\tif (!auth) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Check viewAccessGranted : not in ICD but it is returned by WEBS so use it for now\r\n\t\tif (!_.isUndefined(auth.viewAccessGranted)) {\r\n\t\t\treturn auth.viewAccessGranted == \"YES\";\r\n\t\t}\r\n\r\n\t\t// Use  browse layer authorizations (if it exists) to estimate view access\r\n\t\tvar broweLayerAuthorizations = auth.browseLayerAuthorizations;\r\n\t\tif (!broweLayerAuthorizations || !_.isArray(broweLayerAuthorizations)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tvar viewAccess = true;\r\n\t\tfor (var i = 0; i < broweLayerAuthorizations.length; i++) {\r\n\t\t\tviewAccess &= broweLayerAuthorizations[i].viewAccessGranted == \"YES\";\r\n\t\t}\r\n\t\treturn viewAccess;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = new DataSetAuthorizations();","var Configuration = require('configuration');\r\nvar DatasetPopulation = require('search/model/dataSetPopulation');\r\nvar SearchCriteria = require('search/model/searchCriteria');\r\n\r\n\r\n// A constant\r\nvar ONE_MONTH = 24 * 30 * 3600 * 1000;\r\n\r\n/**\r\n * This class manages the criteria for search\r\n */\r\nvar DataSetSearch = SearchCriteria.extend({\r\n\r\n\t// Extend SearchCriteria defaults\r\n\tdefaults: _.extend({}, SearchCriteria.prototype.defaults.call(this), {\r\n\t\tuseTimeSlider: true, //flag for displaying time slider or not\r\n\t\tmode: \"Simple\",\r\n\t\t// Correlation/Interferometry parameters\r\n\t\ttimeCover: [0, 30],\r\n\t\tspatialCover: 25,\r\n\t\tbaseline: [0, 5],\r\n\t\tburstSync: [0, 100],\r\n\t\tmaster: \"\"\r\n\t}),\r\n\r\n\tname: \"Search\",\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tinitialize: function() {\r\n\t\tSearchCriteria.prototype.initialize.apply(this, arguments);\r\n\r\n\t\t// The array of selected dataset Ids\r\n\t\tthis.datasetIds = [];\r\n\r\n\t\t// The array of slaves\r\n\t\tthis.slaves = [];\r\n\r\n\t\t// The number of selected datasets\r\n\t\tthis.numDatasets = 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Create the openSearch url. \r\n\t * The url contains spatial, temporal and search criteria parameters.\r\n\t *\r\n\t * @param options\r\n\t *\t\t<ul>\r\n\t *\t\t\t<li>format: atom or json</li>\r\n\t *\t\t\t<li>id: datasetId (optional, otherwise datasetIds will be used --> TODO: Explore this)</li>\r\n\t *\t\t</ul>\r\n\t */\r\n\tgetOpenSearchURL: function(options) {\r\n\r\n\t\tvar url = Configuration.serverHostName + Configuration.baseServerUrl + \"/catalogue/\";\r\n\t\tvar id = options.id;\r\n\r\n\t\t// Correlation/Interferometry\r\n\t\tif (this.get('mode') != \"Simple\") {\r\n\r\n\t\t\turl += this.get('master') + \"/search?\";\r\n\t\t\turl += this.getOpenSearchParameters(id);\r\n\r\n\t\t\t// Add interferometry specific parameters\r\n\t\t\turl += this.getInterferometryParameters(id);\r\n\r\n\t\t} else {\r\n\t\t\t// TODO !!!!!!\r\n\t\t\tvar id = (options && options.hasOwnProperty('id')) ? options.id : this.datasetIds.join(',');\r\n\t\t\turl += id + \"/search?\";\r\n\t\t\turl += this.getOpenSearchParameters(id);\r\n\t\t}\r\n\r\n\t\tvar format = (options && options.hasOwnProperty(\"format\")) ? options.format : \"json\";\r\n\t\turl += \"&format=\" + format;\r\n\r\n\t\treturn url;\r\n\t},\r\n\r\n\t/**\r\n\t * @override TODO, think about how to manage this better\r\n\t * Get the shared search URL\r\n\t */\r\n\tgetSharedSearchURL : function(){\r\n\r\n\t\tvar url = \"#data-services-area/search/\" +  this.datasetIds.join(',') + '?';\r\n\t\tvar sharedParameters = {};\r\n\r\n\t\t// Build shared open search parameters url for each dataset\r\n\t\t// since advanced&download options are independent between datasets\r\n\t\tfor ( var i=0; i<this.datasetIds.length; i++ ) {\r\n\t\t\tvar datasetId = this.datasetIds[i];\r\n\t\t\t//var osUrl = this.getOpenSearchParameters(datasetId);\r\n\t\t\tvar osUrl = this.addAdvancedCriteria(\"\", datasetId);\r\n\t\t\tosUrl = this.addDownloadOptions(osUrl, datasetId);\r\n\r\n\t\t\t// Remove the first \"?\" symbol\r\n\t\t\tosUrl = osUrl.substr(1);\r\n\r\n\t\t\t// Correlation/Interferometry\r\n\t\t\tif ( this.get('mode') != \"Simple\" ) {\r\n\t\t\t\t// Add interferometry specific parameters\r\n\t\t\t\tosUrl += \"&dDiff=\" + this.get('dDiff') + \"&sOverP=\" + this.get('sOverP') + \"&nBase=\" + this.get('nBase') + \"&bSync=\" + this.get('bSync');\r\n\t\t\t\tosUrl += \"&mode=\" + this.get('mode');\r\n\t\t\t}\r\n\t\t\t// Store open search url for the given datasetId\r\n\t\t\tsharedParameters[datasetId] = osUrl;\r\n\t\t}\r\n\r\n\t\tsharedParameters['commonCriteria'] = this.addGeoTemporalParams();\r\n\t\t\r\n\t\treturn \"#data-services-area/search?osParameters=\" + escape(JSON.stringify(sharedParameters));\r\n\t},\r\n\r\n\t/**\r\n\t *\tGet interferometry/correlation parameters\r\n\t */\r\n\tgetInterferometryParameters: function(id) {\r\n\t\tvar interferometryParams = \"&timeCover=[\" + this.get('timeCover') + \"]&spatialCover=\" + this.get('spatialCover') + \"]&baseline=[\" + this.get('baseline') + \"]&burstSync=[\" + this.get('burstSync') + \"]\";\r\n\t\t// Interferometry : only one dataset, correlation -> more than one(not implemented yet)\r\n\t\tvar slaveUrl = Configuration.serverHostName + Configuration.baseServerUrl + \"/catalogue/\";\r\n\t\tslaveUrl += this.slaves + \"/search?\";\r\n\t\tslaveUrl += this.getOpenSearchParameters(id);\r\n\r\n\t\t// slaveUrl can be just a datasetId(not openSearch url)\r\n\t\t// slaveUrl = this.slaves;\r\n\t\tinterferometryParams += \"&correlatedTo=\" + encodeURIComponent(slaveUrl) + \"&corFunction=interferometry\"; // OLD parameter: \"with\"\r\n\r\n\t\treturn interferometryParams;\r\n\t},\r\n\r\n\r\n\t/**\t\r\n\t * Get the dataset path to build URLs\r\n\t */\r\n\tgetDatasetPath: function() {\r\n\t\treturn this.get('mode') == \"Simple\" ? this.datasetIds.join(',') : this.get('master');\r\n\t},\r\n\r\n\t/**\r\n\t * Compute the available date range from the selected datasets\r\n\t */\r\n\tcomputeDateRange: function() {\r\n\t\tvar dateRange = null;\r\n\t\t_.each(DatasetPopulation.selection, function(dataset) {\r\n\t\t\tif (!dateRange) {\r\n\t\t\t\tdateRange = {\r\n\t\t\t\t\tstart: dataset.get('startDate'),\r\n\t\t\t\t\tstop: dataset.get('endDate')\r\n\t\t\t\t\t//validityStop: dataset.get('validityEndDate')\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tif (dataset.get('startDate') < dateRange.start) {\r\n\t\t\t\t\tdateRange.start = dataset.get('startDate');\r\n\t\t\t\t}\r\n\t\t\t\tif (dataset.get('endDate') > dateRange.stop) {\r\n\t\t\t\t\tdateRange.stop = dataset.get('endDate');\r\n\t\t\t\t}\r\n\t\t\t\t// NGEO-1919: validityStop never used anymore\r\n\t\t\t\t// if (dataset.get('validityEndDate') > dateRange.validityStop) {\r\n\t\t\t\t// \tdateRange.validityStop = dataset.get('validityEndDate');\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.set('dateRange', dateRange);\r\n\t},\r\n\r\n\t/**\r\n\t * Set the master dataset for correlation/interferoemtry\r\n\t */\r\n\tsetMaster: function(val) {\r\n\t\tvar i = this.datasetIds.indexOf(val);\r\n\t\tif (i >= 0) {\r\n\t\t\tthis.slaves = this.datasetIds.slice(0);\r\n\t\t\tthis.slaves.splice(i, 1);\r\n\t\t\tthis.set('master', val);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Set the mode for search : Simple, Correlation, Interferometry\r\n\t */\r\n\tsetMode: function(val) {\r\n\r\n\t\tif (val != 'Simple') {\r\n\r\n\t\t\tthis.slaves = this.datasetIds.slice(0);\r\n\t\t\tvar master = this.slaves.shift();\r\n\r\n\t\t\t// Take into account the case of interferometry/correlation on a single dataset\r\n\t\t\tif (this.slaves.length == 0) {\r\n\t\t\t\tthis.slaves.push(master);\r\n\t\t\t}\r\n\r\n\t\t\tthis.set('master', master);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.set('master', '');\r\n\t\t\tthis.slaves = \"\";\r\n\r\n\t\t}\r\n\r\n\t\tthis.set('mode', val);\r\n\t},\r\n\r\n\t/**\r\n\t * Check if interferometry is supported\r\n\t */\r\n\tisInterferometrySupported: function() {\r\n\r\n\t\tif (this.datasetIds.length == 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (this.datasetIds.length > 2) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (var x in DatasetPopulation.selection) {\r\n\t\t\tvar dataset = DatasetPopulation.selection[x];\r\n\t\t\t/* Old method to check if a dataset supports interferometry\r\n\t\t\tif ( !dataset.hasKeyword('interferometry') ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}*/\r\n\r\n\t\t\t// New method... use the criteria 'usableForInterferometry'\r\n\t\t\tif (!DatasetPopulation.usableForInterferometry(x)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Call when the dataset selection is changed\r\n\t */\r\n\tonDatasetSelectionChanged: function(dataset) {\r\n\r\n\t\t// Recompute datasetIds parameter which is used in many places\r\n\t\tthis.datasetIds = [];\r\n\t\tfor (var x in DatasetPopulation.selection) {\r\n\t\t\tthis.datasetIds.push(x);\r\n\t\t}\r\n\r\n\t\t// Use parent's onDatasetSelectionChanged implementation\r\n\t\tSearchCriteria.prototype.onDatasetSelectionChanged.call(this, dataset);\r\n\r\n\t\t// Recompute the date range\r\n\t\tthis.computeDateRange();\r\n\r\n\t\tif (!this.get('dateRange'))\r\n\t\t\treturn;\r\n\r\n\t\t// Compute a search time range from the dataset extent\r\n\t\t// The stop date is the dataset stop date\r\n\t\tvar start = this.get('start');\r\n\t\tvar stop = this.get('stop');\r\n\t\tvar rangeStart = this.get('dateRange').start;\r\n\t\tvar rangeStop = this.get('dateRange').stop;\r\n\r\n\t\tif (stop > rangeStop || start < rangeStart) {\r\n\r\n\t\t\t// Stop is current date, or dataset stop\r\n\t\t\tstop = new Date();\r\n\t\t\tif (stop < rangeStart) {\r\n\t\t\t\tstop = new Date(rangeStart.getTime() + ONE_MONTH);\r\n\t\t\t}\r\n\r\n\t\t\tif (stop > rangeStop) {\r\n\t\t\t\tstop = new Date(rangeStop.getTime());\r\n\t\t\t}\r\n\r\n\t\t\t// The start date is set to one month before the stop date (or the dataset start date if less than one month before)\r\n\t\t\tvar diff = (rangeStop - rangeStart);\r\n\t\t\tif (diff > ONE_MONTH) {\r\n\t\t\t\tstart = new Date(stop.getTime() - ONE_MONTH);\r\n\t\t\t} else {\r\n\t\t\t\tstart = new Date(rangeStart.getTime());\r\n\t\t\t}\r\n\r\n\t\t\t// Reset start time\r\n\t\t\tstart.setUTCHours(0);\r\n\t\t\tstart.setUTCMinutes(0);\r\n\t\t\tstart.setUTCSeconds(0);\r\n\t\t\tstart.setUTCMilliseconds(0);\r\n\r\n\t\t\t// Reset stop time\r\n\t\t\tstop.setUTCHours(23);\r\n\t\t\tstop.setUTCMinutes(59);\r\n\t\t\tstop.setUTCSeconds(59);\r\n\t\t\tstop.setUTCMilliseconds(999);\r\n\r\n\t\t\tthis.set({\r\n\t\t\t\tstart: start,\r\n\t\t\t\tstop: stop\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = new DataSetSearch();","/**\n *\tDownload option model contained by <DownloadOptions>\n *\t\n *\t@param parent\n *\t\t\tParent DownloadOptions model\n *\t@param options\n *\t\t\tOptions initializing current download option\n *\t\t\tMandatory: argumentName, value\n *\t\t\tOptionnal: caption, description, minOccurs, maxOccurs, preConditions, cropProductSearchArea\n */\nvar DownloadOption = function(parent, options) {\n\tthis.parent = parent;\n\n\tthis.argumentName = options.argumentName;\n\tthis.caption = options.caption || \"\";\n\tthis.description = options.description || \"\";\n\tthis.minOccurs = options.hasOwnProperty(\"minOccurs\") ? parseInt(options.minOccurs) : 1;\n\tthis.maxOccurs = options.hasOwnProperty(\"maxOccurs\") ? parseInt(options.maxOccurs) : 1;\n\tthis.value = _.cloneDeep(options.value);\n\tthis.preConditions = options.preConditions || null;\n\n\t// Special \"crop\" property\n\tthis.cropProductSearchArea = options.hasOwnProperty(\"cropProductSearchArea\") ? options.cropProductSearchArea : false;\n\n\t// Define the type of download option depending on minOccurs/maxOccurs\n\tthis.type = (this.minOccurs == 1 && this.maxOccurs == 1) ? \"select\" :\n\t\t\t\t(this.minOccurs == 0 && this.maxOccurs == 1) ? \"select-with-none\" : \"checkbox\"\n\n\t// NGEO-2165: Add None value according to minOccurs & maxOccurs parameters\n\tif ( this.type == \"select-with-none\" ) {\n\t\tthis.value.unshift({\n\t\t\t\"humanReadable\": \"None\",\n\t\t\t\"name\": \"@none\",\n\t\t\t\"sizeFactor\": 1\n\t\t});\n\t}\n};\n\n/**\n *   Get first valid value for the given option respecting the preconditions(coming from DownlaodOptions object)\n *\n *   @see NGEOD-729: Download options with pre-conditions\n */\nDownloadOption.prototype.getValidValue = function() {\n\tvar selectedValue = _.filter(this.value, function(v){ return Boolean(v.selected) == true; } );\n\tif ( this.type == \"checkbox\" ) {\n\t\t// Checkbox : return an array\n\t\tif ( selectedValue.length ) {\n\t\t\tvar self = this;\n\t\t\t// Multiple value has been selected take only it names\n\t\t\treturn _.filter(selectedValue, function(value) { return self.parent.hasValidPreconditions(value)}).map(function(value){return value.name});\n\t\t}\n\n\t\t// No value selected by default\n\t\treturn [];\n\t} else {\n\t\t// Select : return a value\n\t\tif ( selectedValue.length == 1 && this.parent.hasValidPreconditions(selectedValue[0]) ) {\n\t\t\treturn selectedValue[0].name;\n\t\t}\n\t\t\n\t\t// If selected isn't defined, get the first valid one\n\t\tfor (var i = 0; i < this.value.length; i++) {\n\t\t\tvar value = this.value[i];\n\t\t\tif (this.parent.hasValidPreconditions(value)) {\n\t\t\t\treturn value.name;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nmodule.exports = DownloadOption;","var DownloadOption = require('search/model/downloadOption');\n\n/**\n *  Download options model\n */\nvar DownloadOptions = function(downloadOptions, options) {\n\n\t// TODO : refactor collection property, try to use Backbone.Collection object ?\n\tthis.collection = [];\n\tthis.attributes = {}; // Simplified form of currently visible options\n\n\tfor (var i = 0; i < downloadOptions.length; i++) {\n\t\tvar option = new DownloadOption(this, downloadOptions[i]);\n\t\tthis.collection.push(option);\n\n\t\tif (options && options.init) {\n\t\t\t// Fill with valid values\n\t\t\tif (!option.cropProductSearchArea) {\n\t\t\t\tvar selectedValue = option.getValidValue();\n\t\t\t\tthis.setValue(option.argumentName, selectedValue);\n\t\t\t} else {\n\t\t\t\tthis.setValue(option.argumentName, Boolean(option.cropProductSearchArea));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Static method allowing to extract download options from the given url\n */\nDownloadOptions.extractParamsFromUrl = function(url) {\n\n\tvar idx = url.indexOf(\"ngEO_DO={\");\n\tif (idx >= 0) {\n\t\t// Case when ngEO_DO is present in url --> remove it\n\t\turl = url.substring(idx + 9, url.length - 1);\n\t}\n\n\tvar res = {};\n\t// Extract keys/values from parameters\n\tvar keys = url.match(/([\\b\\s\\w]+):/gm);\n\tvar parameters = [];\n\tfor ( var j=0; j<keys.length-1; j++ ) {\n\t\tvar current = url.substring(url.indexOf(keys[j]), url.indexOf(keys[j+1]) - 1);\n\t\tparameters.push(current);\n\t}\n\tparameters.push(url.substring(url.indexOf(keys[keys.length-1])))\n\n\tfor ( var n = 0; n < parameters.length; n++ ) {\n\t\tvar p = parameters[n].split(':');\n\t\tif (p.length != 2) \n\t\t\tthrow \"Invalid OpenSearch URL : download option parameter \" + parameters[n] + \"not correctly defined.\"\n\n\t\tif ( p[1].indexOf(\"[\") >= 0 ) {\n\t\t\t// Surround every item in array with '\"' to be able to parse as JSON\n\t\t\t// WEBS spec rocks !\n\t\t\tp[1] = JSON.parse(p[1].replace(/([^,\\[\\]]*)/g, function(r, $1) { if (r){\n\t\t\t\treturn '\"'+$1+'\"';\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t} } ));\n\t\t}\n\t\tres[p[0]] = (p[0] == \"cropProduct\") ? true : p[1];\n\t}\n\treturn res;\n};\n\n\n/**\n *\tPopulate download options object from the given url parameters\n *\t@param urlParams Url parameters for ngEO_DO or the entire url containing ngEO_DO\n *\t\tex: {processing:RAW,Otherwise option:[val2,val3]}\n *\t\tex: http://ngeo?advancedProperties={}&ngEO_DO={key1:val1,key2:[val1,val2]}\n */\nDownloadOptions.prototype.populateFromUrl = function(url) {\n\n\t// // Doesn't work !\n\t// // Use this regex to avoid splitting crop product\n\t// // which has multiple \",\" in it OR multiple values between  []\n\t// var commaNotBetweenParenthesisRe = new RegExp(/,(?!\\(?[^\\(\\)]*\\))(?!\\[?[^,]*\\])/g);\n\t// parameters = url.split(commaNotBetweenParenthesisRe);\n\n\tthis.attributes = DownloadOptions.extractParamsFromUrl(url);\n\t// HACK: Set crop to false if doesn't exist in URL\n\tvar cropDo = _.findWhere(this.collection, {cropProductSearchArea: \"true\"});\n\tif ( cropDo ) {\n\t\tthis.attributes[cropDo.argumentName] = _.find(_.keys(this.attributes), function(p) { return p.indexOf(\"crop\") >= 0 }) ? \"true\" : false;\n\t}\n};\n\n/**\n *  Update download options with the given options\n *\tTODO: improve it\n */\nDownloadOptions.prototype.updateFrom = function(downloadOptions) {\n\tthis.collection = _.cloneDeep(downloadOptions.collection);\n\tthis.attributes = _.cloneDeep(downloadOptions.attributes);\n};\n\n/**\n *  Set the attribute to the given value\n *  When null, delete the attribute from attributes\n */\nDownloadOptions.prototype.setValue = function(attribute, value) {\n\n\t// Update download option \"selected\" attribute according to new value\n\tvar doption = _.findWhere(this.collection, { \"argumentName\": attribute });\n\tif ( doption && doption.value ) {\n\t\tfor ( var i=0; i<doption.value.length; i++ ) {\n\t\t\tvar doptionValue = doption.value[i];\n\t\t\tif ( value && value.indexOf(doptionValue.name) != -1 ) {\n\t\t\t\tdoptionValue.selected = true;\n\t\t\t} else {\n\t\t\t\tdelete doptionValue.selected;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Update attributes to hide attributes in form\n\tif (!value) {\n\t\tdelete this.attributes[attribute]\n\t} else {\n\t\tthis.attributes[attribute] = value;\n\t}\n\tthis.updatePreconditions();\n};\n\n/**\n *  Get attributes filtering the null and conflict values\n */\nDownloadOptions.prototype.getAttributes = function() {\n\treturn _.omit(this.attributes, function(attr) {\n\t\treturn attr == null || attr == \"@conflict\" || attr == \"@none\";\n\t});\n};\n\n/**\n *\tGet currently selected download option values for the given download option\n */\nDownloadOptions.prototype.getSelectedValues = function(doName) {\n\tvar doption = _.findWhere(this.collection, {argumentName: doName});\n\treturn _.filter(doption.value, function(v) { return v.selected == true; }).map(function(v) { return v.name });\n};\n\n/**\n *  Update model depending on its preconditions\n */\nDownloadOptions.prototype.updatePreconditions = function() {\n\tvar self = this;\n\t// Update model according to preconditions of each download option\n\t_.each(this.collection, function(option) {\n\t\tif (self.hasValidPreconditions(option)) {\n\t\t\t//var attributeToUpdate = _.findWhere( this.downloadOptions, { \"argumentName\": option.argumentName } );\n\t\t\t// cropProductSearchArea doesn't have any value\n\t\t\tif (!option.cropProductSearchArea) {\n\t\t\t\tvar selectedValue = self.getSelectedValues(option.argumentName);\n\t\t\t\tif (selectedValue.length || self.attributes[option.argumentName] == \"@conflict\") {\n\t\t\t\t\t// Option has already the value set\n\n\t\t\t\t\t// Set valid value only in case when selected value is not in conflict and preconditions aren't respected\n\t\t\t\t\t// @see IICD-WC-WS \n\t\t\t\t\tif (option.type == \"checkbox\") {\n\t\t\t\t\t\t// Checkboxes\n\t\t\t\t\t\t// Remove every invalid value\n\t\t\t\t\t\tvar validOptions = _.filter(option.value, function(v) { return (v.selected && self.hasValidPreconditions(v)) })\n\t\t\t\t\t\tvar newAttributes = validOptions.map(function(value) { return value.name });\n\t\t\t\t\t\t// TODO: refactor all this stuff from scratch...\n\t\t\t\t\t\tif ( newAttributes.length == 0 ) {\n\t\t\t\t\t\t\tdelete self.attributes[option.argumentName];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.attributes[option.argumentName] = newAttributes;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Check that set value respects it own preconditions\n\t\t\t\t\t\tvar valueObject = _.findWhere(option.value, {\n\t\t\t\t\t\t\tname: selectedValue[0] // Select should have only one selected value\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (selectedValue != \"@conflict\" && valueObject && !self.hasValidPreconditions(valueObject)) {\n\t\t\t\t\t\t\t// Get the new random valid value\n\t\t\t\t\t\t\tself.attributes[option.argumentName] = option.getValidValue();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Ensure that selected attribute is chosen\n\t\t\t\t\t\t\tself.attributes[option.argumentName] = selectedValue.length > 0 ? selectedValue[0] :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption.type == \"select-with-none\" ? '@none' : '@conflict'; // With none value\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tif ( option.type == \"checkbox\" ) {\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Option respects the preconditions, update model with a valid value\n\t\t\t\t\t\tself.attributes[option.argumentName] = option.getValidValue();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Precondition isn't respected anymore, so we unset it from model\n\t\t\tdelete self.attributes[option.argumentName];\n\t\t}\n\t});\n};\n\n/**\n *  Check if option/value has valid preconditions\n *  i.e. exist on object with the same value\n *\n *  @param param\n *      Could be value in \"value\" array, or option in downloadOptions\n *\n *  @see NGEOD-729: Download options with pre-conditions\n */\nDownloadOptions.prototype.hasValidPreconditions = function(param) {\n\tif (!param.preConditions)\n\t\treturn true;\n\n\tvar self = this;\n\tvar res = false;\n\t_.each(param.preConditions, function(precondition) {\n\t\tvar doption = _.findWhere(self.collection, {argumentName: precondition.parentDownloadOption});\n\t\tif ( self.hasValidPreconditions(doption) ) {\n\t\t\tvar doptionValue = _.findWhere(doption.value, {name: precondition.parentDownloadValue});\n\t\t\tres |= doptionValue.selected;\n\t\t}\n\t\t// res |= (self.attributes[precondition.parentDownloadOption] == precondition.parentDownloadValue);\n\t});\n\treturn res;\n};\n\n/**\n *\tGet parameters as a string {do1:value1,do2:value2,cropDo:searchArea-in-WKT}\n */\nDownloadOptions.prototype.getParameters = function() {\n\n\t// CropProduct must be a WKT and not a boolean\n\t// NB: Use cropProductSearchArea to spot the argumentName of cropProduct\n\tvar cropProductKey = _.find(this.collection, function(downloadOption) {\n\t\treturn Boolean(downloadOption.cropProductSearchArea)\n\t});\n\t// TODO: resolve circular dependency\n\tvar DataSetSearch = require('search/model/datasetSearch');\n\tvar buildCropProduct = function(key, value) {\n\t\tif (cropProductKey && key == cropProductKey.argumentName && value === true) {\n\t\t\tvalue = DataSetSearch.searchArea.toWKT();\n\t\t}\n\t\treturn value;\n\t};\n\treturn JSON.stringify(this.getAttributes(), buildCropProduct).replace(/\\\"/g, \"\"); // No \"\" by spec;\n};\n\n/**\n * In case there are selected download options : \n *      add download options to the given url by appending \"&ngEO_DO={param_1:value_1,...,param_n:value_n} \n *      to the url and returns the modified url.\n * otherwise : do not append \"&ngEO_DO={} to the url \n */\nDownloadOptions.prototype.getAsUrlParameters = function() {\n\tvar res = \"\";\n\tvar values = this.getParameters();\n\tif (values != \"{}\") {\n\t\tres = \"ngEO_DO=\"+values;\n\t}\n\treturn res;\n}\n\nmodule.exports = DownloadOptions;","var Map = require('map/map');\r\nvar MapUtils = require('map/utils');\r\nvar GeoJSONConverter = require('map/geojsonconverter');\r\nvar Rectangle = require('map/rectangle');\r\n\r\n// Utility method to transfrom from decimal degree to degree/minute/second\r\nvar toDMS = function(dd) {\r\n\tvar deg = dd | 0; // truncate dd to get degrees\r\n\tvar frac = Math.abs(dd - deg); // get fractional part\r\n\tvar min = (frac * 60) | 0; // multiply fraction by 60 and truncate\r\n\tvar sec = (frac * 3600 - min * 60) | 0;\r\n\treturn deg + \":\" + min + \":\" + sec;\r\n};\r\n\r\nvar numberToString = function(number, precision) {\r\n\tif (typeof precision != 'undefined' && precision >= 0) {\r\n\t\tvar factor = Math.pow(10, precision);\r\n\t\treturn (Math.floor(number * factor) / factor).toString();\r\n\t} else {\r\n\t\treturn number.toString();\r\n\t}\r\n};\r\n\r\n/**\r\n * An object to represent the search area\r\n */\r\nvar SearchArea = function() {\r\n\r\n\t/**\r\n\t * Private variables\r\n\t */\r\n\r\n\t// Search area is represented by a GeoJSON feature\r\n\tvar _feature = {\r\n\t\tid: '0',\r\n\t\tbbox: [-180, -90, 180, 90],\r\n\t\ttype: 'Feature',\r\n\t\tgeometry: {\r\n\t\t\ttype: 'Polygon',\r\n\t\t\tcoordinates: [\r\n\t\t\t\t[\r\n\t\t\t\t\t[-180, -90],\r\n\t\t\t\t\t[180, -90],\r\n\t\t\t\t\t[180, 90],\r\n\t\t\t\t\t[-180, 90],\r\n\t\t\t\t\t[-180, -90]\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t},\r\n\t\tproperties: {}\r\n\t};\r\n\t// The search area mode : BBOX or POLYGON\r\n\tvar _mode = SearchArea.BBOX;\r\n\r\n\t/**\r\n\t * Private methods\r\n\t */\r\n\r\n\t// Update the feature when the mode or geometry has changed\r\n\tvar _updateFeature = function() {\r\n\t\tif (_mode == SearchArea.BBOX) {\r\n\r\n\t\t\t// We really need to update the feature like that to be able to display wide rectangles, otherwise the shortest\r\n\t\t\t// segments will be taken..\r\n\t\t\tvar rectangle = new Rectangle({\r\n\t\t\t\twest: _feature.bbox[0],\r\n\t\t\t\tsouth: _feature.bbox[1],\r\n\t\t\t\teast: _feature.bbox[2],\r\n\t\t\t\tnorth: _feature.bbox[3]\r\n\t\t\t});\r\n\t\t\t_feature.geometry.coordinates = rectangle.feature.geometry.coordinates;\r\n\t\t\t_feature.geometry.type = rectangle.feature.geometry.type;\r\n\r\n\t\t\t// Code hereafter doesn't really work, but should be.. improve it one day...\r\n\t\t\t// var rectangle = new Rectangle({\r\n\t\t\t// \tfeature: _feature,\r\n\t\t\t// \ttype: _feature.bbox[0] > _feature.bbox[2] ? \"MultiLineString\" : \"Polygon\"\r\n\t\t\t// });\r\n\r\n\t\t} else {\r\n\t\t\t// Compute the extent from the coordinates\r\n\t\t\tvar coords = _feature.geometry.coordinates[0];\r\n\t\t\tvar minX = coords[0][0];\r\n\t\t\tvar minY = coords[0][1];\r\n\t\t\tvar maxX = coords[0][0];\r\n\t\t\tvar maxY = coords[0][1];\r\n\t\t\tfor (var i = 1; i < coords.length; i++) {\r\n\t\t\t\tminX = Math.min(minX, coords[i][0]);\r\n\t\t\t\tminY = Math.min(minY, coords[i][1]);\r\n\t\t\t\tmaxX = Math.max(maxX, coords[i][0]);\r\n\t\t\t\tmaxY = Math.max(maxY, coords[i][1]);\r\n\t\t\t}\r\n\t\t\t_feature.bbox = [minX, minY, maxX, maxY];\r\n\t\t}\r\n\t};\r\n\r\n\t// Get a polygon from a layer\r\n\tvar _getPolygonFromLayer = function(layer) {\r\n\r\n\t\t// First convert the layer to GeoJSON\r\n\t\tif (!GeoJSONConverter.toGeoJSON(layer)) {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: 'format not supported or invalid.'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar f;\r\n\t\t// Then check if the data is a feature collection or not\r\n\t\tif (layer.data.type == 'FeatureCollection') {\r\n\t\t\tif (layer.data.features.length == 1) {\r\n\t\t\t\tf = layer.data.features[0];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: false,\r\n\t\t\t\t\tmessage: 'file must have only one feature, ' + layer.data.features.length + ' found'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tf = layer.data;\r\n\t\t}\r\n\r\n\t\t// Then check feature is geojson\r\n\t\tif (f.type != 'Feature') {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: 'invalid feature'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Then check feature is polygon\r\n\t\tif (f.geometry.type != 'Polygon') {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: 'feature must be a polygon'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tvalid: true,\r\n\t\t\tfeature: f\r\n\t\t};\r\n\t};\r\n\r\n\t// Get the mode for the search area\r\n\tthis.getMode = function() {\r\n\t\treturn _mode;\r\n\t};\r\n\r\n\t// Set the mode for the search area\r\n\tthis.setMode = function(mode) {\r\n\t\t_mode = mode;\r\n\t};\r\n\r\n\t// Get the bbox as a object\r\n\tthis.getBBox = function() {\r\n\t\treturn {\r\n\t\t\twest: _feature.bbox[0],\r\n\t\t\tsouth: _feature.bbox[1],\r\n\t\t\teast: _feature.bbox[2],\r\n\t\t\tnorth: _feature.bbox[3]\r\n\t\t};\r\n\t};\r\n\r\n\t// Get the GeoJSON feature that represents the search area\r\n\tthis.getFeature = function() {\r\n\t\treturn _feature;\r\n\t};\r\n\r\n\t// Get the polygon text\r\n\tthis.getPolygonText = function() {\r\n\t\tvar coords = _feature.geometry.coordinates[0];\r\n\t\tvar text = \"\";\r\n\t\tfor (var i = 0; i < coords.length; i++) {\r\n\t\t\ttext += toDMS(coords[i][1]) + \" \" + toDMS(coords[i][0]) + \"\\n\";\r\n\t\t}\r\n\t\treturn text;\r\n\t};\r\n\r\n\t//Transform to WKT\r\n\t//NGEO 509 : it is requested to rollback the changes !\r\n\tthis.toWKT = function(precision) {\r\n\r\n\t\tvar coords = _feature.geometry.coordinates;\r\n\r\n\t\tvar param = \"POLYGON(\";\r\n\t\tif ( _feature.geometry.type == \"MultiLineString\" ) {\r\n\t\t\t// Create rectangle containing Polygon coordinates for the given feature\r\n\t\t\tvar rectangle = new Rectangle({\r\n\t\t\t\twest: _feature.bbox[0],\r\n\t\t\t\tsouth: _feature.bbox[1],\r\n\t\t\t\teast: _feature.bbox[2],\r\n\t\t\t\tnorth: _feature.bbox[3],\r\n\t\t\t\ttype: \"Polygon\"\r\n\t\t\t});\r\n\t\t\tcoords = rectangle.feature.geometry.coordinates;\r\n\t\t} \r\n\r\n\t\t// Convert polygon coordinates to WKT\r\n\t\tfor (var j = 0; j < coords.length; j++) {\r\n\t\t\tif (j != 0) {\r\n\t\t\t\tparam += \",\";\r\n\t\t\t}\r\n\t\t\tparam += \"(\";\r\n\t\t\tfor (var i = 0; i < coords[j].length; i++) {\r\n\t\t\t\tif (i != 0) {\r\n\t\t\t\t\tparam += \",\";\r\n\t\t\t\t}\r\n\t\t\t\tparam += numberToString(coords[j][i][0], precision) + \" \" + numberToString(coords[j][i][1], precision);\r\n\t\t\t}\r\n\t\t\tparam += \")\";\r\n\t\t}\r\n\r\n\t\tparam += \")\";\r\n\r\n\t\treturn param;\r\n\t};\r\n\r\n\t// \tGet the opensearch parameter for the search area\r\n\tthis.getOpenSearchParameter = function(precision) {\r\n\t\tvar param;\r\n\t\tif (_mode == SearchArea.POLYGON) {\r\n\t\t\t// See http://www.opensearch.org/Specifications/OpenSearch/Extensions/Geo/1.0/Draft_2#The_.22geometry.22_parameter\r\n\t\t\tparam = \"geom=\" + this.toWKT(precision);\r\n\r\n\t\t} else if (_mode == SearchArea.BBOX) {\r\n\r\n\t\t\tparam = \"bbox=\" + numberToString(_feature.bbox[0], precision) + \",\" + numberToString(_feature.bbox[1], precision) + \",\" + numberToString(_feature.bbox[2], precision) + \",\" + numberToString(_feature.bbox[3], precision);\r\n\t\t}\r\n\r\n\t\treturn param;\r\n\t};\r\n\r\n\t// Set an empty search area\r\n\tthis.empty = function() {\r\n\t\t_feature.bbox = [0, 0, 0, 0];\r\n\t\t_feature.geometry.coordinates = [\r\n\t\t\t[\r\n\t\t\t\t[0, 0]\r\n\t\t\t]\r\n\t\t];\r\n\t\t_mode = SearchArea.EMPTY;\r\n\t\t_updateFeature();\r\n\t};\r\n\r\n\t// Set the BBox\r\n\tthis.setBBox = function(bbox) {\r\n\t\t_feature.bbox = [bbox.west, bbox.south, bbox.east, bbox.north];\r\n\t\t_mode = SearchArea.BBOX;\r\n\t\t_updateFeature();\r\n\t};\r\n\r\n\t// Set the search area from a layer\r\n\tthis.setFromLayer = function(layer) {\r\n\t\tvar result = _getPolygonFromLayer(layer);\r\n\t\tif (result.valid) {\r\n\t\t\t_feature.geometry.coordinates = result.feature.geometry.coordinates;\r\n\t\t\t_mode = SearchArea.POLYGON;\r\n\t\t\t_updateFeature();\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// Import polygon from text\r\n\tthis.setPolygonFromText = function(text) {\r\n\t\tvar polygonRe = /\\s*([-+]?)(\\d+):(\\d+):(\\d+)\\s+([-+]?)(\\d+):(\\d+):(\\d+)/gm;\r\n\t\tvar match = polygonRe.exec(text);\r\n\t\tif (!match) {\r\n\t\t\tthis.empty();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar coordinates = [];\r\n\t\twhile (match) {\r\n\t\t\tvar lat = parseFloat(match[2]) + (parseFloat(match[3]) / 60.0) + (parseFloat(match[4]) / 3600.0);\r\n\t\t\tvar lon = parseFloat(match[6]) + (parseFloat(match[7]) / 60.0) + (parseFloat(match[8]) / 3600.0);\r\n\t\t\tlat *= (match[1] == '-') ? -1.0 : 1.0;\r\n\t\t\tlon *= (match[5] == '-') ? -1.0 : 1.0;\r\n\t\t\tcoordinates.push([lon, lat]);\r\n\t\t\tmatch = polygonRe.exec(text);\r\n\t\t}\r\n\t\t// Close polygon if needed\r\n\t\tif (coordinates[0][0] != coordinates[coordinates.length - 1][0] || coordinates[0][1] != coordinates[coordinates.length - 1][1]) {\r\n\t\t\tcoordinates.push(coordinates[0]);\r\n\t\t}\r\n\t\t_feature.geometry.coordinates = [coordinates];\r\n\t\t_mode = SearchArea.POLYGON;\r\n\t\t_updateFeature();\r\n\t\treturn true;\r\n\t};\r\n\r\n\t// Import from WKT, POLYGON or MULTIPOLYGON\r\n\tthis.setFromWKT = function(wkt) {\r\n\t\tvar polygonRe = /POLYGON\\(\\(([^\\)]+)\\)\\)/gm;\r\n\t\tvar match = polygonRe.exec(decodeURIComponent(wkt));\r\n\r\n\t\tif (match) {\r\n\t\t\tdata = match[1];\r\n\t\t} else {\r\n\t\t\tvar multiPolygonRe = /MULTIPOLYGON\\(\\(\\(([^\\)]+)/gm;\r\n\t\t\tmatch = multiPolygonRe.exec(decodeURIComponent(wkt));\r\n\t\t}\r\n\r\n\t\tif (match) {\r\n\t\t\tvar data = match[1];\r\n\t\t\tvar strCoords = data.split(',');\r\n\t\t\tvar coordinates = [];\r\n\t\t\tfor (var i = 0; i < strCoords.length; i++) {\r\n\t\t\t\tvar strLatLon = strCoords[i].split(/\\s+/);\r\n\t\t\t\tvar lat = parseFloat(strLatLon[1]);\r\n\t\t\t\tvar lon = parseFloat(strLatLon[0]);\r\n\t\t\t\tcoordinates.push([lon, lat]);\r\n\t\t\t}\r\n\t\t\t_feature.geometry.coordinates = [coordinates];\r\n\t\t\t_mode = SearchArea.POLYGON;\r\n\t\t\t_updateFeature();\r\n\t\t}\r\n\t};\r\n};\r\n\r\nSearchArea.BBOX = 0;\r\nSearchArea.POLYGON = 1;\r\nSearchArea.EMPTY = -1;\r\n\r\n\r\nmodule.exports = SearchArea;","var Configuration = require('configuration');\r\nvar SearchArea = require('search/model/searchArea');\r\nvar DownloadOptions = require('search/model/downloadOptions');\r\nvar DatasetPopulation = require('search/model/dataSetPopulation');\r\n\r\nfunction pad(num, size) {\r\n\tvar s = num + \"\";\r\n\twhile (s.length < size) s = \"0\" + s;\r\n\treturn s;\r\n}\r\n\r\n// Helper function to convert a string in ISO format to date\r\nDate.fromISOString = function(str) {\r\n\r\n\tvar reDate = /(\\d+)-(\\d+)-(\\d+)(?:T(\\d+):(\\d+)(?::(\\d+)(?:.(\\d+))?)?Z)?/;\r\n\tvar match = reDate.exec(str);\r\n\tif (match) {\r\n\t\t// Hack to support bad date\r\n\t\tif (match[1].length < match[3].length) {\r\n\t\t\tvar tmp = match[1];\r\n\t\t\tmatch[1] = match[3];\r\n\t\t\tmatch[3] = tmp;\r\n\t\t}\r\n\r\n\t\t// Need to cut the original precision to only first 3 digits since UTC constructor accepts milliseconds only in range between 0-999\r\n\t\t// @see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\r\n\t\tif (match[7] && match.length > 3) {\r\n\t\t\tmatch[7] = match[7].substr(0, 3);\r\n\t\t}\r\n\r\n\t\tvar date = new Date(Date.UTC(match[1], match[2] - 1, match[3], match[4] || 0, match[5] || 0, match[6] || 0, match[7] || 0));\r\n\r\n\t\treturn date;\r\n\t} else {\r\n\t\tthrow \"Invalid ISO date\";\r\n\t}\r\n};\r\n\r\n// Helper function to convert a date to an iso string, only the date part\r\nDate.prototype.toISODateString = function() {\r\n\treturn this.getUTCFullYear() + \"-\" + pad(this.getUTCMonth() + 1, 2) + \"-\" + pad(this.getUTCDate(), 2);\r\n};\r\n\r\n// A constant\r\nvar ONE_MONTH = 24 * 30 * 3600 * 1000;\r\n\r\n/**\r\n * This backbone model holds the search criteria attributes\r\n * Used as a base class for DatasetSearch & StandingOrder\r\n */\r\nvar SearchCriteria = Backbone.Model.extend({\r\n\r\n\t// Defaults is a function in aim to not share among instances\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\tstop: new Date(),\r\n\t\t\tstart: new Date(new Date().getTime() - ONE_MONTH),\r\n\t\t\tuseExtent: true,\r\n\t\t\tadvancedAttributes: {},\r\n\t\t\tdownloadOptions: {}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\t\r\n\t * Constructor\r\n\t */\r\n\tinitialize: function() {\r\n\t\t// The search area\r\n\t\tthis.searchArea = new SearchArea();\r\n\r\n\t\t// Automatically load the dataset when the datasetId is changed\r\n\t\tthis.listenTo(DatasetPopulation, 'select', this.onDatasetSelectionChanged);\r\n\t\tthis.listenTo(DatasetPopulation, 'unselect', this.onDatasetSelectionChanged);\r\n\t},\r\n\r\n\t/**\r\n\t * Get the url without base url with all search criteria\r\n\t */\r\n\tgetOpenSearchParameters: function(datasetId) {\r\n\r\n\t\t//add area criteria if set\r\n\t\tvar params = this.addGeoTemporalParams();\r\n\r\n\t\t//always add the advanced criteria values selected and already set to the model\r\n\t\tparams = this.addAdvancedCriteria(params, datasetId);\r\n\r\n\t\t//add the download options values selected and already set to the model\r\n\t\tparams = this.addDownloadOptions(params, datasetId);\r\n\r\n\t\t//console.log(\"DatasetSearch module : getCoreURL method : \" + url);\r\n\r\n\t\treturn params;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the shared search URL\r\n\t */\r\n\tgetSharedSearchURL: function() {\r\n\r\n\t\tvar url = \"#data-services-area/search/\" + this.getDatasetPath() + '?';\r\n\t\turl += this.getOpenSearchParameters();\r\n\t\treturn url;\r\n\t},\r\n\r\n\t/**\r\n\t * Populate the model with the parameters retrieved from the Shared URL\r\n\t */\r\n\tpopulateModelfromURL: function(query, datasetId) {\r\n\r\n\t\t// Enhance bad queries case\r\n\t\tif ( query.charAt(0) == \"?\" || query.charAt(0) == \"&\" ) {\r\n\t\t\tquery = query.substr(1);\r\n\t\t}\r\n\r\n\t\tvar vars = query.split(\"&\");\r\n\r\n\t\t// Force useExtent to false to avoid bug when setting the geometry\r\n\t    this.set('useExtent', false);\r\n\r\n\t\tfor (var i = 0; i < vars.length; i++) {\r\n\r\n\t\t\tvar pair = vars[i].split(\"=\");\r\n\t\t\tif (pair.length != 2)\r\n\t\t\t\tthrow \"Invalid OpenSearch URL : parameter \" + vars[i] + \"not correctly defined.\"\r\n\r\n\t\t\tvar key = pair[0];\r\n\t    \tvar value = pair[1];\r\n\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase \"bbox\":\r\n\t\t\t\t\tvar coords = value.split(\",\");\r\n\t\t\t\t\tif (coords.length != 4)\r\n\t\t\t\t\t\tthrow \"Invalid OpenSearch URL : bbox parameter is not correct.\"\r\n\t\t\t\t\tthis.searchArea.setBBox({\r\n\t\t\t\t\t\twest: parseFloat(coords[0]),\r\n\t\t\t\t\t\tsouth: parseFloat(coords[1]),\r\n\t\t\t\t\t\teast: parseFloat(coords[2]),\r\n\t\t\t\t\t\tnorth: parseFloat(coords[3])\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"geom\":\r\n\t\t\t\t\t// TODO : check polygon is correct\r\n\t\t\t\t\tthis.searchArea.setFromWKT(value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"start\":\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.set('start', Date.fromISOString(value));\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tthrow \"Invalid OpenSearch URL : start parameter is not correct.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"stop\":\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.set('stop', Date.fromISOString(value));\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tthrow \"Invalid OpenSearch URL : stop parameter is not correct.\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ngEO_DO\":\r\n\t\t\t\t\tvar don = value.substr(1, value.length-2);\r\n\t\t\t\t\tvar downloadOptions = this.get('downloadOptions')[datasetId];\r\n\t\t\t\t\tdownloadOptions.populateFromUrl(don);\r\n\t\t\t\t\t// Force triggering since there is no set of 'downloadOptions'\r\n\t\t\t\t\tthis.trigger(\"change:downloadOptions\");\r\n\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif ( this.has(key) ) {\r\n\t\t\t\t\t\t// Interferometry parameters are stored directly on a model\r\n\t\t\t\t\t\tthis.set(key, value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Check if Advanced attributes\r\n\t\t\t\t\t\tvar advancedAttributes = this.get('advancedAttributes')[datasetId];\r\n\t\t\t\t\t\tvar attributeToDefine = _.findWhere(advancedAttributes, {id: key});\r\n\t\t\t\t\t\t// Set parameter if it exists in advanced attribute of the given dataset\r\n\t\t\t\t\t\t// skip any other parameter\r\n\t\t\t\t\t\tif ( attributeToDefine ) {\r\n\t\t\t\t\t\t\tattributeToDefine.value = value;\r\n\t\t\t\t\t\t\t// Force triggering since object doesn't do it automatically\r\n\t\t\t\t\t\t\tthis.trigger('change:advancedAttributes');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Manual trigger of a change:searchArea event because SearchArea is not (yet?) a Backbone model\r\n\t\tthis.trigger('change:searchArea');\r\n\r\n\t},\r\n\r\n\t// Add date WITHOUT cf ngeo 368 time and area parameters\r\n\taddGeoTemporalParams: function() {\r\n\r\n\t\tvar params = \"start=\" + this.get(\"start\").toISOString() + \"&\" +\r\n\t\t\t\"stop=\" + this.get(\"stop\").toISOString();\r\n\r\n\t\tvar searchAreaParam = this.searchArea.getOpenSearchParameter(Configuration.get(\"search.geometryPrecision\", 2));\r\n\t\t//if user has no search area parameter (for exmaple, in polygon mode, there are no area defined by user)\r\n\t\t//then do not provide search area criterion (issue NGEO-1723/NGEO-1394))\t\t\r\n\t\tif (searchAreaParam)\r\n\t\t\tparams += \"&\" + searchAreaParam\r\n\r\n\t\t//console.log(\"DatasetSearch module : addGeoTemporalParams : \" + url);\r\n\t\treturn params;\r\n\t},\r\n\r\n\t// Add advanced criteria to the given url\r\n\taddAdvancedCriteria: function(url, datasetId) {\r\n\r\n\t\tvar self = this;\r\n\t\t// Get the advanced attributes corresponding to the datasetId\r\n\t\t// And append only the modified values(which contain \"value\" attribute)\r\n\t\tvar advancedAttributes = this.get('advancedAttributes')[datasetId];\r\n\t\tif (advancedAttributes) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\t_.each(advancedAttributes, function(attribute) {\r\n\t\t\t\t// Check if the avanced attribute has a value in the DatasetSearch\r\n\t\t\t\tif ( attribute.value ) {\r\n\t\t\t\t\tvalues.push( attribute.id + '=' + attribute.value );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif ( values.length ) {\r\n\t\t\t\t// if ( url.indexOf(\"?\") >= 0 ) {\r\n\t\t        \turl += \"&\";\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \turl += \"?\";\r\n\t\t\t\t// }\r\n\t\t\t\turl += values.join(\"&\");\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\t//console.log(\"DatasetSearch module : addAdvancedCriteria : \" + url);\r\n\t\treturn url;\r\n\t},\r\n\r\n\t/**\r\n\t * In case there are selected download options : \r\n\t * \t\tadd download options to the given url by appending \"&ngEO_DO={param_1:value_1,...,param_n:value_n} \r\n\t * \t\tto the url and returns the modified url.\r\n\t * otherwise : do not append \"&ngEO_DO={} to the url \r\n\t */\r\n\taddDownloadOptions: function(url, datasetId) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Add the selected download options to the opensearch url\r\n\t\tvar downloadOptionsStr = null;\r\n\r\n\t\tvar downloadOptions = this.get('downloadOptions')[datasetId];\r\n\t\tif ( downloadOptions ) {\r\n\t\t\tvar doUrl = downloadOptions.getAsUrlParameters();\r\n\t\t\tif ( doUrl ) {\r\n\t\t\t\t// if ( url.indexOf(\"?\") >= 0 ) {\r\n\t\t        \turl += \"&\";\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \turl += \"?\";\r\n\t\t\t\t// }\r\n\t\t\t\turl += doUrl;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(\"DatasetSearch module : addDownloadOptionsWithProductURIConvention : \" + url);\r\n\t\treturn url;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Get the selected download options as a json object.\r\n\t * If the download options have been changed by the user, their are set as an attribute to the DatasetSearch\r\n\t * otherwise the default value is got from the dataset.\r\n\t */\r\n\tgetSelectedDownloadOptions: function(dataset) {\r\n\r\n\t\tvar selectedOptions = {};\r\n\t\tvar datasetId = dataset.get(\"datasetId\");\r\n\t\tvar downloadOptions = this.get('downloadOptions')[datasetId];\r\n\t\tif ( downloadOptions ) {\r\n\t\t\tselectedOptions = downloadOptions.attributes;\r\n\t\t}\r\n\t\treturn selectedOptions;\r\n\t},\r\n\r\n\t/**\r\n\t *\tUpdate advanced attributes & download options depending on dataset that has been changed\r\n\t *\tOverrided by DatasetSearch & StandingOrder objects\r\n\t */\r\n\tonDatasetSelectionChanged : function(dataset) {\r\n\r\n\t\tvar datasetId = dataset.get(\"datasetId\");\r\n\t\t//console.log(datasetId + \" : changed\");\r\n\t\tif ( this.get(\"advancedAttributes\")[datasetId] ) {\r\n\t\t\t// Already exists --> remove it\r\n\t\t\tdelete this.get(\"advancedAttributes\")[datasetId];\r\n\t\t\tdelete this.get(\"downloadOptions\")[datasetId];\r\n\t\t} else {\r\n\t\t\tthis.get(\"advancedAttributes\")[datasetId] = _.map(dataset.get(\"attributes\"), _.clone);\r\n\t\t\tthis.get('downloadOptions')[datasetId] = new DownloadOptions(dataset.get(\"downloadOptions\"), {init: true});\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = SearchCriteria;","var Configuration = require('configuration');\nvar DatasetPopulation = require('search/model/dataSetPopulation');\nvar SearchCriteria = require('search/model/searchCriteria');\n\n\n/**\n * Manage standing order criteria (except SchedulingOptions!)\n *\n */\nvar StandingOrder = SearchCriteria.extend({\n\n\tname: \"Subscribe\",\n\n\t/**\t\n\t * Constructor\n\t */\n\tinitialize: function() {\n\n\t\tSearchCriteria.prototype.initialize.apply(this, arguments);\n\t\tthis.dataset = undefined;\n\t},\n\n\t/**\t\n\t * Get the dataset path to build URLs\n\t */\n\tgetDatasetPath: function() {\n\t\treturn this.dataset ? this.dataset.get('datasetId') : \"\";\n\t},\n\n\t/**\n \t *\tPopulate model from URL only if dataset is defined\n\t *\tTODO: use SearchCriteria's method everytime : in other words,\n\t *\tthis method mustn't be called if dataset isn't defined\n\t */\n\tpopulateModelfromURL : function(query) {\n\t\tif ( this.dataset ) {\n\t\t\tSearchCriteria.prototype.populateModelfromURL.call(this, query, this.dataset.get(\"datasetId\"));\n\t\t}\n\t},\n\n\t/**\n\t * Create the openSearch url. \n\t * The url contains spatial, temporal and search criteria parameters.\n\t */\n\tgetOpenSearchURL: function(options) {\n\n\t\tvar url = Configuration.serverHostName + Configuration.baseServerUrl + \"/catalogue/\";\n\t\turl += this.getDatasetPath() + \"/search?\";\n\t\t// TODO: should never happen.. check this more deeply\n\t\tif ( this.dataset )\n\t\t\turl += this.getOpenSearchParameters(this.dataset.get(\"datasetId\"));\n\n\t\tvar format = (options && options.hasOwnProperty(\"format\")) ? options.format : \"json\";\n\t\turl += \"&format=\" + format;\n\n\t\treturn url;\n\t},\n\n\t/**\n\t *\tGet selected download options for the selected dataset if exists\n\t */\n\tgetSelectedDownloadOptions : function() {\n\t\tif ( this.dataset ) {\n\t\t\treturn SearchCriteria.prototype.getSelectedDownloadOptions.call(this, this.dataset);\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\t/** \n\t * Load the information for the selected dataset from the server\n\t * unless if no dataset is selected set the dataset to undefined\n\t */\n\tonDatasetSelectionChanged: function(dataset) {\n\n\t\t// Use parent's onDatasetSelectionChanged implementation\n\t\tSearchCriteria.prototype.onDatasetSelectionChanged.call(this, dataset);\n\n\t\t// Get the dataset : only one for standing order\n\t\tvar datasets = _.values(DatasetPopulation.selection);\n\t\tif (datasets.length == 1) {\n\t\t\tthis.dataset = datasets[0];\n\t\t} else {\n\t\t\tthis.dataset = undefined;\n\t\t}\n\n\t}\n\n});\n\nmodule.exports = StandingOrder;","var Configuration = require('configuration');\r\nvar advancedCriteria_template = require('search/template/advancedCriteriaContent');\r\n\r\nvar AdvancedSearchView = Backbone.View.extend({\r\n\r\n\tid: \"advancedSearchView\",\r\n\r\n\t/** \r\n\t * The model is the DatasetSearch (the search model containing search parameters)\r\n\t * The dataset property of DatasetSearch is the Dataset backbone model containing the advanced criteria \r\n\t */\r\n\r\n\tinitialize: function(options) {\r\n\t\tthis.listenTo(this.model, 'change:advancedAttributes', this.render);\r\n\t\tthis.dataset = options.dataset;\r\n\t\tthis.advancedAttributes = this.model.get(\"advancedAttributes\")[this.dataset.get(\"datasetId\")];\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t\t//catch the criterion range changes once the slider moving is finished\r\n\t\t'slidestop input': function(event) {\r\n\t\t\tthis.setInputCriterionValues(event);\r\n\t\t},\r\n\r\n\t\t//catch the changes of criterion range and/or simple text values by entering values in the text field\r\n\t\t//do not use input 'change' event to avoid interference of handlers. \r\n\t\t//In fact, when moving the slider change input event is triggered  \r\n\t\t//so this would make the handlers called twice.\r\n\t\t'blur input': function(event) {\r\n\t\t\tthis.setInputCriterionValues(event);\r\n\t\t},\r\n\r\n\t\t//listen to radio and check boxes change events since the events are handled respectively \r\n\t\t//by the radio and check boxes labels \r\n\t\t'click label': function(event) {\r\n\r\n\t\t\tvar $target = $(event.currentTarget);\r\n\t\t\tvar $input = $target.next();\r\n\t\t\tvar newValue = $input.attr('value');\r\n\t\t\tvar name = $input.attr('name');\r\n\r\n\t\t\tvar attributeToUpdate = _.findWhere(this.advancedAttributes, {\r\n\t\t\t\tid: name\r\n\t\t\t});\r\n\t\t\tvar currentValue = attributeToUpdate.value;\r\n\t\t\t// Update the value\r\n\t\t\tif ($target.hasClass('ui-checkbox-off')) {\r\n\r\n\t\t\t\t// NGEO-2075: Surround value with quotes in case when value contains \",\"\r\n\t\t\t\tif (newValue.indexOf(\",\") != -1) {\r\n\t\t\t\t\tnewValue = \"\\\"\" + newValue + \"\\\"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!currentValue) {\r\n\t\t\t\t\tcurrentValue = newValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrentValue += \",\" + newValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update attribute with new value\r\n\t\t\t\tattributeToUpdate.value = currentValue;\r\n\r\n\t\t\t} else if ($target.hasClass('ui-checkbox-on')) {\r\n\t\t\t\tvar currentValues = null;\r\n\t\t\t\tvar hasQuotes = currentValue.indexOf(\"\\\"\") >= 0;\r\n\t\t\t\tif ( hasQuotes ) {\r\n\t\t\t\t\tvar regExp = new RegExp(/(\\w{1,}[,-\\s+\\w{1,}]*)/g); // Take values with \",\" without quote sign\r\n\t\t\t\t\tcurrentValues = currentValue.match(regExp);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Parameters without \",\" so split it as usual\r\n\t\t\t\t\tcurrentValues = currentValue.split(\",\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentValues = _.without(currentValues, newValue);\r\n\r\n\t\t\t\t// Re-surround array with quotes after \"without\" operation\r\n\t\t\t\tif ( hasQuotes ) {\r\n\t\t\t\t\tcurrentValues = currentValues.map(function(val){\r\n\t\t\t\t\t\treturn \"\\\"\" + val + \"\\\"\"; // NGEO-2075\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//set the new value or remove if empty\r\n\t\t\t\tif (currentValues.length == 0) {\r\n\t\t\t\t\tdelete attributeToUpdate.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tattributeToUpdate.value = currentValues.join(',');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Update a range\r\n\t */\r\n\tupdateRange: function(name) {\r\n\r\n\t\tvar $from = this.$el.find('#' + name + '_from');\r\n\t\tvar $to = this.$el.find('#' + name + '_to');\r\n\r\n\t\tvar from = $from.val();\r\n\t\tvar to = $to.val();\r\n\r\n\t\tvar attributeToUpdate = _.findWhere(this.advancedAttributes, {\r\n\t\t\tid: name\r\n\t\t});\r\n\t\tif (from == $from.attr('min') && to == $to.attr('max')) {\r\n\t\t\tdelete attributeToUpdate.value;\r\n\t\t} else {\r\n\t\t\tvar value = '[' + from + ',' + to + ']';\r\n\t\t\tattributeToUpdate.value = value;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handler called after a slideStop and blur events on an input field a criterion.\r\n\t * handles range input changes and simple text field changes depending on the input id suffix\r\n\t */\r\n\tsetInputCriterionValues: function(event) {\r\n\t\tvar name = event.currentTarget.id;\r\n\t\tif (name.match(/_from|_to/)) {\r\n\t\t\tname = name.replace(/_from|_to/, '');\r\n\t\t\tthis.updateRange(name);\r\n\t\t} else {\r\n\t\t\tvar attributeToUpdate = _.findWhere(this.advancedAttributes, {\r\n\t\t\t\tid: name\r\n\t\t\t});\r\n\t\t\tvar value = $(event.currentTarget).val();\r\n\t\t\tattributeToUpdate.value = value;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trender: function() {\r\n\t\tvar criterionLabels = Configuration.get(\"search.advancedCriteriaLabels\", {});\r\n\t\tvar content = advancedCriteria_template({\r\n\t\t\tadvancedAttributes: this.model.get(\"advancedAttributes\")[this.dataset.get(\"datasetId\")],\r\n\t\t\tcriterionLabels: criterionLabels,\r\n\t\t\tdataset: this.dataset,\r\n\t\t\ttheme: Configuration.localConfig.theme\r\n\t\t});\r\n\r\n\r\n\t\tthis.$el.html(content);\r\n\t\tthis.$el.trigger('create');\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nmodule.exports = AdvancedSearchView;","var Map = require('map/map');\r\nvar RectangleHandler = require('map/rectangleHandler');\r\n\r\nfunction isValidLon(lon) {\r\n\tif (isNaN(lon))\r\n\t\treturn false;\r\n\r\n\treturn lon >= -180 && lon <= 180;\r\n}\r\n\r\nfunction isValidLat(lat) {\r\n\tif (isNaN(lat))\r\n\t\treturn false;\r\n\r\n\treturn lat >= -90 && lat <= 90;\r\n}\r\n\r\n/**\r\n * Will verify first if the value is a number or not,\r\n * if so then parse the value into float.\r\n * See issue NGEO-1370\r\n */\r\nfunction filterFloat(value) {\r\n\tif (isNaN(value))\r\n\t\treturn NaN;\r\n\treturn parseFloat(value);\r\n}\r\n\r\n/**\r\n * The BoxView manages the view to define the search area as a box.\r\n * Embedded in the SpatialExtentView.\r\n */\r\nvar BoxView = Backbone.View.extend({\r\n\r\n\t// The model is a DatasetSearch\r\n\r\n\t// Constructor\r\n\tinitialize: function(options) {\r\n\t\tthis.parentView = options.parentView;\r\n\r\n\t\t// Listen when useExtent is changed to update the view\r\n\t\tthis.model.on(\"change:useExtent\", function() {\r\n\t\t\tvar $cb = this.$el.find('.mapExtentCheckBoxLabel');\r\n\t\t\tvar useExtent = $cb.hasClass('ui-checkbox-on');\r\n\t\t\tif (useExtent != this.model.get('useExtent')) {\r\n\t\t\t\t$cb.trigger('click');\r\n\t\t\t}\r\n\t\t}, this);\r\n\t},\r\n\r\n\tevents: {\r\n\t\t'click #drawbbox': function(event) {\r\n\t\t\tthis.model.set('useExtent', false);\r\n\t\t\tvar self = this;\r\n\t\t\tvar $button = $(event.target);\r\n\t\t\t$button.attr(\"disabled\", \"disabled\").button(\"refresh\");\r\n\t\t\tRectangleHandler.start({\r\n\t\t\t\tlayer: this.parentView.searchAreaLayer,\r\n\t\t\t\tfeature: this.model.searchArea.getFeature(),\r\n\t\t\t\tstop: function() {\r\n\t\t\t\t\tvar bbox = self.model.searchArea.getBBox();\r\n\r\n\t\t\t\t\tbbox.south = Math.max(bbox.south, -90);\r\n\t\t\t\t\tbbox.north = Math.min(bbox.north, 90);\r\n\t\t\t\t\tself.model.searchArea.setBBox(bbox);\r\n\r\n\t\t\t\t\tself.$el.find(\"#west\").val(bbox.west);\r\n\t\t\t\t\tself.$el.find(\"#south\").val(bbox.south);\r\n\t\t\t\t\tself.$el.find(\"#east\").val(bbox.east);\r\n\t\t\t\t\tself.$el.find(\"#north\").val(bbox.north);\r\n\r\n\t\t\t\t\t$button.removeAttr(\"disabled\").button(\"refresh\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t//blur insure that values has been manually changed by the user\r\n\t\t//change the bbox in the model only and inly if it is valid\r\n\t\t'blur input': function(event) {\r\n\r\n\t\t\tvar bbox = {\r\n\t\t\t\twest: filterFloat(this.$el.find(\"#west\").val()),\r\n\t\t\t\tsouth: filterFloat(this.$el.find(\"#south\").val()),\r\n\t\t\t\teast: filterFloat(this.$el.find(\"#east\").val()),\r\n\t\t\t\tnorth: filterFloat(this.$el.find(\"#north\").val())\r\n\t\t\t};\r\n\r\n\r\n\t\t\tif (isValidLon(bbox.west) && isValidLon(bbox.east) &&\r\n\t\t\t\tisValidLat(bbox.south) && isValidLat(bbox.north)) {\r\n\t\t\t\tthis.model.searchArea.setBBox(bbox);\r\n\t\t\t} else {\r\n\t\t\t\tbbox = this.model.searchArea.getBBox();\r\n\t\t\t\tthis.$el.find(\"#west\").val(bbox.west);\r\n\t\t\t\tthis.$el.find(\"#south\").val(bbox.south);\r\n\t\t\t\tthis.$el.find(\"#east\").val(bbox.east);\r\n\t\t\t\tthis.$el.find(\"#north\").val(bbox.north);\r\n\t\t\t}\r\n\r\n\t\t\tthis.parentView.updateSearchAreaLayer();\r\n\r\n\t\t},\r\n\r\n\t\t'click .mapExtentCheckBoxLabel': function(event) {\r\n\t\t\tvar $target = $(event.currentTarget);\r\n\t\t\tvar useExtent = !($(event.currentTarget).hasClass('ui-checkbox-on'));\r\n\t\t\tthis.model.set({\r\n\t\t\t\t\"useExtent\": useExtent\r\n\t\t\t}, {\r\n\t\t\t\tsilent: true\r\n\t\t\t});\r\n\t\t\tif (useExtent) {\r\n\t\t\t\tthis.activateUseExtent();\r\n\t\t\t} else {\r\n\t\t\t\tthis.deactivateUseExtent();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t},\r\n\r\n\t// Update from the model\r\n\tupdateFromModel: function() {\r\n\t\tvar bbox = this.model.searchArea.getBBox();\r\n\t\tthis.$el.find(\"#west\").val(bbox.west);\r\n\t\tthis.$el.find(\"#south\").val(bbox.south);\r\n\t\tthis.$el.find(\"#east\").val(bbox.east);\r\n\t\tthis.$el.find(\"#north\").val(bbox.north);\r\n\t\t\r\n\t\t// Update useExtent according to model\r\n\t\t// Used when clicked on \"Get Criteria\" importing the layer from gazetter\r\n\t\t// FIXME: find better solution..\r\n\t\tvar mapExtent = Map.getViewportExtent();\r\n\t\tif ( mapExtent[0] != bbox.west || mapExtent[1] != bbox.south || mapExtent[2] != bbox.east || mapExtent[3] != bbox.north ) {\r\n\t\t\tthis.model.set('useExtent', false);\r\n\t\t} else {\r\n\t\t\tthis.model.set('useExtent', true);\r\n\t\t}\r\n\t},\r\n\r\n\t// Change the use extent\r\n\tonUseExtentChanged: function() {\r\n\t\tvar $cb = this.$el.find('.mapExtentCheckBoxLabel');\r\n\t\tvar useExtent = $cb.hasClass('ui-checkbox-on');\r\n\t\tif (useExtent != this.model.get('useExtent')) {\r\n\t\t\t$cb.trigger('click');\r\n\t\t}\r\n\t},\r\n\r\n\tactivateUseExtent: function() {\r\n\t\tMap.on(\"extent:change\", this.synchronizeWithMapExtent, this);\r\n\t\tthis.synchronizeWithMapExtent();\r\n\t\t// Remove the search area layer when using extent\r\n\t\tif (this.parentView.searchAreaLayer) {\r\n\t\t\tMap.removeLayer(this.parentView.searchAreaLayer);\r\n\t\t\tthis.parentView.searchAreaLayer = null;\r\n\t\t}\r\n\t\tthis.$el.find(\"input\").addClass(\"ui-disabled\");\r\n\t},\r\n\r\n\tdeactivateUseExtent: function() {\r\n\t\tMap.off(\"extent:change\", this.synchronizeWithMapExtent, this);\r\n\t\tif (this.parentView.searchAreaLayer) {\r\n\t\t\tthis.parentView.searchAreaLayer.clear(); // Remove all features before adding new layer\r\n\t\t\tthis.parentView.searchAreaLayer = Map.addLayer(this.parentView.searchAreaLayer.params);\r\n\t\t}\r\n\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\tthis.$el.find(\"input\").removeClass(\"ui-disabled\");\r\n\t},\r\n\r\n\t// Open the view\r\n\topen: function() {\r\n\t\tif (this.model.get(\"useExtent\")) {\r\n\t\t\tthis.activateUseExtent();\r\n\t\t} else {\r\n\r\n\t\t\tvar bbox = {\r\n\t\t\t\twest: filterFloat(this.$el.find(\"#west\").val()),\r\n\t\t\t\tsouth: filterFloat(this.$el.find(\"#south\").val()),\r\n\t\t\t\teast: filterFloat(this.$el.find(\"#east\").val()),\r\n\t\t\t\tnorth: filterFloat(this.$el.find(\"#north\").val())\r\n\t\t\t};\r\n\t\t\tthis.model.searchArea.setBBox(bbox);\r\n\t\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\t}\r\n\t\tthis.$el.show();\r\n\t},\r\n\r\n\t// Close the view\r\n\tclose: function() {\r\n\t\t// Stop listening to map extent\r\n\t\tif (this.model.get(\"useExtent\")) {\r\n\t\t\tthis.deactivateUseExtent();\r\n\t\t}\r\n\t\tthis.$el.hide();\r\n\t},\r\n\r\n\t// Synchronize map extent\r\n\tsynchronizeWithMapExtent: function() {\r\n\t\tvar mapExtent = Map.getViewportExtent();\r\n\r\n\t\tvar bbox = {\r\n\t\t\twest: mapExtent[0],\r\n\t\t\tsouth: mapExtent[1],\r\n\t\t\teast: mapExtent[2],\r\n\t\t\tnorth: mapExtent[3]\r\n\t\t};\r\n\t\tthis.model.searchArea.setBBox(bbox);\r\n\r\n\t\tthis.$el.find(\"#west\").val(bbox.west);\r\n\t\tthis.$el.find(\"#south\").val(bbox.south);\r\n\t\tthis.$el.find(\"#east\").val(bbox.east);\r\n\t\tthis.$el.find(\"#north\").val(bbox.north);\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = BoxView;","//require('jqm-datebox');\r\n//require('ui/dateRangeSlider');\r\nvar corrInterContent_template = require('search/template/corrInterContent');\r\n\r\n/**\r\n * The backbone model is DatasetSearch\r\n */\r\nvar CorrInterView = Backbone.View.extend({\r\n\r\n\t// Events\r\n\tevents: {\r\n\t\t\"change #masterD\": function(event) {\r\n\t\t\tthis.model.setMaster($(event.currentTarget).val());\r\n\t\t},\r\n\r\n\t\t// Update model from sliders\t\t\r\n\t\t\"slidestop input\": 'updateModel',\r\n\t\t// Update model from classic input on blur\r\n\t\t\"blur input\": 'updateModel'\r\n\t},\r\n\r\n\t// Update model properties from input\r\n\tupdateModel: function(event) {\r\n\t\tvar name = event.currentTarget.id;\r\n\t\tif (name.match(/_from|_to/)) {\r\n\t\t\tname = name.replace(/_from|_to/, '');\r\n\t\t\tthis.updateRange(name);\r\n\t\t} else {\r\n\t\t\tthis.model.set(name, $(event.currentTarget).val());\r\n\t\t}\r\n\t},\r\n\r\n\t// Update range\r\n\tupdateRange: function(name) {\r\n\t\tvar $from = this.$el.find('#' + name + '_from');\r\n\t\tvar $to = this.$el.find('#' + name + '_to');\r\n\r\n\t\tvar value = [$from.val(), $to.val()];\r\n\t\tthis.model.set(name, value);\r\n\t},\r\n\r\n\t// Render the corr/infer view\r\n\trender: function() {\r\n\t\tvar content = corrInterContent_template({\r\n\t\t\tmodel: this.model\r\n\t\t});\r\n\t\tthis.$el.html(content);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = CorrInterView;","\"use strict\";\r\n\r\nvar Logger = require('logger');\r\nvar DatasetSearch = require('search/model/datasetSearch');\r\nvar DatasetAuthorizations = require('search/model/datasetAuthorizations');\r\nvar SearchResults = require('searchResults/model/searchResults');\r\nvar datasetsSelection_template = require('search/template/datasetsSelectionContent_template');\r\nvar datasetsList_template = require('search/template/datasetsListContent_template');\r\n\r\n/**\r\n * The related model is DatasetsPopulationModel\r\n */\r\nvar DatasetSelectionView = Backbone.View.extend({\r\n\r\n\t/**\r\n\t * Id for view div container\r\n\t */\r\n\tid: 'datasetSelection',\r\n\r\n\t/**\r\n\t * Events to manage on the view\r\n\t */\r\n\tevents: {\r\n\r\n\t\t'click li': function(event) {\r\n\t\t\tif (!$(event.target).hasClass('ui-icon')) {\r\n\t\t\t\tvar datasetId = $(event.currentTarget).data(\"datasetid\");\r\n\t\t\t\tthis.model.fetchDataset(datasetId, function(model) {\r\n\t\t\t\t\tif (model.get('description')) {\r\n\t\t\t\t\t\t$('#dsPopupDescription').html('<p>' + model.get('description') + '</p>').popup('open', {\r\n\t\t\t\t\t\t\tpositionTo: \"#\" + model.tagFriendlyId + \" .ui-li-count\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'click .ui-icon': function(event) {\r\n\t\t\tvar datasetId = $(event.currentTarget.parentElement).data(\"datasetid\");\r\n\t\t\tif ($(event.currentTarget).hasClass(\"ui-icon-checkbox-off\")) {\r\n\t\t\t\tthis.model.select(datasetId);\r\n\t\t\t} else {\r\n\t\t\t\tthis.model.unselect(datasetId);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Click on search\r\n\t\t\"click #dsSearch\": function(event) {\r\n\t\t\tSearchResults.launch(DatasetSearch);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tinitialize: function() {\r\n\r\n\t\tthis.filteredDatasets = [];\r\n\r\n\t\tthis.listenTo(this.model, \"select\", this.onSelect);\r\n\t\tthis.listenTo(this.model, \"unselect\", this.onUnselect);\r\n\r\n\t\t// Update the checkbox if no fetch possible\r\n\t\tthis.listenTo(this.model, \"datasetFetch\", function(datasetId, status) {\r\n\t\t\tif (status == \"ERROR\") {\r\n\t\t\t\tLogger.error(\"Dataset \" + datasetId + \" is not available on the server.\");\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Call when a dataset is selected\r\n\t */\r\n\tonSelect: function(dataset) {\r\n\t\tvar $elt = this.$el.find('#' + dataset.tagFriendlyId + ' .ui-icon');\r\n\t\t$elt.removeClass(\"ui-icon-checkbox-off\");\r\n\t\t$elt.addClass(\"ui-icon-checkbox-on\");\r\n\t},\r\n\r\n\t/**\r\n\t * Call when a dataset is unselected\r\n\t */\r\n\tonUnselect: function(dataset) {\r\n\t\tvar $elt = this.$el.find('#' + dataset.tagFriendlyId + ' .ui-icon');\r\n\t\t$elt.removeClass(\"ui-icon-checkbox-on\");\r\n\t\t$elt.addClass(\"ui-icon-checkbox-off\");\r\n\t},\r\n\r\n\t/**\r\n\t * The template used to build the dataset list\r\n\t */\r\n\tdatasetsListTemplate: datasetsList_template,\r\n\r\n\t/**\r\n\t * Call when the view is shown\r\n\t */\r\n\tonShow: function() {\r\n\t\tthis.updateContentHeight();\r\n\t},\r\n\r\n\t/**\r\n\t * Call to set the height of content when the view size is changed\r\n\t */\r\n\tupdateContentHeight: function() {\r\n\t\tthis.$el.find('#ds-content').css('height', this.$el.height() - this.$el.find('#ds-footer').outerHeight());\r\n\t},\r\n\r\n\t/**\r\n\t * Render the view\r\n\t */\r\n\trender: function() {\r\n\r\n\t\t//if datasets array has no items that means that the server has sent a response\r\n\t\t//since the fetch was a success (it is called from the dataseSelection widget).\r\n\t\t//However, there was problem since the datsets were not created. \r\n\t\tif (!this.model.isValid()) {\r\n\t\t\tthis.$el.append(\"<p>Error: There was a problem when creating the datasets.<p>\");\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Build the main content\r\n\t\tvar mainContent = datasetsSelection_template(this.model);\r\n\t\tthis.$el.append(mainContent);\r\n\r\n\t\t// Build the criteria select element and datasets list\r\n\t\tthis.updateDatasetsList();\r\n\t\tthis.updateSelectCriteria();\r\n\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t//iterate on criteria to add a callback when the user selects a new criteria filter\r\n\t\t_.each(self.model.get('criterias'), function(criteria, index) {\r\n\r\n\t\t\t//bind a change event handler to the select id\r\n\t\t\t//Fixes the binding after the display of the widget in case of success\r\n\t\t\tself.$el.find(\"#criteria_\" + index).change(function(event) {\r\n\t\t\t\t\r\n\t\t\t\tvar value = $(this).val() ? $(this).val() : \"\";\r\n\t\t\t\tcriteria.selectedValue = value;\r\n\r\n\t\t\t\t// Update datasets list and criteria according to the new criteria filter\r\n\t\t\t\tself.updateDatasetsList();\r\n\t\t\t\tself.updateSelectCriteria();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Update the select elements for criterias with the given datasets\r\n\t * The <option>'s should be updated according to filtered datasets\r\n\t */\r\n\tupdateSelectCriteria: function() {\r\n\r\n\t\t// Rebuilt the criterias to select\r\n\t\tvar criterias = this.model.get('criterias');\r\n\t\tfor (var i = 0; i < criterias.length; i++) {\r\n\t\t\tvar criteria = criterias[i];\r\n\t\t\tvar $selectCriteria = this.$el.find(\"#criteria_\" + i);\r\n\r\n\t\t\t$selectCriteria.empty();\r\n\t\t\t$selectCriteria.append('<option value=\"\">' + criterias[i].title + ' : None</option>');\r\n\r\n\t\t\tvar criteriaValues = this.model.filterCriteriaValues( this.filteredDatasets, criteria );\r\n\t\t\tfor (var j = 0; j < criteriaValues.length; j++) {\r\n\r\n\t\t\t\t// Add the option to the select element\r\n\t\t\t\tvar $opt = $('<option value=\"' + criteriaValues[j] + '\">' + criterias[i].title + ' : ' + criteriaValues[j] + '</option>')\r\n\t\t\t\t\t.appendTo($selectCriteria);\r\n\r\n\t\t\t\t// Add selected attr to option if is actually selected\r\n\t\t\t\tif (criteria.selectedValue == criteriaValues[j]) {\r\n\t\t\t\t\t$opt.attr('selected', 'selected');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/** \r\n\t * Update only the list of datasets in the view \r\n\t */\r\n\tupdateDatasetsList: function() {\r\n\r\n\t\t// Retrieve the datasets according to the current criteria\r\n\t\tvar datasets = this.model.filterDatasets();\r\n\r\n\t\t// NGEO-2129: Sort by name\r\n\t\tdatasets = _.sortBy(datasets, function(dataset) { return dataset.name.toLowerCase() });\r\n\r\n\t\t// Build the dataset list\r\n\t\tvar $dslListContainer = this.$el.find(\"#datasetListContainer\")\r\n\t\tvar listContent = this.datasetsListTemplate({\r\n\t\t\tdatasets: datasets\r\n\t\t});\r\n\t\t$dslListContainer.html(listContent);\r\n\t\t$dslListContainer.trigger('create');\r\n\r\n\t\t$dslListContainer.find('input[data-type=\"search\"]').attr('placeholder', 'Filter on dataset names...');\r\n\r\n\t\t// Apply authorization\r\n\t\t// Warning : need to be done after jQuery Mobile has \"enhanced\" the markup otherwise images are not correctly placed\r\n\t\tfor (var i = 0; i < datasets.length; i++) {\r\n\t\t\tif (!DatasetAuthorizations.hasDownloadAccess(datasets[i].tagFriendlyId)) {\r\n\t\t\t\t$('#' + datasets[i].tagFriendlyId).append('<img src=\"../images/nodownload.png\" />');\r\n\t\t\t}\r\n\t\t\tif (!DatasetAuthorizations.hasViewAccess(datasets[i].tagFriendlyId)) {\r\n\t\t\t\t$('#' + datasets[i].tagFriendlyId).append('<img src=\"../images/noview.png\" />');\r\n\t\t\t}\r\n\t\t\tif (!DatasetAuthorizations.hasSearchAccess(datasets[i].tagFriendlyId)) {\r\n\t\t\t\t$('#' + datasets[i].tagFriendlyId).addClass('ui-disabled');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Synchronize the selection with dataset list\r\n\t\t_.each(this.model.selection, function(dataset) {\r\n\t\t\tvar $elt = $dslListContainer.find('#' + dataset.tagFriendlyId);\r\n\t\t\tif ($elt.length == 0) {\r\n\t\t\t\tthis.model.unselect(dataset.tagFriendlyId);\r\n\t\t\t\tthis.trigger(\"sizeChanged\");\r\n\t\t\t} else {\r\n\t\t\t\t$elt.find('.ui-icon').addClass('ui-icon-checkbox-on');\r\n\t\t\t\t$elt.find('.ui-icon').removeClass('ui-icon-checkbox-off');\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tthis.filteredDatasets = datasets;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = DatasetSelectionView;","var Configuration = require('configuration');\nvar AdvancedSearchView = require('search/view/advancedSearchView');\nvar DownloadOptionsView = require('search/view/downloadOptionsView');\nvar OpenSearchURLView = require('search/view/openSearchURLView');\nvar datasetSearchContent_template = require('search/template/datasetSearchContent_template');\nvar DataSetPopulation = require('search/model/dataSetPopulation');\nvar DataSetSearch = require('search/model/datasetSearch');\n\n/**\n * Dataset view containing the options related to selected dataset:\n *      Advanced options, Download options and opensearch url\n *\n * The model is a dataset\n */\nvar DatasetView = Backbone.View.extend({\n\n    initialize: function(options) {\n        this.dataset = options.dataset;\n    },\n\n    refresh: function() {\n        this.advancedCriteriaView.render();\n        this.downloadOptionsView.render();\n        this.$el.trigger(\"create\");\n    },\n\n    /**\n     *  Appends ATOM url button to HTML header (after jqm transformation)\n     */\n    appendAtomUrl: function() {\n        var self = this;\n        var osAtomUrlBtn = '<div title=\"Atom feed\" class=\"osAtomUrl\"><div class=\"tb-icon\"></div></div>';\n        // Append Open Search Atom url invoker to accordion's header\n        $(osAtomUrlBtn).appendTo(this.$el.find('.ui-collapsible-heading > a > span'))\n            .click(function(event) {\n                event.stopPropagation();\n                // Generate link on fly since the DownloadOptions is not (yet) a backbone model\n                var atomUrl = DataSetSearch.getOpenSearchURL({\n                    id: self.dataset.get(\"datasetId\"),\n                    format: \"atom\"\n                });\n                window.open(atomUrl);\n            });\n    },\n\n    /**\n     *  Render\n     */\n    render: function() {\n\n        var content = datasetSearchContent_template({\n            dataset: this.dataset,\n            name: DataSetPopulation.getFriendlyName(this.dataset.get(\"datasetId\")),\n            theme: Configuration.localConfig.theme\n        });\n        this.$el.append(content);\n\n        this.advancedCriteriaView = new AdvancedSearchView({\n            el: this.$el.find(\"#searchCriteria\"),\n            model: this.model,\n            dataset: this.dataset\n        });\n        this.advancedCriteriaView.render();\n\n        // Add download options view as a tab\n        this.downloadOptionsView = new DownloadOptionsView({\n            el: this.$el.find(\"#downloadOptions\"),\n            model: this.model.get(\"downloadOptions\")[this.dataset.get(\"datasetId\")]\n        });\n        this.downloadOptionsView.render();\n\n        // OpenSearch URL view\n        // this.openSearchURLView = new OpenSearchURLView({\n        //     el: this.$el.find(\"#osUrl\"),\n        //     model: this.model\n        // });\n        // this.openSearchURLView.render();\n\n        this.$el.trigger(\"create\");\n\n        // Since the html has been created, append atom feed button to header\n        this.appendAtomUrl();\n\n        // Update help labels\n        this.$el\n            .find(\"#sc-advanced-container h3 .ui-btn-inner\").attr(\"data-help\", Configuration.localConfig.contextHelp.advancedOptions).end()\n            .find(\"#sc-do-container h3 .ui-btn-inner\").attr(\"data-help\", Configuration.localConfig.contextHelp.downloadOptions).end();\n            //.find(\"#osUrl h3 .ui-btn-inner\").attr(\"data-help\", Configuration.localConfig.contextHelp.openSearch);\n    },\n\n    /**\n     *  Remove current view\n     */\n    remove: function() {\n        this.advancedCriteriaView.remove();\n        this.downloadOptionsView.remove();\n        // this.openSearchURLView.remove();\n        Backbone.View.prototype.remove.apply(this);\n    }\n\n});\n\nmodule.exports = DatasetView;","var downloadOptions_template = require('search/template/downloadOptionsContent');\r\nvar DatasetSearch = require('search/model/datasetSearch');\r\nvar Configuration = require('configuration');\r\n\r\n/** \r\n * The model is the DownloadOptions\r\n * There is another dependency on DatasetSearch (to be resolved later...)\r\n * The dataset property of DatasetSearch is the Dataset backbone model containing the download options\r\n */\r\nvar DownloadOptionsView = Backbone.View.extend({\r\n\r\n\tid: \"downloadOptionsView\",\r\n\r\n\t/**\r\n\t *\t@param options\r\n\t *\t\t<ul>\r\n\t *\t\t\t<li>updateCallback: {Function} If defined adds \"Update\" button to interface. The callback must be a deffered object.</li>\r\n\t *\t\t</ul>\r\n\t */\r\n\tinitialize: function(options) {\r\n\t\tthis.listenTo(DatasetSearch, 'change:downloadOptions', this.onChangeDownloadOptions);\r\n\t\tthis.updateCallback = options.hasOwnProperty('updateCallback') ? options.updateCallback : null;\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t\t// For every option modified by a select element\r\n\t\t'change select': function(event) {\r\n\r\n\t\t\tvar name = event.currentTarget.id;\r\n\t\t\tvar value = $(event.currentTarget).val();\r\n\t\t\tthis.model.setValue( name, value );\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis.render();\r\n\t\t},\r\n\r\n\t\t// For input checkbox\r\n\t\t'change input': function(event) {\r\n\t\t\tvar isChecked = $(event.target).is(\":checked\");\r\n\t\t\tvar name = $(event.currentTarget).attr('name')\r\n\t\t\tvar value = $(event.target).val();\r\n\t\t\tvar currentValue = this.model.getSelectedValues(name);\r\n\t\t\tif ( !$(event.target).data(\"wkt\") ) {\r\n\t\t\t\tif ( isChecked ) {\r\n\t\t\t\t\tif ( !currentValue ) {\r\n\t\t\t\t\t\tcurrentValue = [value];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrentValue.push(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrentValue = _.without(currentValue, value);\r\n\t\t\t\t\tif ( currentValue.length == 0 ) {\r\n\t\t\t\t\t\tcurrentValue = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.model.setValue( name, currentValue );\r\n\t\t\t} else {\r\n\t\t\t\tthis.model.setValue( name, isChecked ? true : null );\r\n\t\t\t}\r\n\t\t\tthis.render();\r\n\t\t},\r\n\t\t\r\n\t\t// On update \"event\" handler\r\n\t\t'click #downloadOptionsUpdate': function(event) {\r\n\t\t\tif (this.updateCallback) {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tthis.updateCallback().done(function() {\r\n\t\t\t\t\tself.$el.find(\"#downloadOptionsMessage\").empty();\r\n\t\t\t\t\tself.$el.find(\"#downloadOptionsMessage\").append(\"<p>Download options updated.<p>\");\r\n\t\t\t\t});\t\r\n\t\t\t} \r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tDownload options has changed\r\n\t */\r\n\tonChangeDownloadOptions: function() {\r\n\t\t// console.log(\"ON CHANGE !\");\r\n\t\tthis.render();\r\n\t},\r\n\r\n\t/**\r\n\t *\tRender\r\n\t */\r\n\trender: function() {\r\n\r\n\t\tvar content = downloadOptions_template({\r\n\t\t\tmodel: this.model,\r\n\t\t\tupdateCallback: this.updateCallback != null,\r\n\t\t\ttheme: Configuration.localConfig.theme\r\n\t\t});\r\n\t\tvar $prevForm = this.$el.find('> *');\r\n\t\tthis.$el.attr('visiblity', 'none');\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\tvar self = this;\r\n\t\t// @see http://stackoverflow.com/questions/17003064/jquerymobile-uncaught-exception-when-removing-checkboxradio\r\n\t\tsetTimeout(function() {\r\n\t\t\t$prevForm.remove();\r\n\t\t\tself.$el.append(content).removeAttr('visiblity');\r\n\r\n\t\t\t// Grey \"Update\" button in case if at least one @conflict option is selected\r\n\t\t\tif ( self.$el.find('option[value=\"@conflict\"]').is(\":selected\") )\r\n\t\t\t{\r\n\t\t\t\tself.$el.find(\"#downloadOptionsUpdate\").attr(\"disabled\", \"disabled\");\r\n\t\t\t}\r\n\t\t\tself.$el.trigger('create');\r\n\r\n\t\t}, 1)\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = DownloadOptionsView;","var Map = require('map/map');\r\nvar Gazetteer = require('map/gazetteer');\r\n\r\n/**\r\n * The GazetteerView manages the view to define the search area using a gazetteer.\r\n * Embedded in the SpatialExtentView.\r\n */\r\nvar GazetteerView = Backbone.View.extend({\r\n\r\n\t// The model is a DatasetSearch\r\n\r\n\t// Constructor\r\n\tinitialize: function(options) {\r\n\t\tthis.parentView = options.parentView;\r\n\t},\r\n\r\n\tevents: {\r\n\t\t'click #gazetteer-results li': function(event) {\r\n\t\t\tvar $target = $(event.currentTarget);\r\n\t\t\tif (!$target.hasClass('ui-btn-active')) {\r\n\t\t\t\tthis.selectGazetteerResult($target);\r\n\t\t\t\tMap.zoomTo(this.model.searchArea.getFeature().bbox);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'change #search-gazetteer': function(event) {\r\n\t\t\t$('#gazetteer-results').empty();\r\n\t\t\tvar queryTerm = $(event.currentTarget).val();\r\n\t\t\tif (queryTerm != \"\") {\r\n\t\t\t\t$('#search-gazetteer').textinput('disable');\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tGazetteer.query({\r\n\t\t\t\t\tquery: queryTerm,\r\n\t\t\t\t\tresult: function(data) {\r\n\r\n\t\t\t\t\t\t$('#search-gazetteer').textinput('enable');\r\n\t\t\t\t\t\t//if no results are found clear the the search area layer\r\n\t\t\t\t\t\tif (data.length == 0) {\r\n\t\t\t\t\t\t\tself.model.searchArea.empty();\r\n\t\t\t\t\t\t\tself.parentView.updateSearchAreaLayer();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Build a list view for the results\r\n\t\t\t\t\t\tvar listView = $('<ul data-inset=\"true\"></ul>');\r\n\t\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\t\t\t\t\t// Fix for Safari 5.x, do not use .class directly\r\n\t\t\t\t\t\t\tvar fullName = data[i].display_name + ' (' + data[i]['class'] + ' ' + data[i].type + ')';\r\n\t\t\t\t\t\t\t$('<li>' + fullName + '</li>')\r\n\t\t\t\t\t\t\t\t// Store the data into the DOM element\r\n\t\t\t\t\t\t\t\t.data('data', data[i])\r\n\t\t\t\t\t\t\t\t.appendTo(listView);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlistView\r\n\t\t\t\t\t\t\t.appendTo('#gazetteer-results')\r\n\t\t\t\t\t\t\t.listview();\r\n\r\n\t\t\t\t\t\tself.selectGazetteerResult($('#gazetteer-results').find('li:first'));\r\n\t\t\t\t\t\tMap.zoomTo(self.model.searchArea.getFeature().bbox);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.model.searchArea.empty();\r\n\t\t\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Select a gazetteer result given by its DOM element\r\n\t * Update the model with bounding box of the gazetteer result and zoom on it.\r\n\t */\r\n\tselectGazetteerResult: function($item) {\r\n\t\tif ($item.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\t$item.parent().find('.ui-btn-active').removeClass('ui-btn-active');\r\n\t\t$item.addClass('ui-btn-active');\r\n\t\tvar data = $item.data('data');\r\n\r\n\t\tif (data.geotext) {\r\n\t\t\tthis.model.searchArea.setFromWKT(data.geotext);\r\n\t\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\t} else {\r\n\t\t\tvar south = parseFloat(data.boundingbox[0]);\r\n\t\t\tvar north = parseFloat(data.boundingbox[1]);\r\n\t\t\tvar west = parseFloat(data.boundingbox[2]);\r\n\t\t\tvar east = parseFloat(data.boundingbox[3]);\r\n\r\n\t\t\tthis.model.searchArea.setBBox({\r\n\t\t\t\twest: west,\r\n\t\t\t\tsouth: south,\r\n\t\t\t\teast: east,\r\n\t\t\t\tnorth: north\r\n\t\t\t});\r\n\t\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\t}\r\n\t},\r\n\r\n\topen: function() {\r\n\t\tvar $item = $('#gazetteer-results').find('li.ui-btn-active');\r\n\t\tif ($item.length > 0) {\r\n\t\t\tthis.selectGazetteerResult($item);\r\n\t\t} else {\r\n\t\t\tthis.model.searchArea.empty();\r\n\t\t}\r\n\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\tthis.$el.show();\r\n\t},\r\n\r\n\tclose: function() {\r\n\t\tthis.$el.hide();\r\n\t},\r\n\r\n\r\n});\r\n\r\nmodule.exports = GazetteerView;","var LayerImport = require('map/layerImport');\r\n\r\n/**\r\n * The ImportView manages the view to define the search area using an imported layer.\r\n * Embedded in the SpatialExtentView.\r\n */\r\nvar ImportView = Backbone.View.extend({\r\n\r\n\t// The model is a DatasetSearch\r\n\r\n\t// Constructor\r\n\tinitialize: function(options) {\r\n\t\tthis.importedLayer = null;\r\n\t\tthis.parentView = options.parentView;\r\n\r\n\t\t// Setup the drop area for import\r\n\t\tif (!LayerImport.isSupported()) {\r\n\t\t\t$('#import').html('<p class=\"ui-error-message\"><b>Import is not supported by your browser.</b></p>');\r\n\t\t} else {\r\n\t\t\tLayerImport.addDropArea(this.$el.find('#dropZone').get(0), $.proxy(this.onFileLoaded, this));\r\n\t\t}\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t},\r\n\r\n\topen: function() {\r\n\t\t// Restore the imported layer as search area\r\n\t\tif (this.importedLayer) {\r\n\t\t\tthis.model.searchArea.setFromLayer(this.importedLayer);\r\n\t\t} else {\r\n\t\t\tthis.model.searchArea.empty();\r\n\t\t}\r\n\t\t// Update the search area\r\n\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\tthis.$el.show();\r\n\t},\r\n\r\n\tclose: function() {\r\n\t\tthis.$el.hide();\r\n\t},\r\n\r\n\r\n\t// Callback called when a file is loaded\r\n\tonFileLoaded: function(layer, file) {\r\n\t\tthis.importedLayer = layer;\r\n\t\tvar res = this.model.searchArea.setFromLayer(layer);\r\n\t\tif (!res.valid) {\r\n\t\t\t$('#importMessage').html('Failed to import ' + file.name + ' : ' + res.message + '.');\r\n\t\t} else {\r\n\t\t\t$('#importMessage').html(\"File sucessfully imported : \" + file.name);\r\n\t\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\t}\r\n\t},\r\n\r\n});\r\n\r\nmodule.exports = ImportView;","var Configuration = require('configuration');\r\nvar Logger = require('logger');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\n\r\n\r\n/**\r\n * The model for this view is a backbone model : SearchCriteria \r\n */\r\nvar OpenSearchURLView = Backbone.View.extend({\r\n\r\n\tevents: {\r\n\t\t// Update the search criteria from the OpenSearch URL\r\n\t\t\"blur #osUrlText\": function(event) {\r\n\t\t\tvar newUrl = $(event.currentTarget).val();\r\n\t\t\tvar prevUrl = this.model.getOpenSearchURL();\r\n\t\t\tif (newUrl != prevUrl) {\r\n\t\t\t\tthis.applyOpenSearchUrl(newUrl);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Update the opensearch URL\r\n\t */\r\n\tdisplayOpenSearchURL: function() {\r\n\t\tvar url = this.model.getOpenSearchURL();\r\n\t\tthis.$el.find(\"#osUrlText\").val(url);\r\n\t},\r\n\r\n\t/**\r\n\t * Apply a new OpenSearch URL to the view\r\n\t */\r\n\tapplyOpenSearchUrl: function(newUrl) {\r\n\r\n\t\ttry {\r\n\t\t\t// Check if url is ok\r\n\t\t\tvar re = new RegExp('^' + Configuration.serverHostName + Configuration.baseServerUrl + '/catalogue/([^/]+)/search\\\\?(.+)');\r\n\t\t\tvar m = re.exec(newUrl);\r\n\t\t\tif (m) {\r\n\t\t\t\t// Url is ok, check if we need to change the dataset\r\n\t\t\t\tvar datasetId = m[1];\r\n\t\t\t\tvar currentDatasetId = this.model.getDatasetPath();\r\n\r\n\t\t\t\tif (datasetId == currentDatasetId) {\r\n\t\t\t\t\t// Directly populate the DatasetSearch with the URL parameters\r\n\t\t\t\t\tthis.model.populateModelfromURL(m[2]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// First wait for the new dataset to be loaded, otherwise fallback to previous dataset, and do not update the parameters\r\n\t\t\t\t\tDataSetPopulation.once(\"datasetFetch\", function(dataset, status) {\r\n\t\t\t\t\t\tif (status == \"SUCCESS\") {\r\n\t\t\t\t\t\t\tthis.model.populateModelfromURL(m[2]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tLogger.error(\"Invalid OpenSearch URL : cannot load the dataset \" + datasetId + \".\");\r\n\t\t\t\t\t\t\tthis.model.set('datasetId', currentDatasetId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tDataSetPopulation.selectExclusive(datasetId);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tLogger.error(\"Invalid OpenSearch URL.\");\r\n\t\t\t}\r\n\r\n\t\t} catch (err) {\r\n\t\t\tLogger.error(\"Invalid OpenSearch URL : \" + err);\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Render the view\r\n\t */\r\n\trender: function() {\r\n\r\n\t\t// Refresh the OpenSearch URL when the accordion is expand/collapse\r\n\t\tvar self = this;\r\n\t\tthis.$el.parent()\r\n\t\t\t.bind('collapse', function() {\r\n\t\t\t\tself.stopListening(self.model, 'change', self.displayOpenSearchURL);\r\n\t\t\t})\r\n\t\t\t.bind('expand', function() {\r\n\t\t\t\tself.displayOpenSearchURL();\r\n\t\t\t\tself.listenTo(self.model, 'change', self.displayOpenSearchURL);\r\n\t\t\t});\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = OpenSearchURLView;","var Map = require('map/map');\r\nvar PolygonHandler = require('map/polygonHandler');\r\n\r\n/**\r\n * The PolygonView manages the view to define the search area as a polygon.\r\n * Embedded in the SpatialExtentView.\r\n */\r\nvar PolygonView = Backbone.View.extend({\r\n\r\n\t// The model is a DatasetSearch\r\n\r\n\t// Constructor\r\n\tinitialize: function(options) {\r\n\t\tthis.searchArea = options.searchArea;\r\n\t\tthis.parentView = options.parentView;\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t\t'click #drawpolygon': function(event) {\r\n\t\t\tthis.$el.find('#polygonTextError').hide();\r\n\t\t\tvar self = this;\r\n\t\t\t$button = $(event.target);\r\n\t\t\t$button.attr(\"disabled\", \"disabled\").button(\"refresh\");\r\n\t\t\tPolygonHandler.start({\r\n\t\t\t\tlayer: this.parentView.searchAreaLayer,\r\n\t\t\t\tfeature: this.model.searchArea.getFeature(),\r\n\t\t\t\tstop: function() {\r\n\t\t\t\t\t$button.removeAttr(\"disabled\").button(\"refresh\");\r\n\t\t\t\t\tself.$el.find('#polygontext').val(self.model.searchArea.getPolygonText()).keyup();\r\n\t\t\t\t\tself.model.searchArea.setMode(1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t'focus #polygontext': function(event) {\r\n\t\t\tthis.$el.find('#polygonTextError').hide();\r\n\t\t},\r\n\r\n\t\t'change #polygontext': function(event) {\r\n\t\t\tif (!this.model.searchArea.setPolygonFromText($(event.currentTarget).val())) {\r\n\t\t\t\t// Erase content\r\n\t\t\t\t$(event.currentTarget).val('');\r\n\t\t\t\tthis.$el.find('#polygonTextError')\r\n\t\t\t\t\t.html(\"Please enter valid coordinates : D:M:S.\")\r\n\t\t\t\t\t.show();\r\n\t\t\t}\r\n\t\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\t},\r\n\r\n\t},\r\n\r\n\t// Update from the model\r\n\tupdateFromModel: function() {\r\n\t\tthis.$el.find('#polygontext').val(this.model.searchArea.getPolygonText()).keyup();\r\n\t},\r\n\r\n\t// Open the view : show it and update the model\r\n\topen: function() {\r\n\t\tvar text = this.$el.find('#polygontext').val();\r\n\t\tthis.$el.find('#polygonTextError').hide();\r\n\t\tthis.model.searchArea.setPolygonFromText(text);\r\n\t\tthis.parentView.updateSearchAreaLayer();\r\n\t\tthis.$el.show();\r\n\t},\r\n\r\n\t// Close the view : hide it\r\n\tclose: function() {\r\n\t\tthis.$el.hide();\r\n\t},\r\n\r\n});\r\n\r\nmodule.exports = PolygonView;","var Configuration = require('configuration');\n//require('jqm-datebox');\nvar schedulingOptions_template = require('search/template/schedulingOptions_template');\n\n/**\n * This view handles the displaying of standing orders request parameters.\n * The attribute request is the request to be submitted.\n */\nvar SchedulingOptionsView = Backbone.View.extend({\n\n\tinitialize: function(options) {\n\t\tthis.request = options.request;\n\t\tthis.parentWidget = options.parentWidget;\n\t},\n\n\tevents: {\n\n\t\t'change #startDateSTO': function(event) {\n\t\t\tvar date = $(event.currentTarget).val();\n\t\t\tthis.request.startDate = Date.fromISOString(date + \"T00:00:00.000Z\");\n\t\t\t// NGEO-1814: Change of scheduling options start date must not affect the opensearch request date\n\t\t\t//this.model.set({\"start\" : Date.fromISOString(date+\"T00:00:00.000Z\")});\n\t\t},\n\n\t\t'change #endDateSTO': function(event) {\n\t\t\tvar date = $(event.currentTarget).val();\n\t\t\tthis.request.endDate = Date.fromISOString(date + \"T23:59:59.999Z\");\n\t\t\t// NGEO-1814: Change of scheduling options end date must not affect the opensearch request date\n\t\t\t//this.model.set({\"stop\" : Date.fromISOString(date+\"T23:59:59.999Z\")});\n\t\t},\n\n\t\t// Choose STO type : Data-driven or Time-driven\n\t\t'change input[name=\"STOType\"]': function(event) {\n\n\t\t\t// Update the visibility of time-driven-element\n\t\t\tvar timeDrivenElt = this.$el.find(\"#timeDrivenParams\");\n\t\t\tif (event.currentTarget.id == \"time-driven-input\") {\n\t\t\t\t// Set standing order request type\n\t\t\t\tthis.request.timeDriven = true;\n\t\t\t\ttimeDrivenElt.show();\n\t\t\t} else { //click on the Data-driven radio button\n\t\t\t\tthis.request.timeDriven = false;\n\t\t\t\ttimeDrivenElt.hide();\n\t\t\t}\n\t\t},\n\n\t\t// Set repeat period\n\t\t'change #repeatPeriodInput': function(event) {\n\t\t\tthis.request.repeatPeriod = $(event.currentTarget).val();\n\t\t},\n\n\t\t// Set slide time\n\t\t'change input#applyShiftCheckBox': function(event) {\n\t\t\tthis.request.slideAcquisitionTime = $(event.target).is(':checked');\n\t\t}\n\n\t},\n\n\t/**\n\t * Render the view\n\t */\n\trender: function() {\n\t\t// Get the default values from the model\n\t\tvar content = schedulingOptions_template(this.request);\n\t\tthis.$el.html(content);\n\t\tthis.$el.find(\"#standingOrderSpecificMessage\").append(this.request.getSpecificMessage());\n\t\tif (!this.request.timeDriven) {\n\t\t\tthis.$el.find(\"#timeDrivenParams\").hide();\n\t\t}\n\t\tthis.$el.trigger('create');\n\t\treturn this;\n\t}\n\n});\n\nmodule.exports = SchedulingOptionsView;","var Configuration = require('configuration');\r\nvar Logger = require('logger');\r\nvar SearchView = require('search/view/searchView');\r\nvar SearchResults = require('searchResults/model/searchResults');\r\nvar CorrInterView = require('search/view/corrInterView');\r\nvar DatasetView = require('search/view/datasetView');\r\nvar SharePopup = require('ui/sharePopup');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar searchCriteria_template = require('search/template/searchCriteriaContent_template');\r\n\r\n\r\n/**\r\n * The model for this view is a backbone model : DatasetSearch \r\n */\r\nvar SearchCriteriaView = SearchView.extend({\r\n\r\n\t/**\r\n\t * Id for view div container\r\n\t */\r\n\tid: \"datasetSearchCriteria\",\r\n\r\n\tinitialize: function() {\r\n\t\tSearchView.prototype.initialize.apply(this);\r\n\t\tthis.listenTo(DataSetPopulation, 'select', this.onDatasetSelected );\r\n\t\tthis.listenTo(DataSetPopulation, 'unselect', this.onDatasetUnselected );\r\n\r\n\t\t// Table containing the views which are dynamically added depending on selected datasets\r\n\t\tthis.datasetDependingViews = {};\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tfor ( var x in this.datasetDependingViews ) {\r\n\t\t\tthis.datasetDependingViews[x].refresh();\r\n\t\t}\r\n\t},\r\n\r\n\tonDatasetSelected: function(dataset) {\r\n\t\tvar datasetView = new DatasetView({\r\n\t\t\tmodel: this.model,\r\n\t\t\tdataset: dataset\r\n\t\t});\r\n\t\tthis.$el.find(\".datasetSearch\").append( datasetView.el );\r\n\t\tdatasetView.render();\r\n\t\tthis.$el.trigger(\"create\");\r\n\t\t// Store the view to be able to remove later\r\n\t\tthis.datasetDependingViews[dataset.get(\"datasetId\")] = datasetView;\r\n\t},\r\n\r\n\tonDatasetUnselected: function(dataset) {\r\n\t\tvar datasetId = dataset.get(\"datasetId\");\r\n\t\tthis.datasetDependingViews[datasetId].remove();\r\n\t\tdelete this.datasetDependingViews[datasetId];\r\n\t},\r\n\r\n\tevents: {\r\n\t\t// Click on search\r\n\t\t\"click .scSubmit\": function(event) {\r\n\t\t\tvar rangeIsValid = this.model.get(\"start\") <= this.model.get(\"stop\");\r\n\t\t\tif (rangeIsValid) {\r\n\t\t\t\tSearchResults.launch(this.model);\r\n\t\t\t} else {\r\n\t\t\t\t// Prevent user that the range isn't valid\r\n\t\t\t\t$(\"#dateWarningPopup\")\r\n\t\t\t\t\t.popup(\"open\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// To share a search\r\n\t\t\"click #share\": function() {\r\n\t\t\tSharePopup.open({\r\n\t\t\t\topenSearchUrl: this.model.getOpenSearchURL({\r\n\t\t\t\t\tformat: \"atom\"\r\n\t\t\t\t}),\r\n\t\t\t\turl: Configuration.serverHostName + (window.location.pathname) + this.model.getSharedSearchURL(),\r\n\t\t\t\tpositionTo: this.$el.find('#share')[0]\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// To change the mode between simple, correlation and interferometry\r\n\t\t\"change #sc-mode\": function() {\r\n\t\t\tvar value = this.$el.find('#sc-mode').val();\r\n\r\n\t\t\t// Remove previous accordion and view if any\r\n\t\t\tthis.$el.find('#sc-corrinf-container').remove();\r\n\t\t\tif (this.corrInterView) {\r\n\t\t\t\tthis.corrInterView.remove();\r\n\t\t\t\tthis.corrInterView = null;\r\n\t\t\t}\r\n\r\n\t\t\t//this.model.set(\"mode\",value);\r\n\t\t\tthis.model.setMode(value);\r\n\r\n\t\t\t// Add the accordion for correlation/inteferometry\r\n\t\t\tif (value != \"Simple\") {\r\n\t\t\t\tthis.$el.find('#sc-area-container').after(\r\n\t\t\t\t\t'<div id=\"sc-corrinf-container\" data-role=\"collapsible\" data-inset=\"false\" data-mini=\"true\">\\\r\n\t\t\t\t\t\t<h3>' + value + '</h3>\\\r\n\t\t\t\t\t\t<div id=\"sc-corrinf\">\t</div>\\\r\n\t\t\t\t\t</div>'\r\n\t\t\t\t);\r\n\r\n\t\t\t\tthis.corrInterView = new CorrInterView({\r\n\t\t\t\t\tel: this.$el.find(\"#sc-corrinf\"),\r\n\t\t\t\t\tmodel: this.model\r\n\t\t\t\t});\r\n\t\t\t\tthis.corrInterView.render();\r\n\r\n\t\t\t}\r\n\t\t\tthis.$el.find('#sc-content').trigger('create');\r\n\t\t\tthis.$el.find('#sc-corrinf-container h3 .ui-btn-inner').attr('data-help', Configuration.localConfig.contextHelp.interferometry);\r\n\r\n\t\t},\r\n\t},\r\n\r\n\t/**\r\n\t * Update the Select to choose the search mode (Simple, Correlation or Interferometry)\r\n\t */\r\n\tupdateSelectMode: function() {\r\n\r\n\t\tthis.$el.find('#sc-corrinf-container').remove();\r\n\t\tthis.$el.find('#sc-mode-containter').remove();\r\n\r\n\t\t// Only interferometry supported for Task4\r\n\t\t//if ( this.model.datasetIds.length > 1 && this.model.datasetIds.length <= 4 ) {\r\n\t\tif (this.model.isInterferometrySupported()) {\r\n\r\n\t\t\tvar $mode = $('<div id=\"sc-mode-containter\" data-role=\"fieldcontain\">\\\r\n\t\t\t\t<label for=\"sc-mode\">Mode: </label>\\\r\n\t\t\t\t<select id=\"sc-mode\" data-mini=\"true\">\\\r\n\t\t\t\t\t<option value=\"Simple\">Simple</option>\\\r\n\t\t\t\t\t<option value=\"Interferometry\">Interferometry</option>\\\r\n\t\t\t\t</select>\\\r\n\t\t\t</div>');\r\n\r\n\t\t\t/*// Check correlation and interferometry\r\n\t\t\tif ( this.model.datasetIds.length == 2 ) {\r\n\t\t\t\t$mode.find('#sc-mode').append('<option value=\"Interferometry\">Interferometry</option>');\r\n\t\t\t}*/\r\n\r\n\t\t\tthis.$el.find('#sc-content')\r\n\t\t\t\t.prepend($mode)\r\n\t\t\t\t.trigger('create');\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Call when the view is shown\r\n\t */\r\n\tonShow: function() {\r\n\t\tthis.updateSelectMode();\r\n\t\tif (this.model.get(\"useTimeSlider\") && _.keys(self.selection).length != 0) {\r\n\t\t\t$('#dateRangeSlider').dateRangeSlider('show'); // Assuming that there is only one slider on page\r\n\t\t\t//this.dateCriteriaView.addTimeSlider();\r\n\t\t}\r\n\t\tSearchView.prototype.onShow.apply(this);\r\n\t},\r\n\r\n\t/**\r\n\t * Render the view\r\n\t */\r\n\trender: function() {\r\n\r\n\t\tvar content = searchCriteria_template({\r\n\t\t\tsubmitText: \"Search\",\r\n\t\t\tuseDate: true\r\n\t\t});\r\n\t\tthis.$el.append(content);\r\n\r\n\t\tSearchView.prototype.render.apply(this);\r\n\r\n\t\t// Update the date view when the dateRange is changed\r\n\t\tthis.dateCriteriaView.listenTo(this.model, \"change:dateRange\", this.dateCriteriaView.updateDateRange);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = SearchCriteriaView;","var Configuration = require('configuration');\nvar SpatialExtentView = require('search/view/spatialExtentView');\nvar TimeExtentView = require('search/view/timeExtentView');\nvar DataSetPopulation = require('search/model/dataSetPopulation');\n\n/**\n * Basic search view designed to contain the common parts between StandingOrder or SearchCriteriaView\n * So the backbone model for this view can be : DatasetSearch or StandingOrder respectively\n */\nvar SearchView = Backbone.View.extend({\n\n\tinitialize: function() {\n\t\tthis.dateCriteriaView = null;\n\t\tthis.areaCriteriaView = null;\n\t},\n\n\t/**\n\t * Call to set the height of content when the view size is changed\n\t */\n\tupdateContentHeight: function() {\n\t\tthis.$el.find('#sc-content').css('height', this.$el.height() - this.$el.find('#sc-footer').outerHeight());\n\t},\n\n\t/**\n\t * Call when the view is shown\n\t */\n\tonShow: function() {\n\t\tthis.updateContentHeight();\n\t\tif ( this.areaCriteriaView.searchAreaLayer ) {\n\t\t\tthis.areaCriteriaView.searchAreaLayer.setVisible(true);\n\t\t}\n\t},\n\n\t/**\n\t *\tCall when the view is hidden\n\t */\n\tonHide: function() {\n\t\tif ( this.areaCriteriaView.searchAreaLayer ) {\n\t\t\tthis.areaCriteriaView.searchAreaLayer.setVisible(false);\n\t\t}\n\t},\n\n\t/**\n\t * Render the view\n\t */\n\trender: function() {\n\n\t\t// Create the views for each criteria : time, spatial and opensearch url view\n\t\tthis.dateCriteriaView = new TimeExtentView({\n\t\t\tel: this.$el.find(\"#date\"),\n\t\t\thasTimeSlider: this.model.name == \"Search\" ? true : false, // Standing order date doesn't have timeslider !\n\t\t\tmodel: this.model\n\t\t});\n\t\tthis.dateCriteriaView.render();\n\n\t\tthis.areaCriteriaView = new SpatialExtentView({\n\t\t\tel: this.$el.find(\"#area\"),\n\t\t\tsearchCriteriaView: this,\n\t\t\tmodel: this.model\n\t\t});\n\t\tthis.areaCriteriaView.render();\n\n\t\tthis.$el.trigger('create');\n\n\t\t// Init help attributes on created jqm composants\n\t\tthis.$el.find(\"#sc-date-container h3 .ui-btn-inner\").attr(\"data-help\", Configuration.localConfig.contextHelp.date).end()\n\t\t\t.find(\"#sc-area-container h3 .ui-btn-inner\").attr(\"data-help\", Configuration.localConfig.contextHelp.area).end()\n\n\t\treturn this;\n\t}\n\n});\n\nmodule.exports = SearchView;","var Map = require('map/map');\r\nvar BoxView = require('search/view/boxView');\r\nvar PolygonView = require('search/view/polygonView');\r\nvar GazetteerView = require('search/view/gazetteerView');\r\nvar ImportView = require('search/view/importView');\r\nvar areaCriteria_template = require('search/template/areaCriteriaContent');\r\n\r\n/**\r\n * The SpatialExtentView manages the different views to define the search area (or zone of interest).\r\n * The model of this view is DatasetSearch or StandingOrder\r\n */\r\nvar SpatialExtentView = Backbone.View.extend({\r\n\r\n\t// Constructor\r\n\tinitialize: function(options) {\r\n\r\n\t\tthis.searchAreaLayer = null;\r\n\t\tthis.mode = \"bbox\";\r\n\r\n\t\t// Listen when the searchArea has changed to update the view\r\n\t\tthis.model.on(\"change:searchArea\", this.onModelChanged, this);\r\n\t},\r\n\r\n\t// Events\r\n\tevents: {\r\n\t\t'change #toolsChoice': function(event) {\r\n\t\t\tvar val = $(event.currentTarget).find('input:radio:checked').val();\r\n\r\n\t\t\tthis.tools[this.mode].close();\r\n\t\t\tthis.tools[val].open();\r\n\r\n\t\t\tthis.mode = val;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Update the search area layer\r\n\t */\r\n\tupdateSearchAreaLayer: function() {\r\n\t\t// Create the layer if not already done\r\n\t\tif (!this.searchAreaLayer) {\r\n\t\t\t// Create a layer for the search area\r\n\t\t\tvar searchAreaParams = {\r\n\t\t\t\tname: this.model.name + \" Area\",\r\n\t\t\t\ttype: \"Feature\",\r\n\t\t\t\tvisible: true,\r\n\t\t\t\tstyle: \"search-area\",\r\n\t\t\t\tgreatCircle: false\r\n\t\t\t};\r\n\t\t\tthis.searchAreaLayer = Map.addLayer(searchAreaParams);\r\n\t\t\tthis.searchAreaLayer.addFeature(this.model.searchArea.getFeature());\r\n\t\t} else {\r\n\t\t\tthis.searchAreaLayer.updateFeature(this.model.searchArea.getFeature());\r\n\t\t}\r\n\r\n\t\t// TODO maybe a 'smart' zoomTo is needed?\r\n\t\t//Map.zoomTo( this.model.searchArea.getFeature().bbox );\r\n\t},\r\n\r\n\t// Called when model has changed from outside the view, i.e. when a search URL is given by the user\r\n\tonModelChanged: function() {\r\n\t\tif ( this.model.searchArea ) {\r\n\t\t\tif (this.model.searchArea.getMode() == 0) {\r\n\t\t\t\tthis.tools['bbox'].updateFromModel();\r\n\t\t\t\tthis.$el.find('#radio-bbox-label').trigger('click');\r\n\t\t\t} else if (this.model.searchArea.getMode() == 1) {\r\n\t\t\t\tthis.tools['polygon'].updateFromModel();\r\n\t\t\t\tthis.$el.find('#radio-polygon-label').trigger('click');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Build the view\r\n\trender: function() {\r\n\r\n\t\tthis.$el.append(areaCriteria_template(this.model));\r\n\r\n\t\t// Create the view for the different tools\r\n\t\tthis.tools = {\r\n\t\t\t'bbox': new BoxView({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\tparentView: this,\r\n\t\t\t\tel: this.$el.find('#bbox').get(0)\r\n\t\t\t}),\r\n\t\t\t'polygon': new PolygonView({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\tparentView: this,\r\n\t\t\t\tel: this.$el.find('#polygon').get(0)\r\n\t\t\t}),\r\n\t\t\t'gazetteer': new GazetteerView({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\tparentView: this,\r\n\t\t\t\tel: this.$el.find('#gazetteer').get(0)\r\n\t\t\t}),\r\n\t\t\t'import': new ImportView({\r\n\t\t\t\tmodel: this.model,\r\n\t\t\t\tparentView: this,\r\n\t\t\t\tel: this.$el.find('#import').get(0)\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\t// Close all the tools except the current one\r\n\t\tfor (var t in this.tools) {\r\n\t\t\tif (this.tools.hasOwnProperty(t)) {\r\n\t\t\t\tif (t != this.mode) {\r\n\t\t\t\t\tthis.tools[t].close();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Open the current tools\r\n\t\tthis.tools[this.mode].open();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n});\r\n\r\nmodule.exports = SpatialExtentView;","var Configuration = require('configuration');\nvar DataAccessWidget = require('dataAccess/widget/dataAccessWidget');\nvar SchedulingOptionsView = require('search/view/schedulingOptionsView');\nvar SearchView = require('search/view/searchView');\nvar StandingOrderDataAccessRequest = require('dataAccess/model/standingOrderDataAccessRequest');\nvar DatasetView = require('search/view/datasetView');\nvar SharePopup = require('ui/sharePopup');\nvar DataSetPopulation = require('search/model/dataSetPopulation');\nvar searchCriteria_template = require('search/template/searchCriteriaContent_template');\nvar DatasetSearch = require('search/model/datasetSearch');\n\n/**\n * The model for this view is a backbone model : StandingOrder \n */\nvar StandingOrderView = SearchView.extend({\n\n\t/**\n\t * Id for view div container\n\t */\n\tid: \"standingOrderView\",\n\n\tinitialize: function() {\n\t\tSearchView.prototype.initialize.apply(this);\n\t\tthis.listenTo(DataSetPopulation, 'select', this.onDatasetChanged );\n\t\tthis.listenTo(DataSetPopulation, 'unselect', this.onDatasetChanged );\n\t},\n\n\tonDatasetChanged: function(dataset) {\n\t\tif ( this.model.dataset ) {\n\t\t\tthis.datasetView = new DatasetView({\n\t\t\t\tmodel: this.model,\n\t\t\t\tdataset: this.model.dataset\n\t\t\t});\n\t\t\tthis.datasetView.render();\n\t\t\tthis.$el.find(\".datasetSearch\").append( this.datasetView.el );\n\t\t\tthis.$el.trigger(\"create\");\n\t\t} else if ( this.datasetView ) {\n\t\t\tvar datasetId = dataset.get(\"datasetId\");\n\t\t\tthis.datasetView.remove();\n\t\t\tthis.datasetView = null;\n\t\t}\n\t},\n\n\tevents: {\n\t\t// Click on search\n\t\t\"click .scSubmit\": function(event) {\n\n\t\t\t// Reset request\n\t\t\tStandingOrderDataAccessRequest.initialize();\n\n\t\t\t// Set open search url\n\t\t\tStandingOrderDataAccessRequest.OpenSearchURL = this.model.getOpenSearchURL();\n\n\t\t\t// Set selected download options\n\t\t\tStandingOrderDataAccessRequest.DownloadOptions = this.model.getSelectedDownloadOptions();\n\n\t\t\tDataAccessWidget.open(StandingOrderDataAccessRequest);\n\n\t\t},\n\n\t\t// Click on \"Get Criteria\" button : import settings from search criteria\n\t\t\"click .scImport\": function() {\n\n\t\t\t// Import attributes from DatasetSearch\n\t\t\tthis.model.set({\n\t\t\t\t\"start\": DatasetSearch.get(\"start\"),\n\t\t\t\t\"stop\": DatasetSearch.get(\"stop\"),\n\t\t\t\t\"useExtent\": DatasetSearch.get(\"useExtent\"),\n\t\t\t\t\"advancedAttributes\":  _.clone(DatasetSearch.get(\"advancedAttributes\")),\n\t\t\t});\n\t\t\t// NB: Can't use the line below since it doesn't fires \"change\" events for nested models\n\t\t\t// this.model.set(DatasetSearch.attributes);\n\t\t\t// .. so do the manual merge of download options (which is the only nested model)\n\t\t\tvar searchDO = DatasetSearch.get(\"downloadOptions\")[this.model.dataset.get(\"datasetId\")];\n\t\t\tthis.model.get(\"downloadOptions\")[this.model.dataset.get(\"datasetId\")].updateFrom(searchDO);\n\n\t\t\t// and search area which isn't included in attributes of model\n\t\t\tthis.model.searchArea.setFromWKT( DatasetSearch.searchArea.toWKT() );\n\t\t\tthis.model.searchArea.setMode( DatasetSearch.searchArea.getMode() ); // Set mode as well since WKT is always a polygon\n\t\t\tthis.model.trigger('change:searchArea');\n\t\t\tthis.refresh();\n\t\t},\n\n\t\t// To share a search\n\t\t\"click #share\": function() {\n\n\t\t\tSharePopup.open({\n\t\t\t\topenSearchUrl: this.model.getOpenSearchURL({\n\t\t\t\t\tformat: \"atom\"\n\t\t\t\t}),\n\t\t\t\turl: Configuration.serverHostName + (window.location.pathname) + StandingOrderDataAccessRequest.getSharedURL(this.model),\n\t\t\t\tpositionTo: this.$el.find('#share')[0]\n\t\t\t});\n\t\t}\n\t},\n\n\tonShow: function() {\n\t\t$('#dateRangeSlider').dateRangeSlider('hide'); // Assuming that there is only one slider on page\n\t\t//this.dateCriteriaView.removeTimeSlider();\n\t\tSearchView.prototype.onShow.apply(this);\n\t},\n\n\t/**\n\t * Refresh the view : only for views that does not listen to model changes (for performance reasons)\n\t */\n\trefresh: function() {\n\t\tthis.schedulingOptionsView.render();\n\t\tif ( this.datasetView )\n\t\t\tthis.datasetView.refresh();\n\t},\n\n\t/**\n\t * Render the view\n\t */\n\trender: function() {\n\n\t\tStandingOrderDataAccessRequest.initialize();\n\n\t\tvar content = searchCriteria_template({\n\t\t\tsubmitText: \"Subscribe\"\n\t\t});\n\t\tthis.$el.append(content);\n\n\t\tSearchView.prototype.render.apply(this);\n\n\t\tthis.$el.find('#sc-content').prepend('<div id=\"sc-schedlingOptions-container\" data-role=\"collapsible\" data-inset=\"false\" data-mini=\"true\" data-collapsed=\"false\">\\\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Scheduling Options</h3>\\\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"schedulingOptions\"></div>\\\n\t\t\t\t\t\t\t\t\t\t\t</div>');\n\n\t\tthis.schedulingOptionsView = new SchedulingOptionsView({\n\t\t\tel: this.$el.find('#schedulingOptions'),\n\t\t\trequest: StandingOrderDataAccessRequest,\n\t\t\tmodel: this.model\n\t\t});\n\t\tthis.schedulingOptionsView.render();\n\n\t\tthis.$el.trigger('create');\n\t\tthis.$el.find('#sc-schedlingOptions-container h3 .ui-btn-inner').attr(\"data-help\", Configuration.localConfig.contextHelp.schedulingOptions);\n\t\treturn this;\n\t}\n\n});\n\nmodule.exports = StandingOrderView;","var Configuration = require('configuration');\r\nvar SearchResults = require('searchResults/model/searchResults');\r\n//require('jqm-datebox');\r\n//require('ui/dateRangeSlider');\r\nvar dateCriteria_template = require('search/template/dateCriteriaContent');\r\n\r\n/**\r\n * The backbone model is DatasetSearch\r\n */\r\nvar TimeExtentView = Backbone.View.extend({\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tthis.hasTimeSlider = options.hasTimeSlider;\r\n\r\n\t\t// Refresh the dates and time slider checkbox when the values has been changed on the model \r\n\t\t//typically for shared parameters urls\r\n\t\tthis.listenTo(this.model, \"change:start\", this.update);\r\n\t\tthis.listenTo(this.model, \"change:stop\", this.update);\r\n\r\n\t\t// Add events\r\n\t\t_.extend(this, Backbone.Events);\r\n\t},\r\n\r\n\tevents: {\r\n\t\t//The 2 next handlers listen to start and stop date changes\r\n\t\t'change .fromDateInput': function(event) {\r\n\t\t\tthis.model.set({\r\n\t\t\t\t\"start\": Date.fromISOString($(event.currentTarget).val() + \"T00:00:00.000Z\")\r\n\t\t\t});\r\n\t\t},\r\n\t\t'change .toDateInput': function(event) {\r\n\t\t\tthis.model.set({\r\n\t\t\t\t\"stop\": Date.fromISOString($(event.currentTarget).val() + \"T23:59:59.999Z\")\r\n\t\t\t});\r\n\t\t},\r\n\t\t/*\t\t//the 2 following handlers deal with time setting: COMMENTED FOR THE MOMENT\r\n\t\t\t\t'change #fromTimeInput' : function(event){\r\n\t\t\t\t\tthis.model.set({\"startTime\" : $(event.currentTarget).val()});\r\n\t\t\t\t},\r\n\t\t\t\t'change #toTimeInput' : function(event){\r\n\t\t\t\t\tthis.model.set({\"stopTime\" : $(event.currentTarget).val()});\r\n\t\t\t\t},\r\n\t\t*/\r\n\t\t//check box changes to display or not the time slider widget\r\n\t\t'click .useTimeSliderLabel': function(event) {\r\n\t\t\tvar $target = $(event.currentTarget);\r\n\t\t\tvar checked = $target.hasClass('ui-checkbox-off');\r\n\t\t\tthis.model.set({\r\n\t\t\t\t\"useTimeSlider\": checked\r\n\t\t\t});\r\n\r\n\t\t\t// Display the time slider in the bottom of the window when \r\n\t\t\tif (checked) {\r\n\t\t\t\t//disable the dates start and stop widgets if the time slider is enabled\r\n\t\t\t\tthis.$fromDateInput.datebox(\"disable\");\r\n\t\t\t\tthis.$toDateInput.datebox(\"disable\");\r\n\t\t\t\tthis.addTimeSlider();\r\n\t\t\t} else {\r\n\t\t\t\tthis.removeTimeSlider();\r\n\t\t\t\t//enable the dates start and stop widgets if the time slider is disabled\r\n\t\t\t\tthis.$fromDateInput.datebox(\"enable\");\r\n\t\t\t\tthis.$toDateInput.datebox(\"enable\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Call to update the date range\r\n\tupdateDateRange: function(model, dateRange) {\r\n\t\t// The dataset has not been loaded : do nothing, because the timeslider has already been removed when the datasetId has been changed, see below.\r\n\t\tvar useTimeSlider = this.model.get('useTimeSlider');\r\n\t\tif (dateRange) {\r\n\t\t\tif (useTimeSlider) {\r\n\t\t\t\tthis.addTimeSlider();\r\n\t\t\t}\r\n\r\n\t\t\t// Retrieve key dates from configuration.json\r\n\t\t\tvar keyDates = Configuration.get(\"keyDates\").slice(0);\r\n\t\t\tkeyDates.push([(new Date()).toISODateString(), \"Today\"]);\r\n\r\n\t\t\t// Filter keyDates which aren't in range\r\n\t\t\tvar startDate = dateRange.start;\r\n\t\t\tvar stopDate = dateRange.stop;\r\n\t\t\tvar i = keyDates.length;\r\n\t\t\twhile (i--) {\r\n\t\t\t\tvar keyDate = new Date(keyDates[i][0]);\r\n\t\t\t\tvar inRange = (keyDate <= stopDate && keyDate >= startDate);\r\n\t\t\t\tif (!inRange) {\r\n\t\t\t\t\tkeyDates.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add start/stop dates\r\n\t\t\tkeyDates.push([startDate.toISODateString(), \"Start dataset\"]);\r\n\t\t\tkeyDates.push([stopDate.toISODateString(), \"Stop dataset\"]);\r\n\r\n\t\t\t// Sort dates\r\n\t\t\tkeyDates.sort(function(a, b) {\r\n\t\t\t\treturn new Date(a[0]) - new Date(b[0]);\r\n\t\t\t});\r\n\r\n\t\t\tvar dateRangeOptions = {\r\n\t\t\t\tstartYear: startDate.getFullYear(),\r\n\t\t\t\tendYear: stopDate.getFullYear(),\r\n\t\t\t\tcalDateList: keyDates\r\n\t\t\t};\r\n\t\t\tthis.$fromDateInput.datebox(\"option\", dateRangeOptions);\r\n\t\t\tthis.$toDateInput.datebox(\"option\", dateRangeOptions);\r\n\t\t} else if (useTimeSlider) {\r\n\t\t\tthis.removeTimeSlider();\r\n\t\t}\r\n\t},\r\n\r\n\t// Add the time slider to the map\r\n\taddTimeSlider: function() {\r\n\r\n\t\tthis.$dateRangeSlider = $('#dateRangeSlider');\r\n\t\tthis.$dateRangeSlider.dateRangeSlider('option', {\r\n\t\t\tboundsMaxLength: Configuration.localConfig.timeSlider.boundsMaxLength,\r\n\t\t\tboundsMinLength: Configuration.localConfig.timeSlider.boundsMinLength,\r\n\t\t\tbounds: {\r\n\t\t\t\tmin: this.model.get(\"start\"),\r\n\t\t\t\tmax: this.model.get(\"stop\")\r\n\t\t\t},\r\n\t\t\tscaleBounds: {\r\n\t\t\t\tmin: this.model.get(\"dateRange\").start,\r\n\t\t\t\tmax: this.model.get(\"dateRange\").stop\r\n\t\t\t},\r\n\t\t\tchange: $.proxy(this.onTimeSliderChanged, this)\r\n\t\t});\r\n\r\n\t\tthis.$dateRangeSlider.dateRangeSlider('show');\r\n\t},\r\n\r\n\t// Call when time slider has changed\r\n\tonTimeSliderChanged: function(bounds) {\r\n\t\t// Update the model\r\n\t\t// Silent to avoid double update\r\n\t\tthis.model.set({\r\n\t\t\tstart: bounds.min,\r\n\t\t\tstop: bounds.max\r\n\t\t});\r\n\t\t// Update the inputs\r\n\t\tthis.$fromDateInput.val(bounds.min.toISODateString());\r\n\t\tthis.$toDateInput.val(bounds.max.toISODateString());\r\n\r\n\t\t// Launch a new search\r\n\t\tSearchResults.launch(this.model);\r\n\t},\r\n\r\n\t// Remove the time slider\r\n\tremoveTimeSlider: function() {\r\n\r\n\t\tvar self = this;\r\n\t\tthis.$dateRangeSlider.dateRangeSlider('hide', function() {\r\n\t\t\t// self.$dateRangeSlider.dateRangeSlider('destroy');\r\n\t\t\tself.$dateRangeSlider = $();\r\n\t\t\tself.trigger(\"removeTimeSlider\");\r\n\r\n\t\t\t// Hack : update panel size when slider has been hidden\r\n\t\t\t$(window).trigger('resize');\r\n\t\t});\r\n\t},\r\n\r\n\t// Update the view when the model has changed\r\n\tupdate: function() {\r\n\t\tthis.$fromDateInput.val(this.model.get(\"start\").toISODateString());\r\n\t\tthis.$toDateInput.val(this.model.get(\"stop\").toISODateString());\r\n\r\n\t\tif (this.$dateRangeSlider.length > 0) {\r\n\t\t\tthis.$dateRangeSlider.dateRangeSlider('option', 'bounds', {\r\n\t\t\t\tmin: this.model.get(\"start\"),\r\n\t\t\t\tmax: this.model.get(\"stop\")\r\n\t\t\t});\r\n\t\t}\r\n\t\t//Uncomment to use back times\r\n\t\t//\t\t$('#fromTimeInput').val( this.model.get(\"startTime\") );\r\n\t\t//\t\t$('#toTimeInput').val( this.model.get(\"stopTime\") );\r\n\t},\r\n\r\n\trender: function() {\r\n\r\n\t\tvar content = dateCriteria_template({\r\n\t\t\tmodel: this.model,\r\n\t\t\tkeyDates: JSON.stringify(Configuration.get(\"keyDates\"))\r\n\t\t});\r\n\t\tthis.$el.append(content);\r\n\r\n\t\t// Keep the DOM elements needed by the view\r\n\t\tthis.$fromDateInput = this.$el.find(\".fromDateInput\");\r\n\t\tthis.$toDateInput = this.$el.find(\".toDateInput\");\r\n\t\tthis.$dateRangeSlider = $();\r\n\r\n\t\t// Need to call create to disable the datebox when timeSlider is enabled by default\r\n\t\tthis.$el.trigger('create');\r\n\t\tthis.$fromDateInput.datebox();\r\n\t\tthis.$toDateInput.datebox();\r\n\r\n\t\t// Append time slider\r\n\t\tif (this.hasTimeSlider) {\r\n\t\t\tthis.$el.append('<label class=\"useTimeSliderLabel\">Use Time Slider<input type=\"checkbox\" ' + (this.model.get('useTimeSlider') ? \"checked\" : \"\") + ' class=\"useTimeSliderCheckBox\" data-mini=\"true\"></label>');\r\n\r\n\t\t\tif (this.model.get(\"useTimeSlider\")) {\r\n\t\t\t\t//disable the dates start and stop widgets if the time slider is enabled\r\n\t\t\t\tthis.$fromDateInput.datebox(\"disable\");\r\n\t\t\t\tthis.$toDateInput.datebox(\"disable\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nmodule.exports = TimeExtentView;","var Logger = require('logger');\r\nvar Configuration = require('configuration');\r\nvar DatasetAuthorizations = require('search/model/datasetAuthorizations');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar Map = require('map/map');\r\nvar MapUtils = require('map/utils');\r\nvar SelectHandler = require('map/selectHandler');\r\nvar SearchResults = require('searchResults/model/searchResults');\r\n\r\nvar _browseLayerMap = {};\r\nvar _browseAccessInformationMap = {};\r\n\r\n/**\r\n * Get the url to be used in the map for the given browse info\r\n */\r\nvar _getUrl = function(browse) {\r\n\t// TODO: parametrize from conf\r\n\treturn browse.BrowseInformation.fileName.ServiceReference[\"@href\"];\r\n};\r\n\r\n/**\r\n *\tCreates a dictionary containing the array of features depending on index\r\n *\tBasically creates an object with keys(the same as _browseAccessInformationMap) with each key,\r\n *\tcontaining the array with features belonging to this key\r\n *\tTake url as a key\r\n */\r\nvar _buildDicoByKey = function(features) {\r\n\tvar dico = {};\r\n\tfor (var i = 0; i < features.length; i++) {\r\n\t\tvar feature = features[i];\r\n\t\tvar browseInfo = _getBrowseInformation(feature);\r\n\t\tif (browseInfo) {\r\n\t\t\tvar url = _getUrl(browseInfo);\r\n\t\t\tif (!dico.hasOwnProperty(url)) {\r\n\t\t\t\tdico[url] = [];\r\n\t\t\t}\r\n\t\t\tdico[url].push(feature);\r\n\t\t}\r\n\t}\r\n\treturn dico;\r\n}\r\n\r\n// Helper function to sort BrowsesLayer by time\r\nvar sortByTime = function(a, b) {\r\n\treturn new Date(a.time) - new Date(b.time);\r\n};\r\n\r\n// Helper function to sort features by date\r\nvar sortFeatureByDate = function(a, b) {\r\n\treturn new Date(a.properties.EarthObservation.gml_endPosition) - new Date(b.properties.EarthObservation.gml_endPosition);\r\n}\r\n\r\n/**\r\n *\tSort highlighted features on top of any other browse\r\n */\r\nvar sortHighlightedFeatures = function(highlightedFeatures, allBrowses) {\r\n\r\n\tvar mapEngine = Map.getMapEngine();\r\n\t// Sort them by date\r\n\thighlightedFeatures.sort(sortFeatureByDate);\r\n\t_.each(highlightedFeatures, function(feature, i) {\r\n\t\t// Search for the given browse according to feature.id(could be multiple in case of shopcart)\r\n\t\tvar highlightedBrowses = _.filter(allBrowses, function(browse) {\r\n\t\t\treturn browse.params.name == feature.id;\r\n\t\t});\r\n\r\n\t\t// Finally set the layer index for the found browses to be on top of all other browses\r\n\t\t_.each(highlightedBrowses, function(browse, j) {\r\n\t\t\t// NGEO-1779: HACK use base layer index < 100 so the overlays/footprint layers are always over browses\r\n\t\t\t// TODO: add zIndex management for footprint/overlay layers\r\n\t\t\tmapEngine.setLayerIndex(browse.engineLayer, allBrowses.length /* + i + 100 */ );\r\n\t\t});\r\n\t});\r\n}\r\n\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t * Add a browse\r\n\t *\r\n\t * @param feature\t\tThe feature to add\r\n\t * @param datasetId\t\tThe parent dataset id\r\n\t */\r\n\taddBrowse: function(feature, datasetId, browseIndex) {\r\n\r\n\t\tvar browses = Configuration.getMappedProperty(feature, \"browses\", null);\r\n\t\tvar isPlanned = (Configuration.getMappedProperty(feature, \"status\") == \"PLANNED\"); // NGEO-1775 : no browse for planned features\r\n\t\t// NB: NGEO-1812: Use isEmptyObject to check that browses exists AND not empty (server sends the response not inline with ICD)\r\n\t\tif (!$.isEmptyObject(browses) && !isPlanned) {\r\n\t\t\t//var browseObject = _.find(browses, function(browse) { return browse.BrowseInformation._selected == true; });\r\n\r\n\t\t\tif ( !browseIndex ) {\r\n\t\t\t\tvar fc = feature._featureCollection;\r\n\t\t\t\tbrowseIndex = fc.browseIndex;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i=0; i<browseIndex.length; i++ ) {\r\n\t\t\t\tvar browseObject = browses[browseIndex[i]];\r\n\t\t\t\tif ( browseObject ) {\r\n\t\t\t\t\tbrowseObject.BrowseInformation._selected = true;\r\n\r\n\t\t\t\t\tvar browseUrl = _getUrl(browseObject);\r\n\t\t\t\t\tvar layerName = MapUtils.getLayerName(browseUrl);\r\n\t\t\t\t\tif (!layerName) {\r\n\t\t\t\t\t\t// Can't find the name of layer: it's impossible to add a new layer\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (DatasetAuthorizations.hasBrowseAuthorization(datasetId, layerName)) {\r\n\t\t\t\t\t\tvar browseLayer = _browseLayerMap[layerName];\r\n\t\t\t\t\t\tif (!browseLayer) {\r\n\t\t\t\t\t\t\tbrowseLayer = _browseLayerMap[layerName] = Map.addLayer({\r\n\t\t\t\t\t\t\t\tname: layerName,\r\n\t\t\t\t\t\t\t\ttype: \"Browses\",\r\n\t\t\t\t\t\t\t\tvisible: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbrowseLayer.addBrowse(feature, browseUrl);\r\n\r\n\t\t\t\t\t} else if (!_browseAccessInformationMap[browseUrl]) {\r\n\t\t\t\t\t\tLogger.inform(\"You do not have enough permission to browse the layer \" + browseUrl + \".\");\r\n\t\t\t\t\t\t_browseAccessInformationMap[browseUrl] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Remove a browse\r\n\t *\r\n\t * @param feature\t\tThe feature to remove\r\n\t */\r\n\tremoveBrowse: function(feature, browseIndex) {\r\n\r\n\t\tvar browses = Configuration.getMappedProperty(feature, \"browses\");\r\n\t\tif (browses) {\r\n\t\t\t// var selectedBrowse = _.find(browses, function(browse) { return browse.BrowseInformation._selected == true; });\r\n\t\t\tif ( !browseIndex ) {\r\n\t\t\t\tvar fc = feature._featureCollection;\r\n\t\t\t\t// var browsesArray = Array.apply(null, Array(browses.length)).map(function (x, i) { return i; });\r\n\t\t\t\t// browseIndex = _.difference(browsesArray, fc.browseIndex);\r\n\t\t\t\tbrowseIndex = fc.browseIndex;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i=0; i<browseIndex.length; i++ ) {\r\n\t\t\t\tvar browseObject = browses[browseIndex[i]];\r\n\t\t\t\tif ( browseObject ) {\r\n\r\n\t\t\t\t\tvar layerName = MapUtils.getLayerName(_getUrl(browseObject));\r\n\t\t\t\t\tvar browseLayer = _browseLayerMap[layerName];\r\n\t\t\t\t\tif (browseLayer) {\r\n\t\t\t\t\t\tvar browseUrl = _getUrl(browseObject);\r\n\t\t\t\t\t\tbrowseLayer.removeBrowse(browseUrl);\r\n\r\n\t\t\t\t\t\tif (browseLayer.isEmpty()) {\r\n\t\t\t\t\t\t\tMap.removeLayer(browseLayer);\r\n\t\t\t\t\t\t\tdelete _browseLayerMap[layerName];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete browseObject.BrowseInformation._selected;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tGet all selected browse layers for the given feature collection\r\n\t */\r\n\tgetSelectedBrowseLayers: function(fc) {\r\n\t\tvar selectedBrowses = [];\r\n\t\tfor ( var i=0; i<fc.features.length; i++ ) {\r\n\t\t\tvar feature = fc.features[i];\r\n\t\t\tvar browses = Configuration.getMappedProperty(feature, \"browses\");\r\n\t\t\tif (browses) {\r\n\t\t\t\tvar selectedBrowse = _.find(browses, function(browse) { return browse.BrowseInformation._selected == true; });\r\n\t\t\t\tif ( selectedBrowse ) {\r\n\t\t\t\t\tvar layerName = MapUtils.getLayerName(_getUrl(selectedBrowse));\t\r\n\t\t\t\t\tif ( selectedBrowses.indexOf(_browseLayerMap[layerName]) == -1 ) {\r\n\t\t\t\t\t\tselectedBrowses.push(_browseLayerMap[layerName]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn selectedBrowses;\r\n\t},\r\n\r\n\t/**\r\n\t *\tUpdate order of browses rendering depending on time attribute of each browse\r\n\t *\twith highlighted features on top\r\n\t *\r\n\t *\t@param highlightedFeatures\r\n\t *\t\tFeatures that were highlighted\r\n\t */\r\n\tupdateRenderOrder: function(highlightedFeatures) {\r\n\r\n\t\t// Extract all the browses for each feature collection and sort them by time\r\n\t\tvar allBrowses = [];\r\n\t\tfor (var key in _browseLayerMap) {\r\n\t\t\tallBrowses = allBrowses.concat(_browseLayerMap[key].getBrowses());\r\n\t\t}\r\n\t\tallBrowses.sort(sortByTime);\r\n\r\n\t\tif (allBrowses.length > 0) {\r\n\t\t\tvar mapEngine = Map.getMapEngine();\r\n\r\n\t\t\t// Then modify the browse layer indices\r\n\t\t\t_.each(allBrowses, function(browse, i) {\r\n\t\t\t\t// NGEO-1779: HACK use base layer index < 100 so the overlays/footprint layers are always over browses\r\n\t\t\t\t// TODO: add zIndex management for footprint/overlay layers\r\n\t\t\t\tmapEngine.setLayerIndex(browse.engineLayer, i /* + 100 */ );\r\n\t\t\t});\r\n\r\n\t\t\t// NGEOD-890: The highlighted features need to be shown over any other browse\r\n\t\t\tif (highlightedFeatures) {\r\n\t\t\t\tsortHighlightedFeatures(highlightedFeatures, allBrowses);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};","var Logger = require('logger');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar SearchResultsMap = require('searchResults/map');\r\nvar SelectHandler = require('map/selectHandler');\r\nvar SearchResults = require('searchResults/model/searchResults');\r\nvar SearchResultsView = require('searchResults/view/searchResultsView');\r\nvar SearchResultsTableView = require('searchResults/view/searchResultsTableView');\r\nvar MapPopup = require('map/widget/mapPopup');\r\nvar GanttView = require('ui/ganttView');\r\n\r\n// Private variable\r\nvar _views = {};\r\n\r\n// Private variables used for \"swipe\"-effect\r\nvar dragging = false;\r\nvar dx = 0; // Delta x needed between events (could probable replace dragging boolean)\r\nvar leftPos = 0; // Current position of beginning of scrollable element\r\nvar $bottomToolbar = null;\r\n\r\n/**\r\n *\tComputes total <command> width (icons containing dataset names)\r\n */\r\nvar computeCommandWidth = function() {\r\n\tvar twidth=0;\r\n\t$bottomToolbar.find('command').each(function() {\r\n\t\ttwidth += $(this).outerWidth( true );\r\n\t});\r\n\treturn twidth;\r\n}\r\n\r\n/**\r\n *\tClamp the given position to not overflow the borders of available datasets\r\n */\r\nvar clampPos = function(pos) {\r\n\r\n\tvar tdiff = computeCommandWidth() - $bottomDatasets.width();\r\n\tif ( pos > tdiff )\r\n\t\tpos = tdiff;\r\n\tif ( pos < 0 )\r\n\t\tpos = 0;\r\n\treturn pos;\r\n}\r\n\r\n/*\r\n * Scroll-left with the given delta\r\n */\r\nvar dragTo = function(delta) {\r\n\tleftPos += delta;\r\n\tleftPos = clampPos(leftPos);\r\n\t$bottomDatasets.scrollLeft( leftPos );\r\n}\r\n\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t * Initialize the search results component for data-services-area.\r\n\t *\r\n\t * @param element \tThe root element of the data-services-area\r\n\t * @param router \tThe data-services-area router\r\n\t */\r\n\tinitialize: function(element, router, panelManager) {\r\n\r\n\t\t$bottomToolbar = $('#bottomToolbar');\r\n\t\t$bottomDatasets = $bottomToolbar.find('#bottomDatasets');\r\n\r\n\t\t// Create the results table view\r\n\t\tvar tableView = new SearchResultsTableView();\r\n\t\tvar isShopcartShared = (window.location.href.indexOf(\"shopcart\") >= 0);\r\n\t\tpanelManager.bottom.addView(tableView);\r\n\t\ttableView.render();\r\n\t\t\r\n\t\tif ( !isShopcartShared ) {\r\n\t\t\t// By default table view element is visible\r\n\t\t\t// In case of shared shopcart, it's showTable method who takes care about view visibility\r\n\t\t\ttableView.$el.css('display', 'block');\r\n\t\t}\r\n\r\n\t\t// In case of shopcart sharing we shouldn\"t trigger a click event on search datasets at least first 3 sec \r\n\t\t// to ensure the display of shared shopcart content to user\r\n\t\tsetTimeout(function() {\r\n\t\t\tisShopcartShared = false;\r\n\t\t}, 3000);\r\n\r\n\t\t// Create the GanttView (no Gantt view for now)\r\n\t\t// var ganttView = new GanttView();\r\n\t\t// panelManager.bottom.addView(ganttView);\r\n\t\t// ganttView.render();\r\n\r\n\t\t$('#table').click(function() {\r\n\t\t\t$(this).toggleClass(\"toggle\");\r\n\t\t\tvar bottom = parseInt(panelManager.bottom.$el.css('bottom'));\r\n\t\t\tvar isOpened = (bottom >= 0);\r\n\t\t\tif ( isOpened ) {\r\n\t\t\t\tpanelManager.hide(\"bottom\", 400);\r\n\t\t\t} else {\r\n\t\t\t\tpanelManager.show(\"bottom\", 400);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Call when a new feature collection is available\r\n\t\tSearchResults.on('add:featureCollection', function(fc) {\r\n\r\n\t\t\t// Create the search results view\r\n\t\t\t// var searchResultsView = new SearchResultsView({\r\n\t\t\t// \tmodel: fc\r\n\t\t\t// });\r\n\t\t\t// _views[fc.id] = searchResultsView;\r\n\t\t\t// $('#statusBar').append(searchResultsView.$el);\r\n\t\t\t// searchResultsView.render();\r\n\r\n\t\t\tvar tagFriendlyId = \"result\" + fc.id;\r\n\t\t\tvar friendlyName;\r\n\t\t\tif ( fc.dataset ) {\r\n\t\t\t\tfriendlyName = DataSetPopulation.getFriendlyName(fc.dataset.get(\"datasetId\"));\r\n\t\t\t}\r\n\t\t\tif ( !friendlyName )\r\n\t\t\t\tfriendlyName = fc.id;\r\n\r\n\t\t\t// Update the toolbar\r\n\t\t\t$bottomToolbar\r\n\t\t\t\t.find('command:last')\r\n\t\t\t\t\t.after('<command id=\"'+ tagFriendlyId +'\" title=\"'+ friendlyName +'\" label=\"' + friendlyName + '\" class=\"result\" />').end()\r\n\t\t\t\t.toolbar('refresh');\r\n\r\n\t\t\t\r\n\t\t\t// Update the daterange slider\r\n\t\t\tvar slider = $(\"#dateRangeSlider\").data(\"ui-dateRangeSlider\");\r\n\t\t\tif (slider) {\r\n\t\t\t\tslider.refresh();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Add to status bar\r\n\t\t\tpanelManager.bottom.addStatus({\r\n\t\t\t\tactivator: '#' + tagFriendlyId,\r\n\t\t\t\t$el: $(\"\"),//searchResultsView.$el,\r\n\t\t\t\tviews: [tableView],//, ganttView],\r\n\t\t\t\tviewActivators: [$('#table')],//, searchResultsView.$el.find('#ganttCB')],\r\n\t\t\t\tmodel: fc\r\n\t\t\t});\r\n\r\n\t\t\t// Add feature collection to the map\r\n\t\t\tSearchResultsMap.addFeatureCollection(fc, {\r\n\t\t\t\tlayerName: fc.id + \" Result\",\r\n\t\t\t\tstyle: \"results-footprint\",\r\n\t\t\t\thasBrowse: true\r\n\t\t\t});\r\n\r\n\t\t\t// Activate the new result\r\n\t\t\tif (!isShopcartShared) {\r\n\t\t\t\t$('#' + tagFriendlyId).click();\r\n\t\t\t}\r\n\r\n\t\t\t// Show user which dataset is currently selected\r\n\t\t\tdragTo($bottomToolbar.find('command:last').position().left);\r\n\t\t});\r\n\r\n\t\t// Call when a feature collection is removed\r\n\t\tSearchResults.on('remove:featureCollection', function(fc) {\r\n\r\n\t\t\t// WARNING : order of removal is important !\r\n\r\n\t\t\tvar tagFriendlyId = \"result\" + fc.id;\r\n\t\t\t// Update the status bar\r\n\t\t\tpanelManager.bottom.removeStatus('#' + tagFriendlyId);\r\n\r\n\t\t\t// Activate the last\r\n\t\t\t$('#bottomToolbar command:last-child').click();\r\n\r\n\t\t\t// Update the daterange slider\r\n\t\t\tvar slider = $(\"#dateRangeSlider\").data(\"ui-dateRangeSlider\");\r\n\t\t\tif (slider) {\r\n\t\t\t\tslider.refresh();\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the view\r\n\t\t\t// _views[fc.id].remove();\r\n\t\t\t// delete _views[fc.id];\r\n\r\n\t\t\t// Remove feature collection from the map\r\n\t\t\tSearchResultsMap.removeFeatureCollection(fc);\r\n\t\t\t\r\n\t\t\t// Show user which dataset is currently selected\r\n\t\t\tdragTo($bottomToolbar.find('command:last').position().left);\r\n\t\t});\r\n\r\n\t\t// Initialize the default handler\r\n\t\tSelectHandler.initialize();\r\n\t\t// Start it\r\n\t\tSelectHandler.start();\r\n\r\n\t\t// Create the popup for the map\r\n\t\tvar mapPopup = new MapPopup('#mapContainer');\r\n\t\tmapPopup.close();\r\n\r\n\t\t// Do not stay on shopcart when a search is launched\r\n\t\tSearchResults.on('launch', function() {\r\n\t\t\tif ($('#shopcart').hasClass('toggle')) {\r\n\t\t\t\t$('#shopcart').next().click();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.initSwipeEffect();\r\n\r\n\t\t// Scroll through the datasets with mouse wheel\r\n\t\t$bottomToolbar.mousewheel( function(event, delta) {\r\n\t\t\t dragTo(delta * 10);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t *\tSwipe-effect: click & drag to swipe though available datasets\r\n\t */\r\n\tinitSwipeEffect: function() {\r\n\t\t// \"Swipe\"-effect\r\n\t\t$bottomDatasets.on('mousedown', function(event) {\r\n\t\t\t// Apply swiping only if scroll is activated\r\n\t\t\tif ( $bottomDatasets.outerWidth() < computeCommandWidth() ) {\r\n\t\t\t\tdragging = true;\r\n\t\t\t\t_lastX = event.clientX;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$bottomDatasets.on('mousemove', function(event) {\r\n\t\t\tif ( dragging ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tdx = _lastX - event.clientX;\t\t\r\n\t\t\t\tdragTo(dx);\r\n\t\t\t\t_lastX = event.clientX;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$(document).on('mouseup', function(event) {\r\n\t\t\tif ( dragging ) {\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tleftPos = clampPos($bottomDatasets.scrollLeft() + (dx * 10));\r\n\t\t\t\t$bottomToolbar.stop().animate({\r\n\t\t\t\t\t'scrollLeft': leftPos\r\n\t\t\t\t}, Math.abs(dx * 30), \"easeOutQuad\");\r\n\t\t\t\tdragging = false;\r\n\t\t\t}\r\n\t\t\tdx = 0;\r\n\t\t});\r\n\t}\r\n};","var Logger = require('logger');\r\nvar BrowsesManager = require('searchResults/browsesManager');\r\nvar Map = require('map/map');\r\nvar SelectHandler = require('map/selectHandler');\r\n\r\n/**\r\n *\tUpdate the array of selected/highlighted features\r\n *\twhich need to update its render order\r\n */\r\nvar _updateFeaturesWithBrowse = function(features) {\r\n\tvar beforeLen = _featuresWithBrowse.length;\r\n\t_featuresWithBrowse = _.union(_featuresWithBrowse, features);\r\n\tif ( _featuresWithBrowse.length != beforeLen ) {\r\n\t\t_lazyRenderOrdering();\r\n\t}\r\n}\r\n\r\n// Called when feature is hidden\r\nvar _onHideFeatures = function(features, fc) {\r\n\r\n\t// Remove browses of all hidden features\r\n\tfor (var i = 0; i < features.length; i++) {\r\n\t\tvar feature = features[i];\r\n\t\tBrowsesManager.removeBrowse(feature);\r\n\t}\r\n\t// Remove footprints from map\r\n\tfc._footprintLayer.removeFeatures(features);\r\n};\r\n\r\n// Called when feature is shown\r\nvar _onShowFeatures = function(features, fc) {\r\n\r\n\t// Add browses for highlighted or selected features\r\n\tfor (var i = 0; i < features.length; i++) {\r\n\t\tvar feature = features[i];\r\n\t\tif ( (fc.isHighlighted(feature) || fc.isSelected(feature)) && feature._browseShown) {\r\n\t\t\tBrowsesManager.addBrowse(feature);\r\n\t\t}\r\n\t}\r\n\t_updateFeaturesWithBrowse(features);\r\n\r\n\t// Add footprints to map\r\n\tfc._footprintLayer.addFeatures(features);\r\n};\r\n\r\n// Called when feature browse is hidden\r\nvar _onHideBrowses = function(features, fc) {\r\n\tfor (var i=0; i<features.length; i++) {\r\n\t\tvar feature = features[i];\r\n\t\tdelete feature._browseShown;\r\n\t\tBrowsesManager.removeBrowse(feature);\r\n\t}\r\n};\r\n\r\n// Called when feature browse is shown\r\nvar _onShowBrowses = function(features, fc) {\r\n\tfor (var i=0; i<features.length; i++) {\r\n\t\tvar feature = features[i];\r\n\t\tfeature._browseShown = true;\r\n\t\tBrowsesManager.addBrowse(feature, fc.id);\r\n\t}\r\n};\r\n\r\n// Call when a feature is selected to synchronize the map\r\nvar _onSelectFeatures = function(features, fc) {\r\n\tfor (var i = 0; i < features.length; i++) {\r\n\t\tvar feature = features[i];\r\n\t\tif (fc.isHighlighted(feature)) {\r\n\t\t\tfc._footprintLayer.modifyFeaturesStyle([feature], \"highlight-select\");\r\n\t\t} else {\r\n\t\t\tfc._footprintLayer.modifyFeaturesStyle([feature], \"select\");\r\n\t\t}\r\n\r\n\t\tif ( feature._browseShown )\r\n\t\t\tBrowsesManager.addBrowse(feature, fc.getDatasetId(feature));\r\n\t}\r\n\t_updateFeaturesWithBrowse(features);\r\n};\r\n\r\n\r\n// Call when a feature is unselected to synchronize the map\r\nvar _onUnselectFeatures = function(features, fc) {\r\n\tfor (var i = 0; i < features.length; i++) {\r\n\t\tvar feature = features[i];\r\n\t\tif (fc.isHighlighted(feature)) {\r\n\t\t\tfc._footprintLayer.modifyFeaturesStyle([feature], \"highlight\");\r\n\t\t} else {\r\n\t\t\tfc._footprintLayer.modifyFeaturesStyle([feature], \"default\");\r\n\t\t\tBrowsesManager.removeBrowse(feature);\r\n\t\t}\r\n\t}\r\n\tMap.trigger(\"unselectFeatures\");\r\n};\r\n\r\n// Selected or highlighted features with browse\r\nvar _featuresWithBrowse = [];\r\nvar waitTimeout = 10; // in ms\r\n// Helper debounce function which triggers updateRenderOrder method\r\n// after LAST highlight/select event has been triggered(in condition that it doesn't takes > waitTimeout)\r\nvar _lazyRenderOrdering = _.debounce(function() {\r\n\tBrowsesManager.updateRenderOrder(_featuresWithBrowse);\r\n\t_featuresWithBrowse = [];\r\n}, waitTimeout);\r\n\r\n// Call when a feature is highlighted to synchronize the map\r\nvar _onHighlightFeatures = function(features, prevFeatures, fc) {\r\n\r\n\tif (prevFeatures.length > 0) {\r\n\r\n\t\t// Set to default the footprint of previously selected features\r\n\t\tfor (var i = 0; i < prevFeatures.length; i++) {\r\n\r\n\t\t\tif (fc.isSelected(prevFeatures[i])) {\r\n\t\t\t\tfc._footprintLayer.modifyFeaturesStyle([prevFeatures[i]], \"select\");\r\n\t\t\t} else {\r\n\t\t\t\tfc._footprintLayer.modifyFeaturesStyle([prevFeatures[i]], \"default\");\r\n\t\t\t\tBrowsesManager.removeBrowse(prevFeatures[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar highlightedFeats = [];\r\n\tif (features.length > 0) {\r\n\t\t// Highlight currently selected features\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tvar feature = features[i];\r\n\t\t\tif (fc.isSelected(feature)) {\r\n\t\t\t\tfc._footprintLayer.modifyFeaturesStyle([feature], \"highlight-select\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\tfc._footprintLayer.modifyFeaturesStyle([feature], \"highlight\");\r\n\t\t\t}\r\n\t\t\tif ( feature._browseShown )\r\n\t\t\t\tBrowsesManager.addBrowse(feature, fc.getDatasetId(feature));\r\n\r\n\t\t\t//HACK add feature collection since it does not contain the feature collection\r\n\t\t\tfeature._featureCollection = fc;\r\n\t\t\thighlightedFeats.push(feature);\r\n\t\t}\r\n\t}\r\n\t_updateFeaturesWithBrowse(features);\r\n\tMap.trigger(\"highlightFeatures\", highlightedFeats);\r\n};\r\n\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t *\tInitialize picked features event\r\n\t *\tUsed only to ensure the ORDER of event binding\r\n\t *\r\n\t *\tHighlight event should be triggered AFTER status panel reacted to 'pickedFeatures'\r\n\t *\tso table view could react on highlight to features which it contains\r\n\t */\r\n\tinitialize: function() {\r\n\t\t// Connect with map feature picking\r\n\t\tMap.on('pickedFeatures', function(features, featureCollections) {\r\n\t\t\tvar highlights = {}\r\n\t\t\tfor (var i = 0; i < featureCollections.length; i++) {\r\n\t\t\t\thighlights[featureCollections[i].id] = [];\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\t\tvar fc = features[i]._featureCollection;\r\n\t\t\t\thighlights[fc.id].push(features[i]);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < featureCollections.length; i++) {\r\n\t\t\t\tfeatureCollections[i].highlight(highlights[featureCollections[i].id]);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Add a feature collection to be displayed on the map\r\n\t *\r\n\t * @param fc \t\t\tThe feature collection\r\n\t * @param options\t\tOptions for visualization\r\n\t */\r\n\taddFeatureCollection: function(fc, options) {\r\n\r\n\t\tvar footprintLayer = options.layer;\r\n\r\n\t\tif (!footprintLayer) {\r\n\t\t\tfootprintLayer = Map.addLayer({\r\n\t\t\t\tname: options.layerName + \" Footprints\",\r\n\t\t\t\ttype: \"Feature\",\r\n\t\t\t\tvisible: true,\r\n\t\t\t\tstyle: options.style,\r\n\t\t\t\tgreatCircle: true\r\n\t\t\t});\r\n\r\n\t\t\t// NGEO-1779: footprint layers should be always on top\r\n\t\t\tMap.getMapEngine().setLayerIndex(footprintLayer.engineLayer, 99999);\r\n\t\t}\r\n\r\n\t\tfc._footprintLayer = footprintLayer;\r\n\t\tfc.on('add:features', footprintLayer.addFeatures, footprintLayer);\r\n\t\tfc.on('remove:features', footprintLayer.removeFeatures, footprintLayer);\r\n\t\tfc.on('reset:features', footprintLayer.clear, footprintLayer);\r\n\t\tfc.on('add:child', this.addFeatureCollection);\r\n\t\tfc.on('remove:child', this.removeFeatureCollection);\r\n\r\n\t\tfc.on('show:features', _onShowFeatures, footprintLayer);\r\n\t\tfc.on('hide:features', _onHideFeatures, footprintLayer);\r\n\t\tfc.on('selectFeatures', _onSelectFeatures);\r\n\t\tfc.on('unselectFeatures', _onUnselectFeatures);\r\n\t\tfc.on('highlightFeatures', _onHighlightFeatures);\r\n\t\tfc.on('show:browses', _onShowBrowses);\r\n\t\tfc.on('hide:browses', _onHideBrowses);\r\n\r\n\t\tSelectHandler.addFeatureCollection(fc);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove a feature collection to be displayed on the map\r\n\t *\r\n\t * @param fc \tThe feature collection\r\n\t */\r\n\tremoveFeatureCollection: function(fc, options) {\r\n\r\n\t\tfc.off('add:features', fc._footprintLayer.addFeatures, fc._footprintLayer);\r\n\t\tfc.off('remove:features', fc._footprintLayer.removeFeatures, fc._footprintLayer);\r\n\t\tfc.off('reset:features', fc._footprintLayer.resetFeatures, fc._footprintLayer);\r\n\t\tfc.off('add:child', this.addFeatureCollection);\r\n\t\tfc.off('remove:child', this.removeFeatureCollection);\r\n\r\n\t\tfc.off('show:features', fc._footprintLayer.addFeatures, fc._footprintLayer);\r\n\t\tfc.off('hide:features', fc._footprintLayer.removeFeatures, fc._footprintLayer);\r\n\t\tfc.off('selectFeatures', _onSelectFeatures);\r\n\t\tfc.off('unselectFeatures', _onUnselectFeatures);\r\n\t\tfc.off('highlightFeatures', _onHighlightFeatures);\r\n\t\tfc.off('show:browses', _onShowBrowses);\r\n\t\tfc.off('hide:browses', _onHideBrowses);\r\n\r\n\t\tif (!options || !options.keepLayer) {\r\n\t\t\tMap.removeLayer(fc._footprintLayer);\r\n\t\t}\r\n\r\n\t\t// Remove browse on highlight and selection\r\n\t\tfor (var i = 0; i < fc.highlights.length; i++) {\r\n\t\t\tBrowsesManager.removeBrowse(fc.highlights[i]);\r\n\t\t}\r\n\t\tfor (var i = 0; i < fc.selection.length; i++) {\r\n\t\t\tBrowsesManager.removeBrowse(fc.selection[i]);\r\n\t\t}\r\n\r\n\t\tSelectHandler.removeFeatureCollection(fc);\r\n\r\n\t}\r\n};","/**\r\n * FeatureCollection received from search results\r\n */\r\n\r\nvar Configuration = require('configuration');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar DataSetSearch = require('search/model/datasetSearch');\r\nvar DownloadOptions = require('search/model/downloadOptions');\r\n\r\n/**\r\n * Extract the download options from the product url\r\n */\r\nvar _getProductDownloadOptions = function(feature) {\r\n\r\n\tvar productUrl = Configuration.getMappedProperty(feature, \"productUrl\", null);\r\n\treturn DownloadOptions.extractParamsFromUrl(productUrl);\r\n};\r\n\r\n\r\nvar FeatureCollection = function() {\r\n\r\n\t// Dictionary for features containing children feature collections\r\n\tthis.children = {};\r\n\r\n\t// Keep the page results\r\n\tvar _pageCache = [];\r\n\r\n\t// The URL for search results\r\n\tvar _url = \"\";\r\n\r\n\t// Store the current page index\r\n\tthis.currentPage = 1;\r\n\r\n\t// The last page\r\n\tthis.lastPage = 0;\r\n\r\n\t// Store the count per page\r\n\tthis.countPerPage = Configuration.get('searchResults.countPerPage', 100);\r\n\r\n\t// Store the number of total results\r\n\tthis.totalResults = -1;\r\n\r\n\t// Array of features\r\n\tthis.features = [];\r\n\r\n\t// The current selection\r\n\tthis.selection = [];\r\n\r\n\t// The hightlighted features\r\n\tthis.highlights = [];\r\n\r\n\t// View access\r\n\tthis.viewAccess = true;\r\n\r\n\t// Download access\r\n\tthis.downloadAccess = true;\r\n\r\n\t// The dataset\r\n\tthis.dataset = null;\r\n\r\n\t// The id of the feature collection\r\n\tthis.id = \"\";\r\n\r\n\t// Current browse index (in case of multiple browses) per feature collection\r\n\t// MS: Maybe move it to BrowsesManager.. (tbd on deploy)\r\n\tthis.browseIndex = [0];\r\n\r\n\tvar self = this;\r\n\r\n\t// fetch the results using the given start index\r\n\tvar _fetch = function(startIndex, currentUrl) {\r\n\t\tvar searchUrl = _url + \"&startIndex=\" + startIndex;\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: searchUrl,\r\n\t\t\tdataType: 'json'\r\n\r\n\t\t}).done(function(data) {\r\n\r\n\t\t\tif (self.parse)\r\n\t\t\t\tdata = self.parse(data);\r\n\r\n\t\t\t// Update data if a new launch has not been done, the launch is new if the url has changed\r\n\t\t\t// TODO : improve the mechanism?\r\n\t\t\tif (_url == currentUrl) {\r\n\r\n\t\t\t\t_pageCache[self.currentPage] = data.features;\r\n\r\n\t\t\t\tif (data.properties && data.properties.totalResults) {\r\n\t\t\t\t\tself.totalResults = parseInt(data.properties.totalResults);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.totalResults = data.features.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.lastPage = Math.ceil(self.totalResults / self.countPerPage);\r\n\r\n\t\t\t\t// Add the features to the results\r\n\t\t\t\tself.addFeatures(data.features);\r\n\r\n\t\t\t\t// Relaunch a search on next page if there is still some results\r\n\t\t\t\t/*if ( data.features.length == self.countPerPage ) {\r\n\t\t\t\t\tself.fetch(startIndex + self.countPerPage, currentUrl);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.trigger('endLoading');\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}).fail(function(jqXHR, textStatus, errorThrown) {\r\n\t\t\tif (jqXHR.status == 0) {\r\n\t\t\t\tlocation.reload();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"ERROR when retrieving the products :\" + textStatus + ' ' + errorThrown);\r\n\t\t\t\t//notify that the product search has Failed\r\n\t\t\t\tself.trigger('error:features', searchUrl);\r\n\t\t\t\tself.trigger('endLoading');\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// Add features to collection\r\n\tthis.addFeatures = function(features) {\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\r\n\t\t\t// HACK: currently server returns the same id for all children so we modify it to be unique\r\n\t\t\tvar feature = features[i];\r\n\t\t\tif ( this.parent != null ) {\r\n\t\t\t\tfeature.id = feature.id + i;\r\n\t\t\t}\r\n\t\t\t// HACK: store feature collection on each feature to avoid multiple problems on browse changing\r\n\t\t\tfeature._featureCollection = this;\r\n\r\n\t\t\tself.features.push(feature);\r\n\t\t}\r\n\r\n\t\tself.trigger('add:features', features, self);\r\n\t};\r\n\r\n\t// Remove features from the collection\r\n\tthis.removeFeatures = function(features) {\r\n\t\tthis.setSelection(_.difference(this.selection, features));\r\n\t\tthis.highlight(_.difference(this.highlights, features));\r\n\t\tthis.features = _.difference(this.features, features);\r\n\t\tself.trigger('remove:features', features, self);\r\n\t};\r\n\r\n\t// Show features\r\n\tthis.showFeatures = function(features) {\r\n\t\tself.trigger('show:features', features, self);\r\n\t\tif ( features.length > 0 ) {\r\n\t\t\t// HACK: highlight all highlights, selected all selection for the moment\r\n\t\t\tthis.trigger(\"highlightFeatures\", this.highlights, this.highlights, this);\r\n\t\t\tthis.trigger(\"selectFeatures\", this.selection, this);\r\n\t\t}\r\n\r\n\t};\r\n\t\r\n\t// Hide features\r\n\tthis.hideFeatures = function(features) { \r\n\t\tself.trigger('hide:features', features, self);\r\n\t};\r\n\r\n\t// Show browses\r\n\tthis.showBrowses = function(features) {\r\n\t\tself.trigger('show:browses', features, self);\r\n\t};\r\n\r\n\t// Hide browses\r\n\tthis.hideBrowses = function(features) {\r\n\t\tself.trigger('hide:browses', features, self);\r\n\t};\r\n\r\n\r\n\t// Launch a search\r\n\tthis.search = function(baseUrl) {\r\n\r\n\t\t// Build base url\r\n\t\t_url = baseUrl;\r\n\t\t_url += \"&count=\" + this.countPerPage;\r\n\r\n\t\t// Reset the cache\r\n\t\t_pageCache.length = 0;\r\n\t\t// Reset the count of results\r\n\t\tthis.lastPage = 1;\r\n\t\tthis.totalResults = 0;\r\n\t\t// Change to first page, will trigger the first search\r\n\t\tthis.changePage(1);\r\n\t};\r\n\r\n\t// Reset the results\r\n\tthis.reset = function() {\r\n\t\t// Reset all highlighted/selected features\r\n\t\tthis.resetHighlighted();\r\n\t\tthis.resetSelected();\r\n\r\n\t\t// Reset children\r\n\t\tfor ( var x in this.children ) {\r\n\t\t\tthis.removeChild(x);\r\n\t\t}\r\n\t\tthis.children = {};\r\n\r\n\t\t_url = \"\";\r\n\t\t// Reset the cache\r\n\t\t_pageCache.length = 0;\r\n\t\t// Reset the count of results\r\n\t\tthis.lastPage = 1;\r\n\t\tthis.totalResults = 0;\r\n\t\t// Reset the features\r\n\t\tthis.features.length = 0;\r\n\t\tthis.trigger('reset:features', this);\r\n\t};\r\n\r\n\t// Method to change the current page of results\r\n\tthis.changePage = function(page) {\r\n\t\tif (page >= 1 && page <= this.lastPage) {\r\n\t\t\tthis.currentPage = page;\r\n\t\t\tthis.features.length = 0;\r\n\t\t\t// Reset all highlighted/selected features\r\n\t\t\tthis.resetHighlighted();\r\n\t\t\tthis.resetSelected();\r\n\r\n\t\t\t// Reset children\r\n\t\t\tfor ( var x in this.children ) {\r\n\t\t\t\tthis.removeChild(x);\r\n\t\t\t}\r\n\t\t\tthis.children = {};\r\n\t\t\tthis.trigger('reset:features', this);\r\n\t\t\tif (_pageCache[this.currentPage]) {\r\n\t\t\t\tthis.addFeatures(_pageCache[this.currentPage]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.trigger('startLoading', this);\r\n\t\t\t\t_fetch(1 + (this.currentPage - 1) * this.countPerPage, _url);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Append the given page to existing results\r\n\tthis.appendPage = function(page) {\r\n\t\tthis.currentPage = page;\r\n\t\tthis.trigger('startLoading', this);\r\n\t\t_fetch(1 + (this.currentPage - 1) * this.countPerPage, _url);\r\n\t};\r\n\r\n\t// Set the selection, replace the previous one\r\n\tthis.setSelection = function(features) {\r\n\t\tvar unselected = _.difference(this.selection, features);\r\n\t\tvar selected = _.difference(features, this.selection);\r\n\t\tthis.selection = features;\r\n\t\tif (unselected.length != 0) {\r\n\t\t\tthis.trigger(\"unselectFeatures\", unselected, this);\r\n\t\t}\r\n\t\tif (selected.length != 0) {\r\n\t\t\tthis.trigger(\"selectFeatures\", selected, this);\r\n\t\t}\r\n\t};\r\n\r\n\t// Check if a feature is selected\r\n\tthis.isSelected = function(feature) {\r\n\t\treturn this.selection.indexOf(feature) >= 0;\r\n\t};\r\n\r\n\t// Check if a feature is highlighted\r\n\tthis.isHighlighted = function(feature) {\r\n\t\treturn this.highlights.indexOf(feature) >= 0;\r\n\t};\r\n\r\n\t// Reset all highlighted features\r\n\tthis.resetHighlighted = function() {\r\n\t\tthis.trigger(\"highlightFeatures\", [], this.highlights, this);\r\n\t\tthis.highlights = [];\r\n\t};\r\n\r\n\t// Reset all selected features\r\n\tthis.resetSelected = function() {\r\n\t\tthis.trigger(\"unselectFeatures\", this.selection, this);\r\n\t\tthis.selection = [];\r\n\t};\r\n\r\n\t// Highlight a feature, only one can be highlight at a time\r\n\tthis.highlight = function(features) {\r\n\r\n\t\tif (features.length != 0 || this.highlights.length != 0) {\r\n\t\t\tvar prevHighlights = this.highlights;\r\n\t\t\t// Copy highlighted items\r\n\t\t\tthis.highlights = features.slice(0);\r\n\t\t\t// Trigger highlight event with features which belongs to \"this\" feature collection\r\n\t\t\tthis.trigger(\"highlightFeatures\", _.intersection(features, this.features), prevHighlights, this);\r\n\t\t\t// Trigger highlight event on every children feature collection with highlighted features which belongs to children[x] feature collection\r\n\t\t\tfor ( var x in this.children ) {\r\n\t\t\t\tthis.trigger(\"highlightFeatures\", _.intersection(features, this.children[x].features), prevHighlights, this.children[x])\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Create a child feature collection for the given feature\r\n\tthis.createChild = function(featureId) {\r\n\t\tvar child = new FeatureCollection();\r\n\t\tvar cleanedId = String(featureId).replace(/\\W/g,'_'); // Id without special characters\r\n\t\tchild.id = cleanedId;\r\n\t\tchild.parent = this;\r\n\t\tchild.countPerPage = Configuration.get('expandSearch.countPerPage', 100);\r\n\t\tthis.children[cleanedId] = child;\r\n\t\tthis.trigger('add:child', child, {\r\n\t\t\tlayerName: \"Child Result\",\r\n\t\t\tstyle: \"results-footprint\",\r\n\t\t\thasBrowse: true\r\n\t\t});\r\n\t\treturn child;\r\n\t};\r\n\r\n\t// Remove child feature collection for the given feature\r\n\tthis.removeChild = function(featureId) {\r\n\t\tvar cleanedId = String(featureId).replace(/\\W/g,'_'); // Id without special characters\r\n\t\tthis.trigger('remove:child', this.children[cleanedId], {\r\n\t\t\tlayerName: \"Child Result\",\r\n\t\t\tstyle: \"results-footprint\",\r\n\t\t\thasBrowse: true\r\n\t\t});\r\n\t\tdelete this.children[cleanedId];\r\n\t};\r\n\r\n\t// Select features\r\n\tthis.select = function(features) {\r\n\t\tfor ( var i=0; i<features.length; i++ ) {\r\n\t\t\tvar feature = features[i];\r\n\t\t\tif ( this.selection.indexOf(feature) == -1 ) {\r\n\t\t\t\tthis.selection.push(feature);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.trigger(\"selectFeatures\", features, this);\r\n\t};\r\n\r\n\t// Unselect features\r\n\tthis.unselect = function(features) {\r\n\t\tfor ( var i=0; i<features.length; i++ ) {\r\n\t\t\tvar feature = features[i];\r\n\t\t\tif ( this.selection.indexOf(feature) >= 0 ) {\r\n\t\t\t\tthis.selection.splice(this.selection.indexOf(feature), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.trigger(\"unselectFeatures\", features, this);\r\n\t};\r\n\r\n\t/**\r\n\t * Select all the items of the table which are not selected\r\n\t *\r\n\t * @param filteredFeatures\r\n\t *\t\tFeatures to select: used if features were filtered by table view\r\n\t */\r\n\tthis.selectAll = function(filteredFeatures) {\r\n\r\n\t\t// Use filtered features if defined otherwise select all present features\r\n\t\tvar selected = _.difference(filteredFeatures ? filteredFeatures : this.features, this.selection);\r\n\t\tfor (var i = 0; i < selected.length; i++) {\r\n\t\t\tthis.selection.push(selected[i]);\r\n\t\t}\r\n\r\n\t\tif (selected.length != 0) {\r\n\t\t\tthis.trigger(\"selectFeatures\", selected, this);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Unselect all the already selected table items\r\n\t */\r\n\tthis.unselectAll = function() {\r\n\t\t// Copy current selection into new array to be fired within the event\r\n\t\tvar features = this.selection.slice(0);\r\n\t\tthis.selection = [];\r\n\t\tthis.trigger(\"unselectFeatures\", features, this);\r\n\t};\r\n\r\n\t/**\r\n\t * Get the list of products URLs from a list of features\r\n\t * if the file name is empty the product is rejected\r\n\t */\r\n\tthis.getSelectedProductUrls = function() {\r\n\r\n\t\tvar productUrls = [];\r\n\r\n\t\tfor (var i = 0; i < this.selection.length; i++) {\r\n\t\t\tvar f = this.selection[i];\r\n\t\t\tvar url = Configuration.getMappedProperty(f, \"productUrl\", null);\r\n\t\t\tif (url) {\r\n\t\t\t\tproductUrls.push(url);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn productUrls;\r\n\t};\r\n\r\n\t/**\r\n\t *\tUpdate feature url property according to the given download options\r\n\t *\r\n\t *  The following method appends the download options using this convention ngEO product URI :\r\n\t *\t\tngEO_DO={param_1:value1,....,param_n:value_n}\r\n\t */\r\n\tthis.updateProductUrl = function(feature, urlProperty, downloadOptions) {\r\n\r\n\t\tvar url = Configuration.getMappedProperty(feature, urlProperty, null);\r\n\t\tif (url) {\r\n\t\t\t// console.log(\"product url initial = \" + url);\r\n\r\n\t\t\t// Remove the already added download options : this fixes the already existing bug :\r\n\t\t\t// When none is chosen the download option is not removed from the url\r\n\t\t\tif (url.indexOf(\"ngEO_DO={\") != -1) {\r\n\t\t\t\turl = url.substring(0, url.indexOf(\"ngEO_DO={\") - 1);\r\n\t\t\t\t//console.log(\"product url removed download options  = \" + url);\r\n\t\t\t}\r\n\r\n\t\t\tif (url.indexOf(\"?\") == -1) {\r\n\t\t\t\t// First parameter\r\n\t\t\t\turl += \"?\";\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise\r\n\t\t\t\turl += \"&\";\r\n\t\t\t}\r\n\t\t\turl += downloadOptions.getAsUrlParameters();\r\n\t\t\tConfiguration.setMappedProperty(feature, urlProperty, url);\r\n\t\t\t//console.log(\"product url updated = \" + url);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Update download options in product url/uri for the current selection\r\n\t */\r\n\tthis.updateDownloadOptions = function(downloadOptions) {\r\n\r\n\t\tvar self = this;\r\n\t\t_.each(this.selection, function(feature) {\r\n\r\n\t\t\tself.updateProductUrl(feature, \"productUrl\", downloadOptions);\r\n\t\t\t// NGEO-1972: Update productUri (metadata report) as well...\r\n\t\t\tself.updateProductUrl(feature, \"productUri\", downloadOptions);\r\n\t\t});\r\n\t\tthis.trigger(\"update:downloadOptions\", this.selection);\r\n\t};\r\n\r\n\t/** \r\n\t * Get the download options on the selected products\r\n\t */\r\n\tthis.getSelectedDownloadOptions = function() {\r\n\r\n\t\tif (this.selection.length == 0)\r\n\t\t\treturn {};\r\n\r\n\t\t// Retreive download options for first product in selection\r\n\t\tvar selectedDownloadOptions = _getProductDownloadOptions(this.selection[0]);\r\n\r\n\t\t// Now check if the other have the same download options\r\n\t\tfor (var i = 1; i < this.selection.length; i++) {\r\n\t\t\tvar dos = _getProductDownloadOptions(this.selection[i]);\r\n\r\n\t\t\tfor (var x in dos) {\r\n\t\t\t\tif ( _.isArray(dos[x]) ) {\r\n\t\t\t\t\tselectedDownloadOptions[x] = _.intersection( selectedDownloadOptions[x], dos[x] );\r\n\t\t\t\t} else if (! _.isEqual(selectedDownloadOptions[x], dos[x]) ) {\r\n\t\t\t\t\tselectedDownloadOptions[x] = \"@conflict\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var x in selectedDownloadOptions) {\r\n\t\t\t\tif ( _.isArray(selectedDownloadOptions[x]) ) {\r\n\t\t\t\t\tselectedDownloadOptions[x] = _.intersection( selectedDownloadOptions[x], dos[x] );\r\n\t\t\t\t} else if (! _.isEqual(selectedDownloadOptions[x], dos[x]) ) {\r\n\t\t\t\t\tselectedDownloadOptions[x] = \"@conflict\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn selectedDownloadOptions;\r\n\t};\r\n\r\n\t/**\r\n\t * Get the dataset id of a feature.\r\n\t */\r\n\tthis.getDatasetId = function(feature) {\r\n\r\n\t\t// If the feature collection has a dataset, just return its id\r\n\t\tif (this.dataset) {\r\n\t\t\treturn this.dataset.get('datasetId');\r\n\t\t}\r\n\r\n\t\t// Otherwise extract the id from the feature\r\n\t\tvar re = /catalogue\\/(\\w+)\\/search/;\r\n\t\tvar productUrl = Configuration.getMappedProperty(feature, \"productUrl\", null);\r\n\t\tvar match = re.exec(productUrl);\r\n\t\tif (match) {\r\n\t\t\treturn match[1];\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\t/**\r\n\t * Get the datasets from the selection\r\n\t */\r\n\tthis.getSelectionDatasetIds = function() {\r\n\t\tvar datasetIds = [];\r\n\t\tfor (var i = 0; i < this.selection.length; i++) {\r\n\t\t\tvar datasetId = this.getDatasetId(this.selection[i]);\r\n\t\t\tif (datasetId) {\r\n\t\t\t\tif (datasetIds.indexOf(datasetId) < 0) {\r\n\t\t\t\t\tdatasetIds.push(datasetId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn datasetIds;\r\n\t};\r\n\r\n\t/** \r\n\t * Fetch the available download options for the selected products\r\n\t */\r\n\tthis.fetchAvailableDownloadOptions = function(callback) {\r\n\r\n\t\tif (this.dataset) {\r\n\t\t\treturn callback(this.dataset.get('downloadOptions'));\r\n\t\t}\r\n\r\n\t\tvar downloadOptions = [];\r\n\t\tvar datasetIds = this.getSelectionDatasetIds();\r\n\t\tif (datasetIds.length == 1) {\r\n\t\t\tDataSetPopulation.fetchDataset(datasetIds[0], function(dataset) {\r\n\t\t\t\tcallback(dataset.get('downloadOptions'));\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallback([]);\r\n\t\t}\r\n\t};\r\n\r\n\t/** return the non Planned features */\r\n\t/*\tthis.getSelectedNonPlannedFeatures = function() {\r\n\t\t\t\r\n\t\t\tvar nonPlannedFeatures = [];\r\n\t\t\tvar eoMeta;\r\n\t\t\t\r\n\t\t\tfor ( var i = 0; i < this.selection.length; i++ ) {\r\n\t\t\t\teoMeta = this.selection[i].properties.EarthObservation.EarthObservationMetaData;\r\n\t\t\t\tif ( eoMeta && eoMeta.eop_status && eoMeta.eop_status != \"PLANNED\") {\r\n\t\t\t\t\tnonPlannedFeatures.push(this.selection[i]);\r\n\t\t\t\t} \t\r\n\t\t\t}\r\n\t\t\treturn nonPlannedFeatures;\r\n\t\t};*/\r\n\r\n\t// Add events\r\n\t_.extend(this, Backbone.Events);\r\n\r\n};\r\n\r\nmodule.exports = FeatureCollection;","/**\r\n * Results table model as received from the server\r\n */\r\n\r\nvar Configuration = require('configuration');\r\nvar FeatureCollection = require('searchResults/model/featureCollection');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar DatasetSearch = require('search/model/datasetSearch');\r\nvar DatasetAuthorizations = require('search/model/datasetAuthorizations');\r\n\r\nvar SearchResults = {\r\n\r\n\tfeatureCollection: {},\r\n\r\n\t/**\r\n\t * Launch a search\r\n\t */\r\n\tlaunch: function(searchCriteria) {\r\n\t\tfor (var x in this.featureCollection) {\r\n\t\t\tvar fc = this.featureCollection[x];\r\n\t\t\tvar baseUrl = searchCriteria.getOpenSearchURL({id: fc.getDatasetId()});\r\n\t\t\tfc.search(baseUrl);\r\n\t\t}\r\n\r\n\t\tthis.trigger('launch');\r\n\t},\r\n\r\n\t/**\r\n\t * Get the product urls of the features\r\n\t */\r\n\tgetProductUrls: function(features) {\r\n\t\tvar productUrls = [];\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tvar f = features[i];\r\n\t\t\tvar productUrl = Configuration.getMappedProperty(f, \"productUrl\", null);\r\n\t\t\tif (productUrl) {\r\n\t\t\t\tproductUrls.push(productUrl);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn productUrls;\r\n\t},\r\n\r\n\t/**\r\n\t * The direct download uses the\r\n\t *   OLD FORMAT: eor.eop_ProductInformation.eop_filename and not the feature.properties.productUrl\r\n\t *\t NEW FORMAT: mapped \"productUri\" instead of \"productUrl\"\r\n\t */\r\n\tgetDirectDownloadProductUrl: function(feature) {\r\n\t\treturn Configuration.getMappedProperty(feature, \"productUri\", \"\");\r\n\t},\r\n\r\n\t/**\r\n\t * Check whether the given feature has a direct download url supported by a browser \r\n\t */\r\n\tisBrowserSupportedUrl: function(feature) {\r\n\r\n\t\tvar downloadUrl = this.getDirectDownloadProductUrl(feature);\r\n\t\tif (downloadUrl.indexOf(\"http\") != -1 || downloadUrl.indexOf(\"https\") != -1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n};\r\n\r\n// Add events\r\n_.extend(SearchResults, Backbone.Events);\r\n\r\n// Listen to selected dataset to create the feature collection used to store the results\r\nDataSetPopulation.on('select', function(dataset) {\r\n\tvar datasetId = dataset.get('datasetId');\r\n\tif (!SearchResults.featureCollection.hasOwnProperty(datasetId)) {\r\n\t\tvar fc = new FeatureCollection();\r\n\t\t// NGEO-2171: Use tag friendly id since datasetId can contain special characters as '/'\r\n\t\tfc.id = dataset.tagFriendlyId;\r\n\t\tfc.dataset = dataset;\r\n\t\tfc.viewAccess = DatasetAuthorizations.hasViewAccess(datasetId);\r\n\t\tfc.downloadAccess = DatasetAuthorizations.hasDownloadAccess(datasetId);\r\n\t\tSearchResults.featureCollection[datasetId] = fc;\r\n\t\tSearchResults.trigger('add:featureCollection', fc);\r\n\t}\r\n});\r\n\r\n// Listen to unselected dataset to remove the feature collection used to store the results\r\nDataSetPopulation.on('unselect', function(dataset) {\r\n\t// If mode is correlation/interferometry, switch back to Simple\r\n\tif (DatasetSearch.get('mode') != \"Simple\") {\r\n\t\tDatasetSearch.set('mode', \"Simple\");\r\n\t} else {\r\n\t\t// Otherwise remove the dataset\r\n\t\tvar datasetId = dataset.get('datasetId');\r\n\r\n\t\tif (SearchResults.featureCollection.hasOwnProperty(datasetId)) {\r\n\t\t\tSearchResults.featureCollection[datasetId].reset();\r\n\t\t\tSearchResults.trigger('remove:featureCollection', SearchResults.featureCollection[datasetId]);\r\n\t\t\tdelete SearchResults.featureCollection[datasetId];\r\n\t\t}\r\n\t}\r\n});\r\n\r\n// Listen to search mode to take into acount correlation, interferometry search\r\nDatasetSearch.on('change:mode', function(model, mode) {\r\n\r\n\t// Remove previous feature collection\r\n\tfor (var id in SearchResults.featureCollection) {\r\n\t\tSearchResults.trigger('remove:featureCollection', SearchResults.featureCollection[id]);\r\n\t\tdelete SearchResults.featureCollection[id];\r\n\t}\r\n\r\n\tswitch (mode) {\r\n\t\tcase \"Simple\":\r\n\t\t\tfor (var datasetId in DataSetPopulation.selection) {\r\n\t\t\t\tvar fc = new FeatureCollection();\r\n\t\t\t\tfc.id = datasetId;\r\n\t\t\t\tfc.dataset = DataSetPopulation.selection[datasetId];\r\n\t\t\t\tSearchResults.featureCollection[datasetId] = fc;\r\n\t\t\t\tSearchResults.trigger('add:featureCollection', fc);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"Correlation\":\r\n\t\tcase \"Interferometry\":\r\n\t\t\tvar fc = new FeatureCollection();\r\n\t\t\tfc.id = mode;\r\n\t\t\tSearchResults.featureCollection[fc.id] = fc;\r\n\t\t\tfc.countPerPage = 5;\r\n\t\t\tSearchResults.trigger('add:featureCollection', fc);\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\nmodule.exports = SearchResults;","var Configuration = require('configuration');\r\nvar GeoJsonConverter = require('map/geojsonconverter');\r\nvar exportViewContent_template = require('searchResults/template/exportViewContent');\r\n\r\n\r\n/** TODO TO BE IMPLEMENTED */\r\nvar ExportView = Backbone.View.extend({\r\n\r\n\t/** the model is the DatasetSearch (the search model containing search parameters)\r\n\t/* the dataset property of DatasetSearch is the Dataset backbone model containing the download options\r\n\t */\r\n\r\n\tmediaTypes: {\r\n\t\t'kml': 'application/vnd.google-earth.kml+xml',\r\n\t\t'gml': 'application/gml+xml',\r\n\t\t'geojson': 'application/json'\r\n\t},\r\n\r\n\tevents: {\r\n\r\n\t\t'change #export-format': function(event) {\r\n\t\t\tvar $download = this.$el.find('#download');\r\n\t\t\tvar $select = $(event.currentTarget);\r\n\r\n\t\t\tif ($select.val() == '') {\r\n\t\t\t\t$download.addClass('ui-disabled');\r\n\t\t\t} else {\r\n\t\t\t\tvar format = $select.val().toLowerCase();\r\n\t\t\t\t$download.removeClass('ui-disabled');\r\n\r\n\t\t\t\t// Export with original geometries, also remove other internal properties\r\n\t\t\t\tvar featureWithOrigGeometries = $.extend(true, [], this.model.selection);\r\n\t\t\t\t$.each(featureWithOrigGeometries, function(index, feature) {\r\n\t\t\t\t\tif (feature._origGeometry) {\r\n\t\t\t\t\t\tfeature.geometry = feature._origGeometry;\r\n\t\t\t\t\t\tdelete feature._origGeometry;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove internal properties\r\n\t\t\t\t\tif (feature._featureCollection)\r\n\t\t\t\t\t\tdelete feature._featureCollection;\r\n\t\t\t\t\tif (feature._isHidden)\r\n\t\t\t\t\t\tdelete feature._isHidden;\r\n\t\t\t\t\tif (feature.properties.styleHint)\r\n\t\t\t\t\t\tdelete feature.properties.styleHint;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar blob = new Blob([GeoJsonConverter.convert(featureWithOrigGeometries, format)], {\r\n\t\t\t\t\t\"type\": this.mediaTypes[format]\r\n\t\t\t\t});\r\n\t\t\t\t$download.attr('download', 'export.' + format);\r\n\t\t\t\t$download.attr('href', URL.createObjectURL(blob));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t},\r\n\r\n\trender: function() {\r\n\r\n\t\t// Check for blob support\r\n\t\tvar blob = null;\r\n\t\tif (window.Blob) {\r\n\t\t\t// For Safari 5.1, test if we can create Blob.\r\n\t\t\ttry {\r\n\t\t\t\tblob = new Blob();\r\n\t\t\t} catch (err) {\r\n\t\t\t\tblob = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!blob) {\r\n\t\t\tthis.$el.append('<p class=\"ui-error-message\"><b>Export is not supported in your browser</b></p>');\r\n\t\t} else {\r\n\t\t\tthis.$el.append(exportViewContent_template());\r\n\t\t\tthis.$el.trigger('create');\r\n\t\t\tthis.$el.find('#download').addClass('ui-disabled');\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = ExportView;","var Logger = require('logger');\r\nvar GlobalEvents = require('globalEvents');\r\nvar TableView = require('ui/tableView');\r\nvar Configuration = require('configuration');\r\nvar SearchResults = require('searchResults/model/searchResults');\r\nvar SimpleDataAccessRequest = require('dataAccess/model/simpleDataAccessRequest');\r\nvar DataAccessWidget = require('dataAccess/widget/dataAccessWidget');\r\nvar DirectDownloadWidget = require('dataAccess/widget/directDownloadWidget');\r\nvar DownloadOptionsWidget = require('searchResults/widget/downloadOptionsWidget');\r\nvar ExportWidget = require('searchResults/widget/exportWidget');\r\n\r\n/**\r\n * The model is the backbone model SearchResults \r\n */\r\nvar SearchResultsTableView = TableView.extend({\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tinitialize: function(options) {\r\n\t\tTableView.prototype.initialize.apply(this, arguments);\r\n\r\n\t\tthis.events = _.extend({}, TableView.prototype.events, this.events);\r\n\r\n\t\tthis.columnDefs = Configuration.data.tableView.columnsDef;\r\n\r\n\t\t// Set specific class for direct download of product\r\n\t\tvar ddIndex = Configuration.get(\"tableView.directDownloadColumn\", -1);\r\n\t\tif (ddIndex >= 0 && ddIndex < this.columnDefs.length) {\r\n\t\t\tthis.columnDefs[ddIndex].getClasses = function(feature) {\r\n\t\t\t\treturn SearchResults.isBrowserSupportedUrl(feature) ? \"ui-direct-download\" : \"\";\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\t// NGEO-1972: Class used to show download options in a user-friendly way\r\n\t\tvar downloadOptionsColumn = _.findWhere(this.columnDefs, {sTitle: \"Download options\"});\r\n\t\tif (downloadOptionsColumn) {\r\n\t\t\tdownloadOptionsColumn.getClasses = function(feature) {\r\n\t\t\t\treturn \"downloadOptions\";\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Manage events on the view\r\n\t */\r\n\tevents: {\r\n\r\n\t\t//Called when the user clicks on the product id of an item\r\n\t\t'click .ui-direct-download': function(event) {\r\n\t\t\tif (this.model.downloadAccess) {\r\n\t\t\t\tvar feature = $(event.currentTarget).closest('tr').data('internal').feature;\r\n\t\t\t\t//The urls to uses for the direct download are those in the eop_filename property and not in feature.properties.productUrl.\r\n\t\t\t\tvar directDownloadWidget = new DirectDownloadWidget(SearchResults.getDirectDownloadProductUrl(feature));\r\n\t\t\t\tdirectDownloadWidget.open(event);\r\n\t\t\t} else {\r\n\t\t\t\tLogger.inform(\"Cannot download the product : missing permissions.\");\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Call when selection has changed\r\n\t */\r\n\tupdateSelection: function(features) {\r\n\r\n\t\tTableView.prototype.updateSelection.apply(this, arguments);\r\n\r\n\t\t// Disable export if no product selected\r\n\t\tif (this.model.selection.length > 0) {\r\n\t\t\tthis.exportButton.button('enable');\r\n\t\t} else {\r\n\t\t\tthis.exportButton.button('disable');\r\n\t\t}\r\n\r\n\t\t//Disable the retrieve Product and download options button if no product item is selected \r\n\t\t//and/or if the products checked do not have a product url\r\n\t\tif (this.model.getSelectedProductUrls().length == 0) {\r\n\t\t\tthis.retrieveProduct.button('disable');\r\n\t\t\tthis.downloadOptionsButton.button('disable');\r\n\t\t\tthis.addToShopcart.button('disable');\r\n\t\t} else {\r\n\r\n\t\t\t// NGEO-1770: No retrieve button if selection contains at least one planned product\r\n\t\t\tvar hasPlanned = _.find(this.model.selection, function(feature) {\r\n\t\t\t\treturn Configuration.getMappedProperty(feature, \"status\", null) == \"PLANNED\";\r\n\t\t\t});\r\n\t\t\tthis.retrieveProduct.button(hasPlanned ? 'disable' : 'enable');\r\n\r\n\t\t\tvar hasDownloadOptions = (this.model.dataset && this.model.dataset.get('downloadOptions') && this.model.dataset.get('downloadOptions').length != 0);\r\n\t\t\tthis.downloadOptionsButton.button(hasDownloadOptions ? 'enable' : 'disable');\r\n\t\t\tthis.addToShopcart.button('enable');\r\n\r\n\t\t\t/*var nonPlannedSelectProducts = this.model.getSelectedNonPlannedFeatures();\r\n\t\t\tif ( nonPlannedSelectProducts.length == 0 ) {\r\n\t\t\t\tthis.addToShopcart.button('disable');\r\n\t\t\t} else {\r\n\t\t\t\tthis.addToShopcart.button('enable');\r\n\t\t\t}*/\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Render buttons\r\n\t */\r\n\trenderButtons: function($buttonContainer) {\r\n\r\n\t\tthis.retrieveProduct = $('<button data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Retrieve Product</button>').appendTo($buttonContainer);\r\n\t\tthis.retrieveProduct.button();\r\n\t\tthis.retrieveProduct.button('disable');\r\n\r\n\t\t//create a simpleDataAccessRequest and assign a download manager\r\n\t\tvar self = this;\r\n\t\tthis.retrieveProduct.click(function() {\r\n\r\n\t\t\tif (self.model.downloadAccess) {\r\n\t\t\t\tSimpleDataAccessRequest.initialize();\r\n\t\t\t\tSimpleDataAccessRequest.setProducts(self.model.selection);\r\n\r\n\t\t\t\tDataAccessWidget.open(SimpleDataAccessRequest);\r\n\t\t\t} else {\r\n\t\t\t\tLogger.inform(\"Cannot download the product : missing permissions.\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t\t//add selected items to the current or to a new shopcart\r\n\t\tthis.addToShopcart = $('<button data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Add to Shopcart</button>').appendTo($buttonContainer);\r\n\t\tthis.addToShopcart.button();\r\n\t\tthis.addToShopcart.button('disable');\r\n\t\tthis.addToShopcart.click(function() {\r\n\t\t\tGlobalEvents.trigger('addToShopcart', self.model.selection);\r\n\t\t});\r\n\r\n\t\t//add button to the widget footer in order to download products\r\n\t\tthis.downloadOptionsButton = $('<button data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Download Options</button>').appendTo($buttonContainer);\r\n\t\tthis.downloadOptionsButton.button();\r\n\t\tthis.downloadOptionsButton.button('disable');\r\n\r\n\t\t//Displays the download options of the selected products in order to be changed in one shot\r\n\t\t//for the moment all product belong to the unique selected dataset \r\n\t\tthis.downloadOptionsButton.click(function() {\r\n\r\n\t\t\tvar downloadOptionsWidget = new DownloadOptionsWidget({\r\n\t\t\t\tdatasetId: self.model.dataset.get(\"datasetId\"),\r\n\t\t\t\tfeatureCollection: self.model,\r\n\t\t\t\tcallback: function(updatedDownloadOptions) {\r\n\t\t\t\t\t// Update the product url of the selected products with the selected download options\r\n\t\t\t\t\treturn $.when(self.model.updateDownloadOptions(updatedDownloadOptions));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdownloadOptionsWidget.open();\r\n\t\t});\r\n\r\n\t\t//add button to the widget footer in order to download products\t\t\r\n\t\tthis.exportButton = $('<button title=\"Export\" data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Export</button>').appendTo($buttonContainer);\r\n\t\tthis.exportButton.button();\r\n\t\tthis.exportButton.button('disable');\r\n\r\n\t\t//Displays the download options of the selected products in order tobe changed in one shot\r\n\t\t//for the moment all product belong to the unique selected dataset \r\n\t\tthis.exportButton.click(function() {\r\n\r\n\t\t\tvar exportWidget = new ExportWidget(self.model);\r\n\t\t\texportWidget.open();\r\n\t\t});\r\n\t}\r\n});\r\n\r\nmodule.exports = SearchResultsTableView;","var Logger = require('logger');\r\nvar DatasetSearch = require('search/model/datasetSearch');\r\nvar searchResultsViewContent_template = require('searchResults/template/searchResultsViewContent');\r\n\r\n/**\r\n * The view for search results\r\n * The model of this view is FeatureCollection\r\n */\r\nvar SearchResultsView = Backbone.View.extend({\r\n\r\n\tid: 'resultsBar',\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tinitialize: function() {\r\n\r\n\t\tthis.listenTo(this.model, 'startLoading', this.onStartLoading);\r\n\t\tthis.listenTo(this.model, 'reset:features', this.onResetFeatures);\r\n\t\tthis.listenTo(this.model, 'add:features', this.onAddFeatures);\r\n\t\tthis.listenTo(this.model, 'error:features', function(searchUrl) {\r\n\t\t\tLogger.error('An error occured when retrieving the products with the search url :<br>' + searchUrl);\r\n\t\t\tthis.$el.find('#resultsMessage').removeClass(\"pulsating\").html(\"No product found\");\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Manage events on the view\r\n\t */\r\n\tevents: {\r\n\t\t// Manage paging through buttons\r\n\t\t'click #paging_first': function() {\r\n\t\t\tthis.model.changePage(1);\r\n\t\t},\r\n\t\t'click #paging_last': function() {\r\n\t\t\tthis.model.changePage(this.model.lastPage);\r\n\t\t},\r\n\t\t'click #paging_next': function() {\r\n\t\t\tthis.model.changePage(this.model.currentPage + 1);\r\n\t\t},\r\n\t\t'click #paging_prev': function() {\r\n\t\t\tthis.model.changePage(this.model.currentPage - 1);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the model start loading\r\n\t */\r\n\tonStartLoading: function() {\r\n\r\n\t\tthis.$el.find('#paging a').addClass('ui-disabled');\r\n\r\n\t\tvar $resultsMessage = this.$el.find('#resultsMessage');\r\n\t\t$resultsMessage.html(\"Searching...\");\r\n\t\t$resultsMessage.addClass(\"pulsating\")\r\n\t\t$resultsMessage.show();\r\n\t},\r\n\r\n\t/**\r\n\t * Called when features are added\r\n\t */\r\n\tonAddFeatures: function(features) {\r\n\r\n\t\tvar $resultsMessage = this.$el.find('#resultsMessage');\r\n\t\t$resultsMessage.removeClass(\"pulsating\");\r\n\r\n\t\tif (this.model.totalResults > 0) {\r\n\t\t\tvar startIndex = 1 + (this.model.currentPage - 1) * this.model.countPerPage;\r\n\t\t\t$resultsMessage.html('Showing ' + startIndex + ' to ' + (startIndex + features.length - 1) + \" of \" + this.model.totalResults + \" products.\");\r\n\r\n\t\t\t// Updage paging button according to the current page\r\n\t\t\tthis.$el.find('#paging a').removeClass('ui-disabled');\r\n\t\t\tif (this.model.currentPage == 1) {\r\n\t\t\t\tthis.$el.find('#paging_prev').addClass('ui-disabled');\r\n\t\t\t\tthis.$el.find('#paging_first').addClass('ui-disabled');\r\n\t\t\t}\r\n\t\t\tif (this.model.currentPage == this.model.lastPage) {\r\n\t\t\t\tthis.$el.find('#paging_next').addClass('ui-disabled');\r\n\t\t\t\tthis.$el.find('#paging_last').addClass('ui-disabled');\r\n\t\t\t}\r\n\t\t} else if (this.model.totalResults == 0) {\r\n\t\t\tthis.$el.find('#paging a').addClass('ui-disabled');\r\n\t\t\t$resultsMessage.html('No product found.');\r\n\t\t} else {\r\n\t\t\t$resultsMessage.html('No search done.');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Called when the model is reset\r\n\t */\r\n\tonResetFeatures: function() {\r\n\r\n\t\tthis.$el.find('#paging a').addClass('ui-disabled');\r\n\t\tvar $resultsMessage = this.$el.find('#resultsMessage');\r\n\t\t$resultsMessage.hide();\r\n\t},\r\n\r\n\t/**\r\n\t * Render the view\r\n\t */\r\n\trender: function() {\r\n\r\n\t\tthis.$el\r\n\t\t\t//.addClass('ui-grid-c')\r\n\t\t\t.html(searchResultsViewContent_template());\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t\t// Set the dataset\r\n\t\tif (DatasetSearch.get('mode') == \"Simple\") {\r\n\t\t\tthis.$el.find('#datasetMessage').html('Dataset : ' + this.model.id).attr(\"title\", this.model.id);\r\n\t\t} else {\r\n\t\t\tvar datasetName = DatasetSearch.get('master') + ' with ' + DatasetSearch.slaves.join(',');\r\n\t\t\tthis.$el.find('#datasetMessage').html('Dataset : ' + datasetName).attr(\"title\", datasetName);\r\n\r\n\t\t\t// Update message when master has changed\r\n\t\t\tDatasetSearch.on('change:master', function() {\r\n\t\t\t\tvar datasetName = DatasetSearch.get('master') + ' with ' + DatasetSearch.slaves.join(',');\r\n\t\t\t\tthis.$el.find('#datasetMessage').html('Dataset : ' + datasetName).attr(\"title\", datasetName);\r\n\t\t\t}, this);\r\n\t\t}\r\n\r\n\t\t// To start paging is disable\r\n\t\tthis.$el.find('#paging a').addClass('ui-disabled');\r\n\t}\r\n});\r\n\r\nmodule.exports = SearchResultsView;","var DownloadOptionsView = require('search/view/downloadOptionsView');\r\nvar DataSetSearch = require('search/model/datasetSearch');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar DownloadOptions = require('search/model/downloadOptions');\r\n\r\n/**\r\n *\tDownload options widget allowing to update download options from table view\r\n *\tCurrent widget could be initialized within a feature collection XOR download options\r\n *\tIn case of feature collection: widget will retrieve download options from dataset for selected products\r\n *\tIn case of download options it will use it as it is (used for shopcart for now)\r\n *\t-> MS: second case seems to be not really necessary.. to be checked\r\n *\t\r\n *\t@param options \tAvailable options:\r\n *\t\t\t<ul>\r\n *\t\t\t\t<li>{Object} featureCollection: Feature collection</li>\r\n *\t\t\t\t<li>{Object} downloadOptions: Download options</li>\r\n *\t\t\t\t<li>{Function} callback: Callback function to be called when do has been updated</li>\r\n *\t\t\t</ul>\r\n */\r\nvar DownloadOptionsWidget = function( options ) {\r\n\r\n\tthis.featureCollection = options.featureCollection;\r\n\tthis.datasetId = options.datasetId ? options.datasetId : options.featureCollection.dataset.get(\"datasetId\");\r\n\tthis.callback = options.callback;\r\n\r\n\tthis.parentElement = $('<div id=\"downloadOptionsPopup\">\\\r\n\t\t<div id=\"downloadOptionsPopupContent\"></div>\\\r\n\t</div>').appendTo('.ui-page-active');\r\n\r\n\tvar self = this;\r\n\tthis.parentElement.ngeowidget({\r\n\t\ttitle: \"Download Options\",\r\n\t\thide: function() {\r\n\t\t\tself.parentElement.remove();\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n *\tOpen the popup\r\n */\r\nDownloadOptionsWidget.prototype.open = function() {\r\n\tvar self = this;\r\n\t// Make request to know download options of given dataset\r\n\tDataSetPopulation.fetchDataset(this.datasetId, function(dataset) {\r\n\t\tvar datasetDownloadOptions = dataset.get(\"downloadOptions\");\r\n\t\tself.widgetDownloadOptions = new DownloadOptions(datasetDownloadOptions);\r\n\r\n\t\tvar fcDownloadOptions = self.featureCollection.getSelectedDownloadOptions();\r\n\t\tfor ( var i=0; i<datasetDownloadOptions.length; i++ ) {\r\n\t\t\tvar key = datasetDownloadOptions[i].argumentName;\r\n\t\t\tif ( datasetDownloadOptions[i].cropProductSearchArea == \"true\" ) {\r\n\t\t\t\t// Should be true or false & not the real WKT value (to be verified)..\r\n\t\t\t\tself.widgetDownloadOptions.attributes[key] = fcDownloadOptions.hasOwnProperty(key) ? fcDownloadOptions.hasOwnProperty(key) : null;\r\n\t\t\t} else {\r\n\t\t\t\tif ( fcDownloadOptions[key] && fcDownloadOptions[key] != \"@conflict\" ) {\r\n\t\t\t\t\tself.widgetDownloadOptions.setValue( key, fcDownloadOptions[key] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar doption = _.findWhere(self.widgetDownloadOptions.collection, {argumentName: key});\r\n\t\t\t\t\tfor ( var j=0; j<doption.value.length; j++) {\r\n\t\t\t\t\t\tdelete doption.value[j].selected;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.widgetDownloadOptions.attributes[key] = (doption.type == 'select-with-none' ? '@none' : \"@conflict\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tself.spawnPopup();\r\n\t});\r\n};\r\n\r\n/**\r\n *\tClose popup\r\n */\r\nDownloadOptionsWidget.prototype.close = function() {\r\n\tthis.parentElement.ngeowidget(\"hide\");\r\n};\r\n\r\n/**\r\n *\tWhen widgetDownloadOptions property is ready, spawn popup\r\n */\r\nDownloadOptionsWidget.prototype.spawnPopup = function() {\r\n\tvar self = this;\r\n\tvar downloadOptionsView = new DownloadOptionsView({\r\n\t\tmodel: self.widgetDownloadOptions,\r\n\t\tel: this.parentElement.find('#downloadOptionsPopupContent'),\r\n\t\tupdateCallback: function() {\r\n\t\t\treturn $.when(self.callback(self.widgetDownloadOptions));\r\n\t\t}\r\n\t});\r\n\tdownloadOptionsView.render();\r\n\r\n\t// Trigger jqm styling\r\n\tthis.parentElement.ngeowidget(\"show\");\r\n};\r\n\r\nmodule.exports = DownloadOptionsWidget;","/**\r\n * export widget module\r\n * Used to display the supported export formats. \r\n */\r\nvar Configuration = require('configuration');\r\nvar ExportView = require('searchResults/view/exportView');\r\nvar DataSetSearch = require('search/model/datasetSearch');\r\nvar ngeoWidget = require('ui/widget');\r\n\r\nvar ExportWidget = function(featureCollection) {\r\n\r\n\tvar parentElement = $('<div id=\"exportPopup\">');\r\n\tvar element = $('<div id=\"exportPopupContent\"></div>');\r\n\telement.css('min-width', '200px');\r\n\telement.appendTo(parentElement);\r\n\tparentElement.appendTo('.ui-page-active');\r\n\tparentElement.ngeowidget({\r\n\t\ttitle: \"Export\",\r\n\t\t// Reinit the standing order when the widget is closed (FL: is it really needed?)\r\n\t\thide: function() {\r\n\t\t\tparentElement.remove();\r\n\t\t}\r\n\t});\r\n\r\n\tvar exportView = new ExportView({\r\n\t\tmodel: featureCollection,\r\n\t\tel: element\r\n\t});\r\n\r\n\t/**\r\n\t *\tOpen the popup\r\n\t */\r\n\tthis.open = function() {\r\n\r\n\t\texportView.render();\r\n\r\n\t\t//trigger jqm styling\r\n\t\tparentElement.ngeowidget(\"show\");\r\n\t};\r\n\r\n\t/**\r\n\t *\tFor the moment not used since the popup can be \r\n\t *\tclosed by clicking out side its content.\r\n\t */\r\n\tthis.close = function() {\r\n\t\tparentElement.ngeowidget(\"hide\");\r\n\t};\r\n};\r\n\r\nmodule.exports = ExportWidget;","/**  \n * Multiple browse selection widget module  \n */\n\nvar Configuration = require('configuration');\nvar BrowsesManager = require('searchResults/browsesManager');\nvar MapUtils = require('map/utils');\nvar multipleBrowse_template = require('searchResults/template/multipleBrowseContent');\n\n/**  \n *  Popup allowing user to select browse\n */\nmodule.exports = {\n\topen: function(options) {\n\n\t\tvar feature = options.feature;\n\t\tvar fc = options.featureCollection;\n\n\t\tvar browses = Configuration.getMappedProperty(feature, \"browses\");\n\t\tvar $popup = $(multipleBrowse_template({\n\t\t\tfeature: feature,\n\t\t\tbrowses: browses,\n\t\t\tMapUtils: MapUtils\n\t\t}));\n\n\t\t$popup.appendTo('.ui-page-active');\n\t\t$popup.popup({\n\t\t\tafterclose: function(event, ui) {\n\t\t\t\t$(this).remove();\n\t\t\t\t$popup = null;\n\t\t\t}\n\t\t});\n\t\t$popup.trigger('create');\n\n\t\t$popup.find('.selectBrowse').click(function(event) {\n\n\t\t\t$popup.popup('close');\n\t\t\tvar newIndex = parseInt($popup.find('input:checked').val());\n\n\t\t\tvar checkedBrowseIdx = [];\n\n\t\t\tvar selectedIndices = _.toArray($popup.find('input:checked').map(function(i, elem) { return parseInt($(elem).val()) }));\n\t\t\tvar notSelectedIndices = _.toArray($popup.find('input:not(:checked)').map(function(i, elem) { return parseInt($(elem).val()) }));\n\t\t\tfor ( var i=0; i<fc.features.length; i++ ) {\n\t\t\t\t// Feature loop\n\t\t\t\tvar f = fc.features[i];\n\t\t\t\tvar browses = Configuration.getMappedProperty(f, \"browses\");\n\n\t\t\t\tif ( f._browseShown ) {\n\t\t\t\t\tBrowsesManager.addBrowse(f, fc.id, selectedIndices);\n\t\t\t\t\tBrowsesManager.removeBrowse(f, notSelectedIndices);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfc.browseIndex = selectedIndices;\n\n\t\t\tif (options.onSelect) {\n\t\t\t\toptions.onSelect();\n\t\t\t}\n\t\t});\n\n\t\t$popup.popup('open');\n\t}\n};","var GlobalEvents = require('globalEvents');\r\nvar MenuBar = require('ui/menubar');\r\nvar ShopcartCollection = require('shopcart/model/shopcartCollection');\r\nvar Shopcart = require('shopcart/model/shopcart');\r\nvar ShopcartTableView = require('shopcart/view/shopcartTableView');\r\nvar ShopcartView = require('shopcart/view/shopcartView');\r\nvar CreateShopcartView = require('account/view/createShopcartView');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\n\t\r\nmodule.exports =  {\r\n\t\t\r\n\t/**\r\n\t * Initialize the shopcart component for data-services-area.\r\n\t *\r\n\t * @param element \tThe root element of the data-services-area\r\n\t * @param router \tThe data-services-area router\r\n\t */\r\n\tinitialize: function(element, router, panelManager) {\r\n\r\n\t\t// Create shopcart view\r\n\t\tvar shopcartView = new ShopcartView({\r\n\t\t\tmodel: ShopcartCollection.getCurrent(),\r\n\t\t\tcollection: ShopcartCollection\r\n\t\t});\r\n\t\t$('#statusBar').append(shopcartView.$el);\r\n\t\tshopcartView.render();\r\n\t\t\r\n\t\t// Create the shopcart table view and add it to panel\r\n\t\tvar tableView = new ShopcartTableView();\r\n\t\tpanelManager.bottom.addView( tableView );\t\t\r\n\t\ttableView.listenTo(ShopcartCollection, 'change:current', function(shopcart) {\r\n\t\t\ttableView.setShopcart(shopcart);\r\n\t\t\t// Add shopcartView&tableView as a status to bottom bar\r\n\t\t\tvar shopcartStatus = {\r\n\t\t\t\tactivator: '#shopcart',\r\n\t\t\t\t$el: shopcartView.$el,\r\n\t\t\t\tviews: [tableView],\r\n\t\t\t\tviewActivators: [ shopcartView.$el.find('#tableCB') ],\r\n\t\t\t\tmodel: shopcart.featureCollection\r\n\t\t\t};\r\n\t\t\t// Update shopcart's name\r\n\t\t\t$(shopcartStatus.activator).find('.datasetName').html(shopcart.get('name')).attr('title', shopcart.get('name'));\r\n\r\n\t\t\t// HACK : use addStatus method as well to update status listeners\r\n\t\t\tpanelManager.bottom.addStatus(shopcartStatus);\r\n\t\t});\r\n\t\ttableView.render();\r\n\r\n\t\t// // Load the shopcart collection to display the current shopcart in the data services area\r\n\t\tShopcartCollection.fetch();\r\n\t\t\r\n\t\t\r\n\t\t// Define route for share shopcart\r\n\t\trouter.route(\r\n\t\t\t\t\"data-services-area/shopcart/:shopcartId\", \r\n\t\t\t\t\"shopcart\", function(shopcartId) {\t\t\r\n\r\n\t\t\tMenuBar.showPage(\"data-services-area\");\r\n\t\t\t\r\n\t\t\t// Create a shared shopcart and load its content to be displayed\r\n\t\t\tvar shareShopcart = new Shopcart({\r\n\t\t\t\tid: shopcartId, name: \"Share Shopcart \" + shopcartId,\r\n\t\t\t\tisShared: true\r\n\t\t\t});\r\n\t\t\tShopcartCollection.setCurrent( shareShopcart );\r\n\t\t\t\r\n\t\t\t// Load content is not needed because it is already done by the shopcart widget when setCurrent is done\r\n\t\t\t//shareShopcart.loadContent();\r\n\t\t\t\r\n\t\t\t// Show the GUI once loaded\r\n\t\t\tshareShopcart.on(\"add:features\", function() {\r\n\t\t\t\t// Toggle the shopcart button to be clicked\r\n\t\t\t\t$(\"#shopcart\").trigger('click');\r\n\t\t\t\tpanelManager.bottom.showTable();\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\t// Subscribe add to shopcart\r\n\t\tGlobalEvents.on('addToShopcart', function(features) {\r\n\t\t\r\n\t\t\tif (!ShopcartCollection.getCurrent()) {\r\n\r\n\t\t\t\tvar createShopcartView = new CreateShopcartView({\r\n\t\t\t\t\tmodel : ShopcartCollection,\r\n\t\t\t\t\ttitle : \"Create shopcart\",\r\n\t\t\t\t\tsuccess : function(model) {\r\n\t\t\t\t\t\tShopcartCollection.setCurrent( model );\r\n\t\t\t\t\t\tShopcartCollection.getCurrent().addItems( features );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tcreateShopcartView.render();\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tShopcartCollection.getCurrent().addItems( features );\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t},\r\n};\r\n","var Logger = require('logger');\r\nvar Configuration = require('configuration');\r\nvar FeatureCollection = require('searchResults/model/featureCollection');\r\n\r\n// Check if a feature is planned or not\r\nvar isNotPlanned = function(feature) {\r\n\treturn Configuration.getMappedProperty(feature, \"status\") != \"PLANNED\";\r\n};\r\n\r\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\nvar methodMap = {\r\n\t'create': 'POST',\r\n\t'update': 'PUT',\r\n\t'patch': 'PATCH',\r\n\t'delete': 'DELETE',\r\n\t'read': 'GET'\r\n};\r\n\r\n/**\r\n *  This is the backbone Model of the Shopcart element\r\n */\r\nvar Shopcart = Backbone.Model.extend({\r\n\r\n\tdefaults: {\r\n\t\tname: \"Shopcart\",\r\n\t\tisDefault: false\r\n\t},\r\n\r\n\t/**\r\n\t\tInitialize the shopcart\r\n\t */\r\n\tinitialize: function() {\r\n\t\t// The base url to retreive the shopcarts list\r\n\t\tthis.urlRoot = Configuration.baseServerUrl + '/shopcarts';\r\n\r\n\t\t// The shopcart content is a feature collection\r\n\t\tthis.featureCollection = new FeatureCollection();\r\n\t\tthis.featureCollection.id = this.id;\r\n\t\tvar self = this;\r\n\t\tthis.listenTo(this.featureCollection, 'add:features', function(features){\r\n\t\t\tself.trigger(\"add:features\", features)\r\n\t\t});\r\n\t\tthis.listenTo(this.featureCollection, 'remove:features', function(features) {\r\n\t\t\tself.trigger(\"remove:features\", features);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t\tParse response from server\r\n\t */\r\n\tparse: function(response) {\r\n\r\n\t\tif (response.createShopcart && response.createShopcart.shopcart) {\r\n\t\t\treturn response.createShopcart.shopcart;\r\n\t\t}\r\n\r\n\t\treturn response;\r\n\t},\r\n\r\n\t/**\r\n\t\tSync model with server\r\n\t */\r\n\tsync: function(method, model, options) {\r\n\t\tvar type = methodMap[method];\r\n\r\n\t\t// Default JSON-request options.\r\n\t\tvar params = {\r\n\t\t\ttype: type,\r\n\t\t\tdataType: 'json'\r\n\t\t};\r\n\r\n\t\t// Ensure that we have a URL.\r\n\t\tif (!options.url) {\r\n\t\t\tparams.url = _.result(model, 'url') || urlError();\r\n\t\t}\r\n\r\n\t\t// Ensure that we have the appropriate request data.\r\n\t\tif (options.data == null && model && (method === 'create' || method === 'update')) {\r\n\t\t\tparams.contentType = 'application/json';\r\n\r\n\t\t\tvar createJSON = {\r\n\t\t\t\tcreateShopcart: {\r\n\t\t\t\t\tshopcart: this.attributes\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tparams.data = JSON.stringify(createJSON);\r\n\t\t}\r\n\r\n\t\t// Don't process data on a non-GET request.\r\n\t\tif (params.type !== 'GET') {\r\n\t\t\tparams.processData = false;\r\n\t\t}\r\n\r\n\t\t// Make the request, allowing the user to override any Ajax options.\r\n\t\tvar xhr = options.xhr = Backbone.ajax(_.extend(params, options));\r\n\t\tmodel.trigger('request', model, xhr, options);\r\n\t\treturn xhr;\r\n\t},\r\n\r\n\r\n\t/**\r\n    \tLoad the shopcart content\r\n\t*/\r\n\tloadContent: function() {\r\n\t\tthis.featureCollection.search(this.url() + '/search?format=json');\r\n\t},\r\n\r\n\r\n\t/** \r\n\t * Submit a POST request to the server in order to add the selected \r\n\t * products from the search results table to the shopcart.\r\n\t * The product urls of the selected products are passed as arguments. \r\n\t */\r\n\taddItems: function(features) {\r\n\r\n\t\t// Build the request body\r\n\t\tvar itemsToAdd = [];\r\n\t\tvar productUrls = [];\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tvar feature = features[i];\r\n\t\t\tvar productUrl = Configuration.getMappedProperty(feature, \"productUrl\", null);\r\n\t\t\tif (feature.properties && productUrl && isNotPlanned(feature)) {\r\n\t\t\t\titemsToAdd.push({\r\n\t\t\t\t\tshopcartId: this.id,\r\n\t\t\t\t\tproduct: productUrl\r\n\t\t\t\t});\r\n\t\t\t\tproductUrls.push(productUrl);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Send the request\r\n\t\tvar self = this;\r\n\t\treturn $.ajax({\r\n\r\n\t\t\turl: this.url() + \"/items\",\r\n\t\t\ttype: 'POST',\r\n\t\t\tdataType: 'json',\r\n\t\t\tcontentType: 'application/json',\r\n\t\t\tdata: JSON.stringify({\r\n\t\t\t\t'shopCartItemAdding': itemsToAdd\r\n\t\t\t}),\r\n\r\n\t\t\tsuccess: function(data) {\r\n\r\n\t\t\t\t// Check the response\r\n\t\t\t\tif (!data.shopCartItemAdding || !_.isArray(data.shopCartItemAdding)) {\r\n\t\t\t\t\tLogger.error(\"Invalid response from server when adding shopcart items.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Process reponse to see which items have been successfully added\r\n\t\t\t\tvar featuresAdded = [];\r\n\t\t\t\tvar itemsAddedResponse = data.shopCartItemAdding;\r\n\t\t\t\tfor (var i = 0; i < itemsAddedResponse.length; i++) {\r\n\r\n\t\t\t\t\tvar indexOfProductUrls = productUrls.indexOf(itemsAddedResponse[i].product);\r\n\t\t\t\t\tif (indexOfProductUrls >= 0 && indexOfProductUrls < features.length) {\r\n\r\n\t\t\t\t\t\t// Clone the feature to be different from the selected one\r\n\t\t\t\t\t\tvar feature = _.clone(features[indexOfProductUrls]);\r\n\t\t\t\t\t\tfeature.properties = _.clone(feature.properties);\r\n\t\t\t\t\t\tfeature.properties.shopcartItemId = itemsAddedResponse[i].id;\r\n\r\n\t\t\t\t\t\tfeaturesAdded.push(feature);\r\n\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO handle error\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Display informative message\r\n\t\t\t\tvar addToShopcartMsg;\r\n\t\t\t\tif (features.length != featuresAdded.length) {\r\n\t\t\t\t\tif (featuresAdded.length > 0)\r\n\t\t\t\t\t\taddToShopcartMsg = \"Only \" + featuresAdded.length + \" product\" + (featuresAdded.length > 1 ? 's' : '') + \" on \" + features.length + \" added to shopcart \" + self.get('name') + \".\";\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\taddToShopcartMsg = features.length + \" product\" + (featuresAdded.length > 1 ? 's' : '') + \" not added to shopcart \" + self.get('name') + \".\";\r\n\t\t\t\t\taddToShopcartMsg += \"<br>A product cannot be added if already exists in the shopcart or if it is a planned product.\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddToShopcartMsg = featuresAdded.length + \" product\" + (featuresAdded.length > 1 ? 's' : '') + \" added to shopcart \" + self.get('name') + \".\";\r\n\t\t\t\t}\r\n\t\t\t\tLogger.inform(addToShopcartMsg);\r\n\r\n\t\t\t\tself.featureCollection.totalResults += featuresAdded.length;\r\n\t\t\t\tself.featureCollection.addFeatures(featuresAdded);\r\n\t\t\t},\r\n\r\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\tLogger.error(\"Unexpected server response when adding shopcart items (\" + textStatus + \" : \" + errorThrown + \").\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t},\r\n\r\n\t/** \r\n\t * Helper function to get a feature from the shopcart item id\r\n\t */\r\n\t_getFeatureFromShopcartItemId: function(id) {\r\n\t\tvar features = this.featureCollection.features;\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tif (features[i].properties.shopcartItemId == id) {\r\n\t\t\t\treturn features[i];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Submit a delete request to the server in order to delete the selected \r\n\t * shopcart items.\r\n\t */\r\n\tdeleteSelection: function() {\r\n\r\n\t\tif (this.featureCollection.selection.length == 0)\r\n\t\t\treturn;\r\n\r\n\t\t// Build the request body\r\n\t\tvar itemsToRemove = [];\r\n\t\tfor (var i = 0; i < this.featureCollection.selection.length; i++) {\r\n\t\t\tvar f = this.featureCollection.selection[i];\r\n\t\t\tif (f.properties && f.properties.shopcartItemId) {\r\n\t\t\t\titemsToRemove.push({\r\n\t\t\t\t\tshopcartId: this.id,\r\n\t\t\t\t\tid: f.properties.shopcartItemId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check if items are correct\r\n\t\tif (itemsToRemove.length != this.featureCollection.selection.length) {\r\n\t\t\tLogger.error(\"The selected shopcart items do not contain valid ID and cannot be removed.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\treturn $.ajax({\r\n\r\n\t\t\turl: this.url() + '/items',\r\n\t\t\ttype: 'DELETE',\r\n\t\t\tdataType: 'json',\r\n\t\t\tcontentType: 'application/json',\r\n\t\t\tdata: JSON.stringify({\r\n\t\t\t\tshopCartItemRemoving: itemsToRemove\r\n\t\t\t}),\r\n\r\n\t\t\tsuccess: function(data) {\r\n\r\n\t\t\t\t// Check the response is correct\r\n\t\t\t\tif (!data.shopCartItemRemoving || !_.isArray(data.shopCartItemRemoving)) {\r\n\t\t\t\t\tLogger.error(\"Invalid response from server when removing shopcart items.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar removedItems = [];\r\n\t\t\t\tfor (var i = 0; i < data.shopCartItemRemoving.length; i++) {\r\n\t\t\t\t\tremovedItems.push(self._getFeatureFromShopcartItemId(data.shopCartItemRemoving[i].id));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if items are correct\r\n\t\t\t\tif (removedItems.length != itemsToRemove.length) {\r\n\t\t\t\t\tLogger.inform((itemsToRemove.length - removedItems.length) + \" items have not been successfully removed on the server, IDs are not valid.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (removedItems.length > 0) {\r\n\t\t\t\t\tself.featureCollection.totalResults -= removedItems.length;\r\n\t\t\t\t\tself.featureCollection.removeFeatures(removedItems);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\tLogger.error(\"Unexpected server response when removing shopcart items (\" + textStatus + \" : \" + errorThrown + \").\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Submit a PUT request to the server in order to update the selected \r\n\t * shopcart items with the given download options\r\n\t */\r\n\tupdateSelection: function(downloadOptions) {\r\n\t\tvar itemsToUpdate = [];\r\n\r\n\t\t// Build the request body\r\n\t\tfor (var i = 0; i < this.featureCollection.selection.length; i++) {\r\n\t\t\tvar f = this.featureCollection.selection[i];\r\n\t\t\tif ( f.properties.shopcartItemId ) {\r\n\t\t\t\titemsToUpdate.push({\r\n\t\t\t\t\t'shopcartId': this.id,\r\n\t\t\t\t\t'id': f.properties.shopcartItemId,\r\n\t\t\t\t\t'downloadOptions': downloadOptions\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\treturn $.ajax({\r\n\t\t\turl: self.url() + '/items',\r\n\t\t\ttype: 'PUT',\r\n\t\t\tdataType: 'json',\r\n\t\t\tcontentType: 'application/json',\r\n\t\t\tdata: JSON.stringify({\r\n\t\t\t\t'shopCartItemUpdating': itemsToUpdate\r\n\t\t\t}),\r\n\t\t\tsuccess: function(data) {\r\n\t\t\t\tvar response = data.items;\r\n\t\t\t\tself.trigger(\"itemsUpdated\", response);\r\n\t\t\t},\r\n\t\t\terror: function(jqXHR, textStatus, errorThrown) {\r\n\t\t\t\tself.trigger('updateItemsError');\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n\r\nmodule.exports = Shopcart;","/**\r\n * These are the model components for Shopcarts Collection handling\r\n */\r\n\r\nvar Configuration = require('configuration');\r\nvar Shopcart = require('shopcart/model/shopcart');\r\nvar UserPrefs = require('userPrefs');\r\n\r\n/** This is the backbone Collection modeling the shopcart list\r\n */\r\nvar ShopcartCollection = Backbone.Collection.extend({\r\n\r\n\tmodel: Shopcart,\r\n\r\n\t/**\r\n\t * Initialize the collection\r\n\t */\r\n\tinitialize: function() {\r\n\t\t// The base url to retreive the shopcarts list\r\n\t\tthis.url = Configuration.baseServerUrl + '/shopcarts';\r\n\t\t// The current shopcart\r\n\t\tthis._current = null;\r\n\r\n\t\t// Synchronize the current shopcart when the collection has been fetched from the server\r\n\t\tthis.on('sync', function() {\r\n\r\n\t\t\t// Do not change the current if it is a shared one\r\n\t\t\tif (this._current && this._current.get(\"isShared\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if current shopcart is defined in user prefereneces\r\n\t\t\tvar current = this.findWhere({ id: UserPrefs.get(\"Current shopcart\") });\r\n\t\t\tif ( !current ) {\r\n\r\n\t\t\t\t// Use the default one or the first one if none has been defined\r\n\t\t\t\tvar current = this.findWhere({\r\n\t\t\t\t\tisDefault: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif ( !current ) {\r\n\t\t\t\t\tcurrent = this.at(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set current shopcart\r\n\t\t\tthis.setCurrent(current);\r\n\r\n\t\t}, this);\r\n\t},\r\n\r\n\t/*fetch: function() {\r\n\t\tconsole.log('fetch');\r\n\t\tBackbone.Collection.prototype.fetch(this, arguments);\r\n\t},*/\r\n\r\n\r\n\t/**\r\n\t * Needed because the server response is not what is expected from Backbone\r\n\t */\r\n\tparse: function(response) {\r\n\t\t// Remove the shopCartList attributes from JSON\r\n\t\tif (response.shopCartList) {\r\n\t\t\treturn response.shopCartList;\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t},\r\n\r\n\t/** \r\n\t *\tGet the current shopcart \r\n\t */\r\n\tgetCurrent: function() {\r\n\t\treturn this._current;\r\n\t},\r\n\r\n\t/** \r\n\t *\tSet the current shopcart \r\n\t */\r\n\tsetCurrent: function(current) {\r\n\t\tif (current != this._current) {\r\n\t\t\tvar prevCurrent = this._current;\r\n\t\t\tthis._current = current;\r\n\t\t\tthis.trigger('change:current', this._current, prevCurrent);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Get the current shopcart shared URL\r\n\t */\r\n\tgetShopcartSharedURL: function() {\r\n\r\n\t\treturn \"#data-services-area/shopcart/\" + this.getCurrent().id;\r\n\r\n\t},\r\n\r\n});\r\n\r\nmodule.exports = new ShopcartCollection();","\r\nvar Configuration = require('configuration');\r\nvar ShopcartCollection = require('shopcart/model/shopcartCollection');\r\nvar exportViewContent_template = require('shopcart/template/shopcartExportContent');\r\n\r\nvar ShopcartExportView = Backbone.View.extend({\r\n\r\n\r\n\r\n\tevents: {\r\n\r\n\t\t'change #shopcart-export-format': function(event) {\r\n\t\t\tvar $download = this.$el.find('#download-exported-shopcart');\r\n\t\t\tvar $select = $(event.currentTarget);\r\n\r\n\t\t\tif ($select.val() == '') {\r\n\t\t\t\t$download.addClass('ui-disabled');\r\n\t\t\t} else {\r\n\t\t\t\tvar format = $select.val();\r\n\t\t\t\t$download.removeClass('ui-disabled');\r\n\t\t\t\t$download.attr('href', ShopcartCollection.getCurrent().url() + \"?format=\" + format);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t},\r\n\r\n\trender: function() {\r\n\t\tthis.$el.append(exportViewContent_template());\r\n\t\tthis.$el.trigger('create');\r\n\t\tthis.$el.find('#download-exported-shopcart').addClass('ui-disabled');\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = ShopcartExportView;","var Logger = require('logger');\r\nvar TableView = require('ui/tableView');\r\nvar Configuration = require('configuration');\r\nvar SimpleDataAccessRequest = require('dataAccess/model/simpleDataAccessRequest');\r\nvar DataAccessWidget = require('dataAccess/widget/dataAccessWidget');\r\nvar DownloadOptionsWidget = require('searchResults/widget/downloadOptionsWidget');\r\nvar ShopcartExportWidget = require('shopcart/widget/shopcartExportWidget');\r\nvar DataSetPopulation = require('search/model/dataSetPopulation');\r\nvar DataSetAuthorizations = require('search/model/datasetAuthorizations');\r\n\r\n/**\r\n * The model is the backbone model FeatureCollection \r\n */\r\nvar ShopcartTableView = TableView.extend({\r\n\r\n\tinitialize: function() {\r\n\t\tTableView.prototype.initialize.apply(this, arguments);\r\n\r\n\t\tthis.events = _.extend({}, TableView.prototype.events, this.events);\r\n\t\tthis.columnDefs = Configuration.data.tableView.columnsDef;\r\n\t},\r\n\r\n\t/**\r\n\t * Update the footer button states\r\n\t */\r\n\tupdateSelection: function() {\r\n\t\tTableView.prototype.updateSelection.apply(this, arguments);\r\n\r\n\t\t// The products have to be a part of dataset so we extract dataset ids\r\n\t\t// to be sure that products are viable\r\n\t\tvar selectedDatasetIds = this.model.getSelectionDatasetIds();\r\n\t\tif (selectedDatasetIds.length > 0) {\r\n\t\t\tthis.deleteButton.button('enable');\r\n\t\t\tthis.retrieveProduct.button('enable');\r\n\t\t} else {\r\n\t\t\tthis.retrieveProduct.button('disable');\r\n\t\t\tthis.deleteButton.button('disable');\r\n\t\t}\r\n\r\n\t\t// Add possibility to update download options only\r\n\t\t// if selected products are coming from the same dataset\r\n\t\tif ( selectedDatasetIds.length == 1 ) {\r\n\t\t\tthis.downloadOptionsButton.attr(\"title\", \"Modify download options of selected products\");\r\n\t\t\tthis.downloadOptionsButton.button('enable');\r\n\t\t} else {\r\n\t\t\tthis.downloadOptionsButton.attr(\"title\", \"You should select products coming from the same dataset\");\r\n\t\t\tthis.downloadOptionsButton.button('disable');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Set the shopcart used by the view\r\n\t */\r\n\tsetShopcart: function(shopcart) {\r\n\t\tthis.shopcart = shopcart;\r\n\t\tthis.setModel(shopcart.featureCollection);\r\n\t},\r\n\r\n\t/**\r\n\t * Render buttons\r\n\t */\r\n\trenderButtons: function($buttonContainer) {\r\n\t\tvar self = this;\r\n\r\n\t\tthis.retrieveProduct = $('<button data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Retrieve Product</button>').appendTo($buttonContainer);\r\n\t\tthis.retrieveProduct.button();\r\n\t\tthis.retrieveProduct.button('disable');\r\n\r\n\t\t//create a simpleDataAccessRequest and assign a download manager\r\n\t\tvar self = this;\r\n\t\tthis.retrieveProduct.click(function() {\r\n\r\n\t\t\tvar hasDownloadAccess = true;\r\n\t\t\t_.each(self.model.selection, function(feature) {\r\n\t\t\t\thasDownloadAccess &= DataSetAuthorizations.hasDownloadAccess(self.model.getDatasetId(feature));\r\n\t\t\t});\r\n\r\n\t\t\tif (hasDownloadAccess) {\r\n\t\t\t\tSimpleDataAccessRequest.initialize();\r\n\t\t\t\tSimpleDataAccessRequest.setProducts(self.model.selection);\r\n\r\n\t\t\t\tDataAccessWidget.open(SimpleDataAccessRequest);\r\n\t\t\t} else {\r\n\t\t\t\tLogger.inform(\"Cannot download the product : missing permissions.\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//add button to the widget footer in order to download products\r\n\t\tthis.downloadOptionsButton = $('<button data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Download Options</button>').appendTo($buttonContainer);\r\n\t\tthis.downloadOptionsButton.button();\r\n\t\tthis.downloadOptionsButton.button('disable');\r\n\r\n\t\tthis.downloadOptionsButton.click(function() {\r\n\t\t\tvar datasetId = self.model.getSelectionDatasetIds()[0]; // We are sure that there is only one dataset selected\r\n\t\t\tvar downloadOptionsWidget = new DownloadOptionsWidget({\r\n\t\t\t\tdatasetId: datasetId,\r\n\t\t\t\tfeatureCollection: self.model,\r\n\t\t\t\tcallback: function(updatedDownloadOptions) {\r\n\t\t\t\t\tself.shopcart.updateSelection(updatedDownloadOptions.getAttributes()).then(function(response) {\r\n\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t\t// TODO: handle a real response\r\n\t\t\t\t\t\tself.model.updateDownloadOptions(updatedDownloadOptions);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdownloadOptionsWidget.open();\r\n\t\t});\r\n\r\n\t\t//add button to the widget footer in order to download products\t\t\r\n\t\tthis.deleteButton = $('<button data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Delete</button>').appendTo($buttonContainer);\r\n\t\tthis.deleteButton.button();\r\n\t\tthis.deleteButton.button('disable');\r\n\r\n\t\tthis.deleteButton.click(function() {\r\n\t\t\tself.shopcart.deleteSelection();\r\n\t\t});\r\n\r\n\t\t//add button to the widget footer in order to export a shopcart\r\n\t\tthis.exportButton = $('<button data-role=\"button\" data-inline=\"true\" data-mini=\"true\">Export</button>').appendTo($buttonContainer);\r\n\t\tthis.exportButton.button();\r\n\t\tthis.exportButton.button('enable');\r\n\r\n\t\tthis.exportButton.click(function() {\r\n\t\t\tvar shopcartExportWidget = new ShopcartExportWidget();\r\n\t\t\tshopcartExportWidget.open();\r\n\t\t});\r\n\r\n\t}\r\n});\r\n\r\nmodule.exports = ShopcartTableView;","var SearchResultsMap = require('searchResults/map');\nvar Map = require('map/map');\nvar shopcartViewContent_template = require('shopcart/template/shopcartViewContent');\nvar UserPrefs = require('userPrefs');\n\n/**\n * This view represents the status bar for shopcart dataset\n * The model of this view is Shopcart\n * This collection of this view is ShopcartCollection\n */\nvar ShopcartView = Backbone.View.extend({\n\n    id: \"shopcartBar\",\n\n    initialize: function() {\n        // Connect shopcart with Map        \n        var shopcartLayer = Map.addLayer({\n            name: \"Shopcart Footprints\",\n            type: \"Feature\",\n            visible: true,\n            style: \"shopcart-footprint\"\n        });\n        \n        var self = this;\n        var updateShopcartLabel = function() {\n            var currentShopcart = self.collection.getCurrent();\n            var numItems = currentShopcart.featureCollection.features.length;\n            self.$el.find('#shopcartMessage').html( currentShopcart.get('name') + ' : ' + numItems + ' items' );\n        };\n        \n        // Manage display of shopcart footprints\n        this.collection.on('change:current', function( current, prevCurrent ) {\n            if ( prevCurrent ) {\n                prevCurrent.featureCollection.off('add:features', updateShopcartLabel );\n                prevCurrent.featureCollection.off('remove:features', updateShopcartLabel );\n                prevCurrent.off('change:name', updateShopcartLabel);\n                \n                SearchResultsMap.removeFeatureCollection( prevCurrent.featureCollection, { keepLayer: true } );\n            }\n            \n            updateShopcartLabel();\n            shopcartLayer.clear();\n            \n            SearchResultsMap.addFeatureCollection( current.featureCollection, {\n                layer: shopcartLayer,\n                hasBrowse: false\n            });\n            \n            current.on('change:name', updateShopcartLabel);\n            current.featureCollection.on('add:features', updateShopcartLabel );\n            current.featureCollection.on('remove:features', updateShopcartLabel );\n\n            // Change model on table when the shopcart is changed\n            current.loadContent();\n\n            // Store as user preference\n            UserPrefs.save(\"Current shopcart\", current.id);\n        });\n    },\n\n    /**\n     *  Render\n     */\n    render: function() {\n        this.$el.html(shopcartViewContent_template())\n                .trigger(\"create\");\n    }\n});\n\nmodule.exports = ShopcartView;","/**\r\n * export widget module\r\n * Used to display the supported export formats. \r\n */\r\n\r\nvar Configuration = require('configuration');\r\nvar ShopcartExportView = require('shopcart/view/shopcartExportView');\r\nvar ngeoWidget = require('ui/widget');\r\n\r\n\r\nvar ShopcartExportWidget = function() {\r\n\r\n\tvar parentElement = $('<div id=\"exportShopcartPopup\">');\r\n\tvar element = $('<div id=\"exportShopcartPopupContent\"></div>');\r\n\telement.css('min-width', '200px');\r\n\telement.appendTo(parentElement);\r\n\tparentElement.appendTo('.ui-page-active');\r\n\tparentElement.ngeowidget({\r\n\t\ttitle: \"Export Shopcart\",\r\n\t\t// Reinit the standing order when the widget is closed (FL: is it really needed?)\r\n\t\thide: function() {\r\n\t\t\tparentElement.remove();\r\n\t\t}\r\n\t});\r\n\r\n\tvar exportView = new ShopcartExportView({\r\n\t\tel: element\r\n\t});\r\n\r\n\t/**\r\n\t *\tOpen the popup\r\n\t */\r\n\tthis.open = function() {\r\n\r\n\t\texportView.render();\r\n\r\n\t\t//trigger jqm styling\r\n\t\tparentElement.ngeowidget(\"show\");\r\n\t};\r\n\r\n\t/**\r\n\t *\tFor the moment not used since the popup can be \r\n\t *\tclosed by clicking out side its content.\r\n\t */\r\n\tthis.close = function() {\r\n\t\tparentElement.ngeowidget(\"hide\");\r\n\t};\r\n};\r\n\r\nmodule.exports = ShopcartExportWidget;","/**\n * ShopcartWidget module\n */\n\nvar ShopcartCollection = require('shopcart/model/shopcartCollection');\nvar ShopcartTableView = require('shopcart/view/shopcartItemView');\nvar PanelManager = require('ui/panelManager');\nvar ngeoWidget = require('ui/widget');\n\n\nmodule.exports = {\n\n\tcreate: function() {\n\n\t\t// Create the shopcart content view\n\t\tvar shopcartTableView = new ShopcartTableView();\n\n\t\t// Add the shopcart table to the bottom panel \n\t\tPanelManager.addPanelContent({\n\t\t\telement: shopcartTableView.$el,\n\t\t\tposition: 'bottom',\n\t\t\tactivator: '#shopcart',\n\t\t\tshow: $.proxy(shopcartTableView.onShow, shopcartTableView),\n\t\t\thide: $.proxy(shopcartTableView.onHide, shopcartTableView)\n\t\t});\n\n\t\t// Manage panel size\n\t\tshopcartTableView.$el.on('panel:show', $.proxy(shopcartTableView.onShow, shopcartItemView));\n\t\tshopcartTableView.$el.on('panel:hide', $.proxy(shopcartTableView.onHide, shopcartItemView));\n\t\tshopcartItemView.on(\"sizeChanged\", function() {\n\t\t\tPanelManager.updatePanelSize('bottom');\n\t\t});\n\n\t\tshopcartTableView.listenTo(ShopcartCollection, 'change:current', shopcartItemView.setShopcart);\n\n\t\tshopcartTableView.render();\n\n\t\t// Manage error on shopcart collection fetch\n\t\t// Desactive the shopcart widget : cannot access to shopcart !\n\t\t$('#shopcart').addClass('ui-disabled');\n\t\tShopcartCollection.on('error', function() {\n\t\t\t$('#shopcart').addClass('ui-disabled');\n\t\t});\n\t\tShopcartCollection.on('sync', function() {\n\t\t\t$('#shopcart').removeClass('ui-disabled');\n\t\t});\n\n\t\t// load the shopcart collection to display the current shopcart in the data services area\n\t\tShopcartCollection.fetch();\n\n\t\treturn shopcartTableView.$el;\n\t},\n\n\t/**\n\t * Update the shopcart item view whene the share shopcart is triggered.\n\t * @returns\n\t */\n\tupdateView: function() {\n\t\tshopcartTableView.onShow();\n\t}\n\n};","\r\n/*\r\n* define([\"jquery.mobile\"]\r\n*/\r\n\t\r\n/**\r\n * The tooltip used to display context help\r\n */\r\nvar tooltip;\r\n\r\n/**\r\n * Margin used by tooltip\r\n */\r\nvar topMargin = 10;\r\n\r\n/**\r\n * Margin used by tooltip\r\n */\r\nvar startContent = \"Mouse over interface elements for context help.\";\r\n\r\n/**\r\n * Current state of help component\r\n */\r\nvar helpActivated = false;\r\n\r\n/**\r\n * Place the tooltip for context help\r\n */\r\nvar placeTooltip = function (element) {\r\n\ttooltip.show();\r\n\t// Two cases : tooltip is attached to an element or not\r\n\tif (!element) {\r\n\t\t// Center the tooltip\r\n\t\ttooltip.find('p').html( startContent );\r\n\t\tvar offset = {\r\n\t\t\ttop: $(window).height()/2 - tooltip.outerHeight()/2,\r\n\t\t\tleft: $(window).width()/2 - tooltip.outerWidth()/2\r\n\t\t};\r\n\t\ttooltip.offset(offset);\r\n\t} else {\r\n\t\t// Place the tooltip just below the element\r\n\t\tvar $element = $(element);\r\n\t\ttooltip.find('p').html( $element.data('help') );\r\n\t\tvar offset = {\r\n\t\t\ttop: $element.offset().top + $element.outerHeight(),\r\n\t\t\tleft: $element.offset().left + $element.outerWidth()/2 - tooltip.outerWidth()/2\r\n\t\t};\r\n\t\ttooltip.offset(offset);\r\n\t}\r\n};\r\n\r\n/**\r\n *\tLazy hide function which debounces after 500ms\r\n *\tHides tooltip depending on hide boolean\r\n */\r\nvar lazyHide = _.debounce(function(hide) {\r\n\tif ( hide ) {\r\n\t\ttooltip.hide();\r\n\t} else {\r\n\t\tlazyHide(hide);\r\n\t}\r\n}, 500)\r\n\r\n/**\r\n * Handler to show help tooltip for elements containing \"data-help\" attribute\r\n * Checks the target element and its parent\r\n */\r\nvar onElementHelpClicked = function(event) {\r\n\t// OLD code to store data-help on tb-icon, discarded by NGEO-2003\r\n\t// var helpTarget = $(event.target).is('[data-help]') ? event.target : $(event.target.parentElement).is('[data-help]') ? event.target.parentElement : null;\r\n\t// if ( helpTarget ) {\r\n\t// \tplaceTooltip(helpTarget);\r\n\tif ( helpActivated && !$(event.target).closest('#help').length ) {\r\n\t\tvar helpTarget = $(event.target).is('[data-help]') ? $(event.target) : $(event.target).closest('[data-help]');\r\n\t\tif ( helpTarget.length ) {\r\n\t\t\tplaceTooltip( helpTarget );\r\n\t\t}\r\n\t\tevent.stopPropagation();\r\n\t\tevent.preventDefault();\r\n\t\treturn false;\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\n\r\n/**\r\n * Handler to show help tooltip for elements containing \"data-help\" attribute\r\n * Checks the target element and its parent\r\n */\r\nvar onElementHelpOver = function(event) {\r\n\t//var helpTarget = $(event.target).is('[data-help]') ? event.target : $(event.target.parentElement).is('[data-help]') ? event.target.parentElement : null;\r\n\tvar helpTarget = $(event.target).is('[data-help]') ? $(event.target) : $(event.target).closest('[data-help]');\r\n\tif ( helpTarget ) {\r\n\t\tplaceTooltip( helpTarget );\r\n\t\tlazyHide(false);\r\n\t\tevent.stopPropagation();\r\n\t\tevent.preventDefault();\r\n\t\treturn false;\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\n\r\nmodule.exports = function(element) {\r\n\r\n\t// Add the tooltip element\r\n\ttooltip = $('<div class=\"helpTooltip ui-popup-container ui-popup-active\">\\\r\n\t\t\t\t\t<div class=\"ui-popup ui-overlay-shadow ui-corner-all ui-body-e\"><p></p>\\\r\n\t\t\t\t\t</div></div>').appendTo(element);\r\n\t// Increment the z-index, 1100 is for widget and popup, 1101 for icons in the popup (close button)\r\n\t// So 1102 is used for context help tooltip to be always above\r\n\ttooltip.css(\"z-index\", 1102 );\r\n\ttooltip.hide();\r\n\t\r\n\tvar hideTooltip = function(event) {\r\n\t\tif ( $(event.target).closest('.helpTooltip').length || $(event.target).is('[data-help]') || $(event.target).closest('[data-help]').length ) {\r\n\t\t\t// Do not hide tooltip while the mouse is over tooltip or help\r\n\t\t\tlazyHide(false);\r\n\t\t} else {\r\n\t\t\t// Hide it otherwise\r\n\t\t\tlazyHide(true);\r\n\t\t}\r\n\t}\r\n\r\n\t// Setup behavioir when the context help button is clicked\r\n\t$(\"#help\").click( function() {\r\n\t\tvar $this = $(this);\r\n\t\tif ( $this.hasClass('toggle') ) {\r\n\t\t\ttooltip.hide();\r\n\t\t\t$this.removeClass('toggle');\r\n\t\t\t$('[data-help]').removeClass('helpActivated');\r\n\t\t\t$('[data-help]').off(\"mouseover\", onElementHelpOver);\r\n\t\t\t$('body').off(\"mousemove\", hideTooltip)\r\n\t\t\t$('body').get(0).removeEventListener(\"click\", onElementHelpClicked, true );\r\n\t\t} else {\r\n\t\t\ttooltip.show();\r\n\t\t\tplaceTooltip();\r\n\t\t\t$('[data-help]').addClass('helpActivated');\r\n\t\t\t$('[data-help]').on(\"mouseover\", onElementHelpOver);\r\n\t\t\t$('body').on(\"mousemove\", hideTooltip);\r\n\t\t\t$('body').get(0).addEventListener(\"click\", onElementHelpClicked, true );\r\n\t\t\t$this.addClass('toggle');\r\n\t\t}\r\n\t\thelpActivated = !helpActivated;\r\n\t\t\r\n\t});\r\n};\r\n","/**\r\n * define(['jquery','jquery.mobile','externs/jquery.mousewheel'], function($) {\r\n */\r\n \r\n// Helper functions\r\nfunction getDaysBetween(date1, date2) {\r\n\treturn Math.floor((date1 - date2) / 86400000);\r\n};\r\n\r\nfunction pad(num, size) {\r\n\tvar s = num + \"\";\r\n\twhile (s.length < size) s = \"0\" + s;\r\n\treturn s;\r\n}\r\n\r\n// For month representation\r\nvar monthArray = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n/**\r\n * The date slider\r\n */\r\n$.widget(\"ui.dateRangeSlider\", {\r\n\t// default options\r\n\toptions: {\r\n\t\t// parameters\r\n\t\tscaleBounds: null,\r\n\t\tbounds: null,\r\n\t\tboundsMaxLength: 180, // 3 months\r\n\t\tboundsMinLength: 10, // 10 days\r\n\t\twheelFactor: 7,\r\n\t\twheelTimeout: 1000,\r\n\r\n\t\t// events\r\n\t\tchange: $.noop\r\n\t},\r\n\r\n\t// the constructor\r\n\t_create: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis.scalePosition = 0;\r\n\r\n\t\t// Create left and right arrows\r\n\t\tthis.rightArrow = $('<div style=\"display: none;\" class=\"dateSlider-rightArrow\"></div>')\r\n\t\t\t.appendTo(this.element)\r\n\t\t\t.mousedown(function(event) {\r\n\t\t\t\tself.autoScaleDirection = self.options.wheelFactor;\r\n\t\t\t\tsetTimeout($.proxy(self._autoScaleScroll, self), 50);\r\n\t\t\t})\r\n\t\t\t.mouseup($.proxy(this._onArrowMouseUp, this));\r\n\r\n\t\tthis.leftArrow = $('<div style=\"display: none;\" class=\"dateSlider-leftArrow\"></div>')\r\n\t\t\t.appendTo(this.element)\r\n\t\t\t.mousedown(function(event) {\r\n\t\t\t\tself.autoScaleDirection = -self.options.wheelFactor;\r\n\t\t\t\tsetTimeout($.proxy(self._autoScaleScroll, self), 50);\r\n\t\t\t})\r\n\t\t\t.mouseup($.proxy(this._onArrowMouseUp, this));\r\n\r\n\r\n\t\t// Create the bar that defines the date range\r\n\t\tthis.dragBar = $('<div style=\"display: none;\" class=\"dateSlider-bar\"></div>')\r\n\t\t\t.appendTo(this.element)\r\n\t\t\t.mousedown(function(event) {\r\n\t\t\t\t$(document).on('mousemove', {\r\n\t\t\t\t\tlastX: event.pageX\r\n\t\t\t\t}, $.proxy(self._onDragBar, self));\r\n\t\t\t\t$(document).on('mouseup', $.proxy(self._onDragBarStop, self));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t});\r\n\r\n\t\t// Create the labels of the start and end date\r\n\t\tthis.startLabel = $('<div style=\"display: none;\" class=\"dateSlider-label\"></div>')\r\n\t\t\t.appendTo(this.element)\r\n\t\t\t.mousedown(function(event) {\r\n\t\t\t\t$(document).on('mousemove', {\r\n\t\t\t\t\tlastX: event.pageX\r\n\t\t\t\t}, $.proxy(self._moveLeftDrag, self));\r\n\t\t\t\t$(document).one('mouseup', function() {\r\n\t\t\t\t\t$(document).off('mousemove', $.proxy(self._moveLeftDrag, self));\r\n\t\t\t\t\tself.options.change(self._computeCurrentDate());\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\tthis.endLabel = $('<div style=\"display: none;\" class=\"dateSlider-label\"></div>')\r\n\t\t\t.appendTo(this.element)\r\n\t\t\t.mousedown(function(event) {\r\n\t\t\t\t$(document).on('mousemove', {\r\n\t\t\t\t\tlastX: event.pageX\r\n\t\t\t\t}, $.proxy(self._moveRightDrag, self));\r\n\t\t\t\t$(document).one('mouseup', function() {\r\n\t\t\t\t\t$(document).off('mousemove', $.proxy(self._moveRightDrag, self));\r\n\t\t\t\t\tself.options.change(self._computeCurrentDate());\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t// Create a container for the scale bar, needed to manage scrolling\r\n\t\tthis.container = $('<div class=\"dateSlider-container\"></div>').appendTo(this.element);\r\n\t\tthis.marginLeft = parseInt(this.container.css('marginLeft'));\r\n\r\n\t\t// Create the scale bar\r\n\t\tthis._createScaleBar();\r\n\r\n\t\t// Get the initial scale postion\r\n\t\tthis.scalePosition = this.container.scrollLeft();\r\n\r\n\t\tthis.wheelTimeoutVar = null;\r\n\t\tthis.element.on(\"mousewheel\", $.proxy(this._onMouseWheel, this));\r\n\r\n\t\t// Cache the container width\r\n\t\tthis.containerWidth = this.container.width();\r\n\r\n\t\t// Initialize dragging\r\n\t\tthis._updateDragBar();\r\n\r\n\t\t// Add events\r\n\t\t_.extend(this, Backbone.Events);\r\n\t},\r\n\r\n\t// Refresh the date range slider when container width have changed\r\n\trefresh: function(force) {\r\n\t\tvar cw = this.container.width();\r\n\t\tif (cw != this.containerWidth || force) {\r\n\t\t\tthis.containerWidth = cw;\r\n\t\t\t// Get the scale position\r\n\t\t\tthis.scalePosition = this.container.scrollLeft();\r\n\t\t\tif (this.scalePosition + cw > this.maxDays) {\r\n\t\t\t\tthis.scalePosition = this.maxDays - cw;\r\n\t\t\t\tthis.container.scrollLeft(this.scalePosition);\r\n\t\t\t}\r\n\t\t\t// Update the drag bar\r\n\t\t\tthis._moveDrag(0);\r\n\t\t}\r\n\t},\r\n\r\n\t// Call when mouse up on an arrow\r\n\t_onArrowMouseUp: function() {\r\n\t\tthis.autoScaleDirection = 0;\r\n\t\tthis.options.change(this._computeCurrentDate());\r\n\t},\r\n\r\n\t// On mouse wheel event handler\r\n\t_onMouseWheel: function(event, delta) {\r\n\r\n\t\tthis._moveDrag(delta * this.options.wheelFactor);\r\n\r\n\t\t// Call change after a few milliseconds\r\n\t\tif (this.options.change) {\r\n\t\t\tif (this.wheelTimeoutVar) {\r\n\t\t\t\tclearTimeout(this.wheelTimeoutVar);\r\n\t\t\t}\r\n\t\t\tvar self = this;\r\n\t\t\tthis.wheelTimeoutVar = setTimeout(function() {\r\n\t\t\t\tself.options.change(self._computeCurrentDate());\r\n\t\t\t\tself.wheelTimeoutVar = null;\r\n\t\t\t}, this.options.wheelTimeout);\r\n\t\t}\r\n\t},\r\n\r\n\t// Update the drag bar position\r\n\t_updateDragBar: function() {\r\n\t\tthis.dragLeftDays = getDaysBetween(this.options.bounds.min, this.minDate);\r\n\t\tthis.dragRightDays = getDaysBetween(this.options.bounds.max, this.minDate);\r\n\r\n\t\t// Check if length is valid, otherwise modify it\r\n\t\tvar boundsLength = this.dragRightDays - this.dragLeftDays;\r\n\t\tif (boundsLength > this.options.boundsMaxLength) {\r\n\t\t\tthis.dragLeftDays = this.dragRightDays - this.options.boundsMaxLength;\r\n\t\t\t//this.options.change( this._computeCurrentDate() ); \r\n\t\t} else if (boundsLength < this.options.boundsMinLength) {\r\n\t\t\tthis.dragLeftDays = this.dragRightDays - this.options.boundsMinLength;\r\n\t\t\t//this.options.change( this._computeCurrentDate() ); \r\n\t\t}\r\n\r\n\t\tthis.dragBar.width(this.dragRightDays - this.dragLeftDays);\r\n\t\tthis._moveDrag(0);\r\n\t},\r\n\r\n\t// Create the scale\r\n\t_createScaleBar: function() {\r\n\r\n\t\tthis.container.empty();\r\n\r\n\t\tvar scale = $('<div class=\"dateSlider-scale\"></div>');\r\n\r\n\t\tvar scaleMin = this.options.scaleBounds && this.options.scaleBounds.min ? this.options.scaleBounds.min : this.options.bounds.min;\r\n\t\tvar scaleMax = this.options.scaleBounds && this.options.scaleBounds.max ? this.options.scaleBounds.max : this.options.bounds.max;\r\n\r\n\t\tvar startYear = parseInt(scaleMin.getUTCFullYear());\r\n\t\tvar endYear = parseInt(scaleMax.getUTCFullYear());\r\n\r\n\t\t// // HACK : try to have the time slider big enough for the screen\r\n\t\t// if (endYear - startYear < 6) {\r\n\t\t// \tstartYear = endYear - 6;\r\n\t\t// }\r\n\t\t// Even a better HACK : currently not handle dynamically the startYear\r\n\t\t// --> some problems when dataset has been checked/unchecked, so put a const year\r\n\t\tstartYear = 1978;\r\n\r\n\t\tthis.minDate = new Date(Date.UTC(startYear, 0, 1, 0, 0, 0));\r\n\t\tvar maxDate = new Date(Date.UTC(endYear, 12, 31));\r\n\r\n\t\t// Compute the min/max days to limit the scale bar scrolling\r\n\t\tthis.maxDays = getDaysBetween(scaleMax, this.minDate);\r\n\t\tthis.minDays = getDaysBetween(scaleMin, this.minDate);\r\n\r\n\t\tvar monthDay = [\"31\", \"28\", \"31\", \"30\", \"31\", \"30\", \"31\", \"31\", \"30\", \"31\", \"30\", \"31\"];\r\n\t\tfor (var i = startYear; i <= endYear; i++) {\r\n\t\t\tvar isBissextile = ((i % 4) == 0) && ((i % 400) != 0);\r\n\t\t\tscale.append('<span class=\"dateSlider-year dateSlider-y' + (isBissextile ? 'bi' : 'n') + '\">' + i + '</span>');\r\n\t\t\tfor (var j = 2; j < 12; j++) {\r\n\t\t\t\tscale.append('<span class=\"dateSlider-month dateSlider-m' + monthDay[j] + '\">' + monthArray[j] + '</span>');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tscale.css('width', getDaysBetween(maxDate, this.minDate));\r\n\t\tscale.on('selectstart', function() {\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\t// Add it to the DOM\r\n\t\tthis.scaleBar = scale.appendTo(this.container);\r\n\t},\r\n\r\n\t// Move the left side of the drag bar\r\n\t_moveLeftDrag: function(event) {\r\n\t\tvar days = event.pageX - event.data.lastX;\r\n\t\tthis.dragLeftDays += days;\r\n\r\n\t\tif (this.dragLeftDays < this.scalePosition) {\r\n\t\t\tthis.dragLeftDays = this.scalePosition;\r\n\t\t} else if (this.dragLeftDays < this.minDays) {\r\n\t\t\tthis.dragLeftDays = this.minDays;\r\n\t\t}\r\n\r\n\t\tif (this.dragRightDays > this.dragLeftDays + this.options.boundsMaxLength) {\r\n\t\t\tthis.dragLeftDays = this.dragRightDays - this.options.boundsMaxLength;\r\n\t\t} else if (this.dragLeftDays > this.dragRightDays - this.options.boundsMinLength) {\r\n\t\t\tthis.dragLeftDays = this.dragRightDays - this.options.boundsMinLength;\r\n\t\t}\r\n\r\n\t\tthis.dragBar.width(this.dragRightDays - this.dragLeftDays);\r\n\t\tvar leftPos = this.dragLeftDays + this.marginLeft - this.scalePosition;\r\n\t\tthis.dragBar.css('left', leftPos);\r\n\r\n\t\tthis._updateLabels();\r\n\r\n\t\tevent.data.lastX = event.pageX;\r\n\r\n\t\tevent.preventDefault();\r\n\t},\r\n\r\n\t// Move the right side of the drag bar\r\n\t_moveRightDrag: function(event) {\r\n\t\tvar days = event.pageX - event.data.lastX;\r\n\t\tthis.dragRightDays += days;\r\n\r\n\t\tif (this.dragRightDays > this.scalePosition + this.containerWidth) {\r\n\t\t\tthis.dragRightDays = this.scalePosition + this.containerWidth;\r\n\t\t} else if (this.dragRightDays > this.dragLeftDays + this.options.boundsMaxLength) {\r\n\t\t\tthis.dragRightDays = this.dragLeftDays + this.options.boundsMaxLength;\r\n\t\t} else if (this.dragRightDays < this.dragLeftDays + this.options.boundsMinLength) {\r\n\t\t\tthis.dragRightDays = this.dragLeftDays + this.options.boundsMinLength;\r\n\t\t}\r\n\r\n\t\tthis.dragBar.width(this.dragRightDays - this.dragLeftDays);\r\n\r\n\t\tthis._updateLabels();\r\n\r\n\t\tevent.data.lastX = event.pageX;\r\n\r\n\t\tevent.preventDefault();\r\n\t},\r\n\r\n\t// Compute the current date\r\n\t_computeCurrentDate: function() {\r\n\t\treturn {\r\n\t\t\tmin: new Date(this.minDate.getTime() + this.dragLeftDays * 86400000),\r\n\t\t\tmax: new Date(this.minDate.getTime() + this.dragRightDays * 86400000/* + (3600 * 1000 * 24 - 1)*/)\r\n\t\t};\r\n\t},\r\n\r\n\t// Format a date\r\n\t_formatDate: function(date) {\r\n\t\treturn pad(date.getUTCDate(), 2) + \"-\" + pad(monthArray[date.getUTCMonth()], 2) + \"-\" + date.getUTCFullYear();\r\n\t},\r\n\r\n\t// Update date labels\r\n\t_updateLabels: function() {\r\n\r\n\t\tvar bounds = this._computeCurrentDate();\r\n\t\t// Update text\r\n\t\tthis.startLabel.html(this._formatDate(bounds.min));\r\n\t\tthis.endLabel.html(this._formatDate(bounds.max));\r\n\r\n\t\t//console.log(\"Updating to [\" + bounds.min + \" \" + bounds.max +\" ]\");\r\n\r\n\t\t// Compute label position\r\n\t\tvar leftPos = this.dragLeftDays + this.marginLeft - this.scalePosition;\r\n\t\tvar rightPos = this.dragRightDays + this.marginLeft - this.scalePosition;\r\n\r\n\t\tvar startLeft = leftPos - this.startLabel.outerWidth() / 2;\r\n\t\tvar endLeft = rightPos - this.endLabel.outerWidth() / 2;\r\n\t\tif (startLeft + this.startLabel.outerWidth() > endLeft) {\r\n\t\t\tendLeft = leftPos + this.dragBar.width() / 2 + 1;\r\n\t\t\tstartLeft = endLeft - 2 - this.startLabel.outerWidth();\r\n\t\t}\r\n\r\n\t\tthis.startLabel.css({\r\n\t\t\t'left': startLeft,\r\n\t\t\t'top': -this.startLabel.outerHeight()\r\n\t\t});\r\n\t\tthis.endLabel.css({\r\n\t\t\t'left': endLeft,\r\n\t\t\t'top': -this.startLabel.outerHeight()\r\n\t\t});\r\n\t},\r\n\r\n\t// Move the drag given the days number\r\n\t_moveDrag: function(days) {\r\n\r\n\t\tif (this.dragLeftDays + days <= this.minDays) {\r\n\t\t\tthis.dragRightDays += this.minDays - this.dragLeftDays;\r\n\t\t\tthis.dragLeftDays = this.minDays;\r\n\t\t\t$('.dateSlider-leftArrow').addClass('ui-disabled');\r\n\t\t} else if (this.dragRightDays + days >= this.maxDays) {\r\n\t\t\tthis.dragLeftDays += this.maxDays - this.dragRightDays;\r\n\t\t\tthis.dragRightDays = this.maxDays;\r\n\t\t\t$('.dateSlider-rightArrow').addClass('ui-disabled');\r\n\t\t} else {\r\n\t\t\t$('.dateSlider-leftArrow').removeClass('ui-disabled');\r\n\t\t\t$('.dateSlider-rightArrow').removeClass('ui-disabled');\r\n\t\t\tthis.dragLeftDays += days;\r\n\t\t\tthis.dragRightDays += days;\r\n\t\t}\r\n\r\n\t\tvar scaleDelta = 0.0;\r\n\t\tif (this.dragRightDays > this.scalePosition + this.containerWidth) {\r\n\t\t\tscaleDelta = this.dragRightDays - (this.scalePosition + this.containerWidth);\r\n\t\t} else if (this.dragLeftDays < this.scalePosition) {\r\n\t\t\tscaleDelta = this.dragLeftDays - this.scalePosition;\r\n\t\t}\r\n\r\n\t\tif (scaleDelta != 0.0) {\r\n\t\t\tthis.scalePosition += scaleDelta;\r\n\t\t\tthis.container.scrollLeft(this.scalePosition);\r\n\t\t}\r\n\r\n\t\tvar leftPos = this.dragLeftDays + this.marginLeft - this.scalePosition;\r\n\r\n\t\tthis.dragBar.css('left', leftPos);\r\n\r\n\t\tthis._updateLabels();\r\n\t},\r\n\r\n\t// To animate scale scrolling\r\n\t_autoScaleScroll: function() {\r\n\t\tif (this.autoScaleDirection != 0.0) {\r\n\t\t\tthis._moveDrag(this.autoScaleDirection);\r\n\t\t\tsetTimeout($.proxy(this._autoScaleScroll, this), 50);\r\n\t\t}\r\n\t},\r\n\r\n\t// Called when dragging the bar\r\n\t_onDragBar: function(event) {\r\n\t\tvar rightBlock = (this.dragRightDays == this.scalePosition + this.containerWidth) && event.pageX > event.data.lastX;\r\n\t\tvar leftBlock = (this.dragLeftDays == this.scalePosition) && event.pageX < event.data.lastX;\r\n\r\n\t\tif (!rightBlock && !leftBlock) {\r\n\t\t\tthis._moveDrag(event.pageX - event.data.lastX);\r\n\t\t\tevent.data.lastX = event.pageX;\r\n\t\t\tthis.autoScaleDirection = 0.0;\r\n\t\t} else {\r\n\t\t\tthis.autoScaleDirection = rightBlock ? this.options.wheelFactor : -this.options.wheelFactor;\r\n\t\t\tsetTimeout($.proxy(this._autoScaleScroll, this), 50);\r\n\t\t}\r\n\t},\r\n\r\n\t// Called when the dragging the bar is stopped\r\n\t_onDragBarStop: function(event) {\r\n\t\tthis.autoScaleDirection = 0.0;\r\n\t\t$(document).off('mousemove', $.proxy(this._onDragBar, this));\r\n\t\t$(document).off('mouseup', $.proxy(this._onDragBarStop, this));\r\n\r\n\t\tthis.options.change(this._computeCurrentDate());\r\n\t},\r\n\r\n\t// revert other modifications here\r\n\t_destroy: function() {\r\n\t\tthis.element.empty();\r\n\t\tthis.element.off(\"mousewheel\", $.proxy(this._onMouseWheel, this));\r\n\t},\r\n\r\n\t// _setOptions is called with a hash of all options that are changing\r\n\t// always refresh when changing options\r\n\t_setOptions: function() {\r\n\t\t// in 1.9 would use _superApply\r\n\t\t$.Widget.prototype._setOptions.apply(this, arguments);\r\n\t\t// TODO : refresh?\r\n\t},\r\n\r\n\t/**\r\n\t *\tShow date range slider by animating the height\r\n\t */\r\n\tshow: function(callback){\r\n\t\tvar self = this;\r\n\t\tif ( !self.element.height() ) {\r\n\t\t\t$(self.element).trigger('drs:show', []);\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tself.element.animate({\r\n\t\t\t\t\theight: 24\r\n\t\t\t\t}, 400, function() {\r\n\t\t\t\t\t$(self.element).find('> div').show();\r\n\t\t\t\t\tself.refresh(true);\r\n\t\t\t\t\tself.trigger(\"drs:show\");\r\n\t\t\t\t});\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tHide date range slider by animating the height\r\n\t */\r\n\thide: function(callback){\r\n\t\tvar self = this;\r\n\t\tif ( self.element.height() ) {\r\n\t\t\t$(self.element).trigger('drs:hide', []);\r\n\t\t\tthis.element.stop(true,true).animate({\r\n\t\t\t\theight: 0\r\n\t\t\t}, 400, function(){\r\n\t\t\t\tif ( callback )\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t$(self.element).find('> div').not('.dateSlider-container').hide();\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t// _setOptions is called with a hash of all options that are changing\r\n    // always refresh when changing options\r\n    _setOptions: function() {\r\n    \t// _super and _superApply handle keeping the right this-context\r\n\t\tthis._superApply( arguments );\r\n\t\tthis.refresh();\r\n\t},\r\n\r\n\t// _setOption is called for each individual option that is changing\r\n\t_setOption: function(key, value) {\r\n\r\n\t\tswitch (key) {\r\n\t\t\tcase 'bounds':\r\n\t\t\t\tif (value.min != this.options.bounds.min || value.max != this.options.bounds.max) {\r\n\t\t\t\t\tthis.options.bounds = value;\r\n\t\t\t\t\tthis.scalePosition = this.scalePosition = this.container.scrollLeft();\r\n\t\t\t\t\tthis._updateDragBar();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'scaleBounds':\r\n\t\t\t\tthis.options.scaleBounds = value;\r\n\t\t\t\tthis._createScaleBar();\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\t// in 1.9 would use _super\r\n\t\t$.Widget.prototype._setOption.call(this, key, value);\r\n\r\n\t}\r\n});","var Configuration = require('configuration');\r\nvar Map = require('map/map');\r\n\r\nvar monthDay = [\"31\", \"28\", \"31\", \"30\", \"31\", \"30\", \"31\", \"31\", \"30\", \"31\", \"30\", \"31\"];\r\n\r\n/**\r\n * A view to display a gantt chart.\r\n * The model contains a feature collection\r\n */\r\nvar GanttView = Backbone.View.extend({\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * Connect to model change\r\n\t */\r\n\tinitialize: function(options) {\r\n\t\tthis.scale = 'quarter-day';\r\n\t},\r\n\r\n\tid: 'ganttView',\r\n\r\n\t/**\r\n\t * Manage events on the view\r\n\t */\r\n\tevents: {\r\n\t\t'change input[name=radio-time-scale]': function(event) {\r\n\t\t\tthis.scale = event.currentTarget.value;\r\n\t\t\tif (this.model.features.length > 0) {\r\n\t\t\t\tthis.clear();\r\n\t\t\t\tthis.addData(this.model.features);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Set the model on the gantt view\r\n\t */\r\n\tsetModel: function(model) {\r\n\t\tif (this.model) {\r\n\t\t\tthis.stopListening(this.model);\r\n\t\t}\r\n\r\n\t\tthis.model = model;\r\n\r\n\t\tif (this.model) {\r\n\t\t\tthis.listenTo(this.model, \"reset:features\", this.clear);\r\n\t\t\tthis.listenTo(this.model, \"add:features\", this.addData);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Clear the gantt chart\r\n\t */\r\n\tclear: function() {\r\n\t\tthis.$el.find('.gantt-data-panel').detach();\r\n\t\tthis.$el.append('<div class=\"gantt-data-panel\"><div class=\"gantt-nodata\">No data to display</div></div>');\r\n\t},\r\n\r\n\t/**\r\n\t * Add data to gantt chart\r\n\t */\r\n\taddData: function(features) {\r\n\r\n\t\tif (features.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.$el.find('.gantt-data-panel').empty();\r\n\r\n\t\tvar minDate = Configuration.getMappedProperty(features[0], \"start\");\r\n\t\tvar maxDate = Configuration.getMappedProperty(features[0], \"stop\");\r\n\r\n\t\tfor (var i = 1; i < features.length; i++) {\r\n\r\n\t\t\tif (Configuration.getMappedProperty(features[i], \"start\") < minDate) {\r\n\t\t\t\tminDate = Configuration.getMappedProperty(features[i], \"start\");\r\n\t\t\t}\r\n\r\n\t\t\tif (Configuration.getMappedProperty(features[i], \"stop\") > maxDate) {\r\n\t\t\t\tmaxDate = Configuration.getMappedProperty(features[i], \"stop\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.buildTable(Date.fromISOString(minDate), Date.fromISOString(maxDate), features.length);\r\n\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tthis.addBar(features[i]);\r\n\t\t}\r\n\r\n\t\tthis.$el.find('.gantt-body-scroll').scrollLeft(this.$el.find('table').width());\r\n\t},\r\n\r\n\t/**\r\n\t * Show the table\r\n\t */\r\n\tshow: function() {\r\n\t\tthis.$el.show();\r\n\t},\r\n\r\n\t/**\r\n\t * Hide the table\r\n\t */\r\n\thide: function() {\r\n\t\tthis.$el.hide();\r\n\t},\r\n\r\n\t/**\r\n\t * Build the day scale\r\n\t */\r\n\tbuildDayScale: function(start, end) {\r\n\r\n\t\tvar date = new Date(start.getFullYear(), start.getMonth(), 1, 0, 0, 0, 0);\r\n\t\tthis.startDate = new Date(start.getFullYear(), start.getMonth(), 1, 0, 0, 0, 0);\r\n\r\n\t\tvar $rowUp = $('<tr>');\r\n\t\tvar $rowDown = $('<tr class=\"gantt-head-20\">');\r\n\t\twhile (date < end) {\r\n\r\n\t\t\t$rowUp.append('<th colspan=\"' + monthDay[date.getMonth()] + '\">' + (date.getMonth() + 1) + '/' + date.getFullYear() + '</th>');\r\n\t\t\tfor (var i = 0; i < monthDay[date.getMonth()]; i++) {\r\n\t\t\t\t$rowDown.append('<th>' + (i + 1) + '</th>');\r\n\t\t\t}\r\n\t\t\tdate = new Date(date.getTime() + monthDay[date.getMonth()] * 24 * 3600 * 1000);\r\n\t\t}\r\n\r\n\t\treturn $('<thead>').append($rowUp).append($rowDown);\r\n\t},\r\n\r\n\t/**\r\n\t * Build the quarter-day scale\r\n\t */\r\n\tbuildQuarterDayScale: function(start, end) {\r\n\r\n\t\tvar date = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 0, 0, 0, 0);\r\n\t\tthis.startDate = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 0, 0, 0, 0);\r\n\r\n\t\tvar $rowUp = $('<tr>');\r\n\t\tvar $rowDown = $('<tr class=\"gantt-head-60\">');\r\n\t\twhile (date < end) {\r\n\r\n\t\t\t$rowUp.append('<th colspan=\"4\">' + date.toDateString() + '</th>');\r\n\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t$rowDown.append('<th>' + i * 6 + '-' + (i + 1) * 6 + '</th>');\r\n\t\t\t}\r\n\t\t\tdate = new Date(date.getTime() + 24 * 3600 * 1000);\r\n\t\t}\r\n\r\n\t\treturn $('<thead>').append($rowUp).append($rowDown);\r\n\t},\r\n\r\n\t/**\r\n\t * Build the hour scale\r\n\t */\r\n\tbuildHourScale: function(start, end) {\r\n\r\n\t\tvar date = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 0, 0, 0, 0);\r\n\t\tthis.startDate = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 0, 0, 0, 0);\r\n\r\n\t\tvar $rowUp = $('<tr>');\r\n\t\tvar $rowDown = $('<tr class=\"gantt-head-20\">');\r\n\t\twhile (date < end) {\r\n\r\n\t\t\t$rowUp.append('<th colspan=\"24\">' + date.toDateString() + '</th>');\r\n\t\t\tfor (var i = 0; i < 24; i++) {\r\n\t\t\t\t$rowDown.append('<th>' + i + '</th>');\r\n\t\t\t}\r\n\t\t\tdate = new Date(date.getTime() + 24 * 3600 * 1000);\r\n\t\t}\r\n\r\n\t\treturn $('<thead>').append($rowUp).append($rowDown);\r\n\t},\r\n\r\n\t/**\r\n\t * Build the minute scale\r\n\t */\r\n\tbuildMinuteScale: function(start, end, step) {\r\n\r\n\t\tvar date = new Date(start.getFullYear(), start.getMonth(), start.getDate(), start.getHours() + (start.getTimezoneOffset() / 60), 0, 0, 0);\r\n\t\tvar end2 = new Date(end.getFullYear(), end.getMonth(), end.getDate(), end.getHours() + (start.getTimezoneOffset() / 60), end.getMinutes(), end.getSeconds(), end.getMilliseconds());\r\n\t\tthis.startDate = new Date(start.getFullYear(), start.getMonth(), start.getDate(), start.getHours() + (start.getTimezoneOffset() / 60), 0, 0, 0);\r\n\r\n\t\tvar $rowUp = $('<tr>');\r\n\t\tvar $rowDown = $('<tr class=\"gantt-head-20\">');\r\n\t\twhile (date < end2) {\r\n\r\n\t\t\t$rowUp.append('<th colspan=\"' + (60 / step) + '\">' + date.toISODateString() + ' ' + date.getHours() + 'h</th>');\r\n\t\t\tfor (var i = 0; i < 60; i += step) {\r\n\t\t\t\t$rowDown.append('<th>' + i + '</th>');\r\n\t\t\t}\r\n\t\t\tdate = new Date(date.getTime() + 3600 * 1000);\r\n\t\t}\r\n\r\n\t\treturn $('<thead>').append($rowUp).append($rowDown);\r\n\t},\r\n\r\n\t/**\r\n\t * Get the position of a date in the gantt chart\r\n\t * Depends of the chosen scale\r\n\t */\r\n\tgetPosition: function(date) {\r\n\t\tvar diff = date - this.startDate + (date.getTimezoneOffset() * 60 * 1000);\r\n\t\tif (this.scale == 'day') {\r\n\t\t\treturn (21 * diff) / (3600 * 1000 * 24);\r\n\t\t} else if (this.scale == 'quarter-day') {\r\n\t\t\treturn (61 * diff) / (3600 * 1000 * 6);\r\n\t\t} else if (this.scale == 'hour') {\r\n\t\t\treturn (21 * diff) / (3600 * 1000);\r\n\t\t} else if (this.scale == '10-minute') {\r\n\t\t\treturn (21 * diff) / (600 * 1000);\r\n\t\t} else if (this.scale == 'minute') {\r\n\t\t\treturn (21 * diff) / (60 * 1000);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Add a bar to the gantt chart for the given feature\r\n\t */\r\n\taddBar: function(feature) {\r\n\r\n\t\tvar start = Date.fromISOString(Configuration.getMappedProperty(feature, \"start\"));\r\n\t\tvar end = Date.fromISOString(Configuration.getMappedProperty(feature, \"stop\"));\r\n\r\n\t\tvar tooltip = \"Id : \" + feature.id + \"&#13;\";\r\n\t\ttooltip += \"Start : \" + start.toISOString() + \"&#13;\";\r\n\t\ttooltip += \"End  : \" + end.toISOString();\r\n\t\tvar $bar = $('<div title=\"' + tooltip + '\" class=\"gantt-bar\">');\r\n\t\t//var $table = this.$el.find('table');\r\n\t\tvar hh = 34; //$table.find('thead').outerHeight();\r\n\r\n\t\tvar s = this.getPosition(start);\r\n\t\tvar e = this.getPosition(end);\r\n\r\n\t\tvar numBars = this.$el.find('.gantt-body-scroll').children('.gantt-bar').length;\r\n\t\t$bar.css({\r\n\t\t\ttop: 1 + numBars * 21,\r\n\t\t\tleft: s,\r\n\t\t\twidth: e - s\r\n\t\t});\r\n\r\n\t\tvar self = this;\r\n\t\t$bar.appendTo(this.$el.find('.gantt-body-scroll'))\r\n\t\t\t// ZoomTo & highlight the selected feature\r\n\t\t\t.click(function() {\r\n\t\t\t\tif (self.model.highlight) {\r\n\t\t\t\t\tMap.zoomToFeature(feature);\r\n\t\t\t\t\tself.model.highlight([feature]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Build the table : table is used to build headers, and to have grid on body\r\n\t */\r\n\tbuildTable: function(start, end, nbRows) {\r\n\t\tvar $headTable = $('<table cellspacing=\"0\" cellpadding=\"0\">');\r\n\r\n\t\tif (this.scale == 'day') {\r\n\t\t\t$headTable.append(this.buildDayScale(start, end));\r\n\t\t}\r\n\t\tif (this.scale == 'quarter-day') {\r\n\t\t\t$headTable.append(this.buildQuarterDayScale(start, end));\r\n\t\t} else if (this.scale == 'hour') {\r\n\t\t\t$headTable.append(this.buildHourScale(start, end));\r\n\t\t} else if (this.scale == '10-minute') {\r\n\t\t\t$headTable.append(this.buildMinuteScale(start, end, 10));\r\n\t\t} else if (this.scale == 'minute') {\r\n\t\t\t$headTable.append(this.buildMinuteScale(start, end, 1));\r\n\t\t}\r\n\r\n\t\tvar nbCells = $headTable.find('thead tr:last-child').children().length;\r\n\r\n\t\tif (nbCells > 1000) {\r\n\t\t\tthis.$el.append('<div class=\"gantt-data-panel\"><div class=\"gantt-nodata\">Cannot display data for the selected time scale : ' + nbCells + ' steps needed.</div></div>');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Build rows for table\r\n\t\tvar $bodyTable = $('<table cellspacing=\"0\" cellpadding=\"0\">');\r\n\r\n\t\tvar rowStr = '<tr';\r\n\t\tif (this.scale == 'quarter-day') {\r\n\t\t\trowStr += ' class=\"gantt-body-60\"';\r\n\t\t}\r\n\t\trowStr += '>';\r\n\t\tfor (var j = 0; j < nbCells; j++) {\r\n\t\t\trowStr += '<td></td>';\r\n\t\t}\r\n\t\trowStr += '</tr>';\r\n\r\n\t\tvar tbodyStr = '<table cellspacing=\"0\" cellpadding=\"0\"><tbody>';\r\n\t\tfor (var i = 0; i < nbRows; i++) {\r\n\t\t\ttbodyStr += rowStr;\r\n\t\t}\r\n\t\ttbodyStr += '</tbody></table>';\r\n\r\n\t\tvar $headTable = $('<div class=\"gantt-head-scroll\">').append($headTable);\r\n\r\n\t\tthis.$el.find('.gantt-data-panel')\r\n\t\t\t.append($headTable)\r\n\t\t\t.append('<div class=\"gantt-body-scroll\">' + tbodyStr + '</div>');\r\n\r\n\r\n\t\t//var diffWidth = this.$el.find('.gantt-head-scroll table').width() - this.$el.find('.gantt-body-scroll table').width();\r\n\r\n\t\tvar $head = this.$el.find('.gantt-head-scroll');\r\n\t\tthis.$el.find('.gantt-body-scroll').scroll(function(event) {\r\n\t\t\t$head.scrollLeft($(this).scrollLeft());\r\n\t\t});\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Render the table\r\n\t */\r\n\trender: function() {\r\n\r\n\t\tthis.$el.addClass('gantt-view');\r\n\t\tthis.$el.append('<div class=\"gantt-left-panel\">\\\r\n\t\t<fieldset data-role=\"controlgroup\" data-mini=\"true\">\\\r\n\t\t\t\t<legend>Time scale:</legend>\\\r\n\t\t\t\t\t<label>Minute<input type=\"radio\" name=\"radio-time-scale\" value=\"minute\" /></label>\\\r\n\t\t\t\t\t<label>10 minute<input type=\"radio\" name=\"radio-time-scale\" value=\"10-minute\" /></label>\\\r\n\t\t\t\t\t<label>Hour<input type=\"radio\" name=\"radio-time-scale\" value=\"hour\" /></label>\\\r\n\t\t\t\t\t<label>Quarter day<input type=\"radio\" name=\"radio-time-scale\" value=\"quarter-day\" checked=\"checked\" /></label>\\\r\n\t\t\t\t\t<label>Day<input type=\"radio\" name=\"radio-time-scale\" value=\"day\" /></label>\\\r\n\t\t</fieldset></div>');\r\n\r\n\t\tthis.clear();\r\n\r\n\t\tthis.$el.trigger('create');\r\n\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = GanttView;","/**\r\n * MenuBar module\r\n * Manage page and module dynamic loading\r\n * Page are display above the map, with transparent background.\r\n */\r\n\r\nvar Logger = require('logger');\r\n/**\r\n * The currently active menu item\r\n */\r\nvar activeMenuItem = null;\r\n\r\n/**\r\n * The currently active page\r\n */\r\nvar activePage = null;\r\n\r\n/**\r\n * Cache for menu page content\r\n */\r\nvar pageCache = {};\r\n\r\n/**\r\n * Router used by the MenuBar\r\n */\r\nvar router = new Backbone.Router();\r\n\r\n\r\n/**\r\n * Add page content\r\n */\r\nvar addPageContent = function($link, $div) {\r\n\t// Wrap the page co\r\n\tif (!$link.data('nowrap')) {\r\n\t\t$div.children().wrapAll('<div class=\"menuBarPageContent\"></div>');\r\n\t\t$div.addClass('menuBarPage');\r\n\t}\r\n\tpageCache[$link.attr('href')] = $div;\r\n\t$div.hide();\r\n\t$('#mapContainer').prepend($div);\r\n};\r\n\r\n/**\r\n * Load a page\r\n */\r\nvar loadPage = function($link) {\r\n\r\n\tvar href = $link.attr('href');\r\n\tif ($link.data('module')) {\r\n\r\n\t\t// Load and intialize the module\r\n\t\tvar Module = require($link.data('module'));\r\n\r\n\t\t// First build the div and add it to build content\r\n\t\tvar $div = Module.buildElement();\r\n\t\taddPageContent($link, $div);\r\n\t\t$div.data('module', Module);\r\n\t\tModule.initialize($div);\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Show a page\r\n */\r\nvar _showPage = function(page) {\r\n\tpage.slideDown(200);\r\n\tactivePage = page;\r\n\tvar module = activePage.data('module');\r\n\tif (module && module.show) {\r\n\t\tmodule.show();\r\n\t}\r\n};\r\n\r\n/**\r\n * Show a link\r\n */\r\nvar showInternalLink = function(link) {\r\n\r\n\tvar linkRef = link.attr('href');\r\n\tvar page = pageCache[linkRef];\r\n\tif (page) {\r\n\t\tif (activePage) {\r\n\t\t\tvar module = activePage.data('module');\r\n\t\t\tif (module && module.hide) {\r\n\t\t\t\tmodule.hide();\r\n\t\t\t}\r\n\t\t\tactivePage.slideUp(200, function() {\r\n\t\t\t\t_showPage(page);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t_showPage(page);\r\n\t\t}\r\n\t}\r\n\r\n\t// Update active menu item\r\n\tlink.addClass('active');\r\n\tif (activeMenuItem) activeMenuItem.removeClass('active');\r\n\tactiveMenuItem = link;\r\n};\r\n\r\n/**\r\n * Callbacks call when a page content is loaded\r\n */\r\nvar onPageLoaded = function() {\r\n\t$.mobile.loading(\"hide\");\r\n\r\n\t// Start backbone history\r\n\tvar routeMatch = Backbone.history.start();\r\n\r\n\t// Go to default page if none requested\r\n\tif (!routeMatch) {\r\n\t\tvar defaut = $(\"header nav\").data(\"default\");\r\n\t\tBackbone.history.navigate(defaut, {\r\n\t\t\ttrigger: true\r\n\t\t});\r\n\t}\r\n\r\n};\r\n\r\nmodule.exports = {\r\n\t/**\r\n\t * Initialize the menubar component\r\n\t */\r\n\tinitialize: function(selector) {\r\n\r\n\t\tvar links = $(selector).find('a');\r\n\r\n\t\t// Traverse all the links and search if the div is not already contained in the main page\r\n\t\t$(selector).find('a').each(function() {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar linkRef = $this.attr('href');\r\n\r\n\t\t\t// If the link is contained in the document, process it.\r\n\t\t\tif (linkRef.charAt(0) == '#') {\r\n\r\n\t\t\t\t// Add content if aleady in the document, otherwise load the page\r\n\t\t\t\tvar jContent = $($this.attr('href'));\r\n\t\t\t\tif (jContent.length > 0) {\r\n\t\t\t\t\taddPageContent($this, jContent);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tloadPage($this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//TODO: HACK because we already have a router.route(\"data-services-area\") on dsa.js\r\n\t\t\t\t//and the router.route(\"data-services-area\") calls the showPage with parameter \"data-services-area\"\r\n\t\t\t\tif (linkRef.substr(1) != \"data-services-area\") {\r\n\t\t\t\t\t// Add a route to show the link\r\n\t\t\t\t\trouter.route(linkRef.substr(1), linkRef.substr(1), function() {\r\n\t\t\t\t\t\tshowInternalLink($this);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tonPageLoaded();\r\n\t},\r\n\r\n\t/**\r\n\t * Show a page of the menubar\r\n\t */\r\n\tshowPage: function(name) {\r\n\t\tshowInternalLink($('a[href=#' + name + ']'));\r\n\t}\r\n};","\n/**\n *\tThe model of this view is FeatureCollection\n */\nvar Pagination = Backbone.View.extend({\n\n\tinitialize: function(options) {\n\t\tif ( this.model ) {\n\t\t\tthis.setupListeners();\n\t\t\tthis.updatePagination();\n\t\t}\n\t\tthis.pagesRange = 5;\n\t},\n\n\tevents: {\n\t\t// Manage paging through buttons\n\t\t'click .first': function() {\n\t\t\tthis.model.changePage(1);\n\t\t},\n\t\t'click .last': function() {\n\t\t\tthis.model.changePage(this.model.lastPage);\n\t\t},\n\t\t'click .next': function() {\n\t\t\tthis.model.changePage(this.model.currentPage + 1);\n\t\t},\n\t\t'click .prev': function() {\n\t\t\tthis.model.changePage(this.model.currentPage - 1);\n\t\t},\n\t\t'click .pageNum': function(event) {\n\t\t\tthis.model.changePage(parseInt($(event.currentTarget).attr(\"value\")));\n\t\t}\n\t},\n\n\t/**\n\t * Called when features are added/removed\n\t */\n\tupdatePagination: function() {\n\n\t\tthis.$el.find('.pageNum').remove();\n\t\tif (parseInt(this.model.totalResults) > 0) {\n\t\t\t// Updage paging button according to the current page\n\t\t\tthis.$el.find('#globalPaging a').removeClass('ui-disabled');\n\t\t\tif (this.model.currentPage == 1) {\n\t\t\t\tthis.$el.find('.prev').addClass('ui-disabled');\n\t\t\t\tthis.$el.find('.first').addClass('ui-disabled');\n\t\t\t}\n\t\t\tif (this.model.currentPage == this.model.lastPage) {\n\t\t\t\tthis.$el.find('.next').addClass('ui-disabled');\n\t\t\t\tthis.$el.find('.last').addClass('ui-disabled');\n\t\t\t}\n\t\t\tthis.generatePages();\n\t\t} else if (this.model.totalResults == 0) {\n\t\t\tthis.$el.find('#globalPaging a').addClass('ui-disabled');\n\t\t}\n\n\t\t// Trigger is currently used only to update width of bottom datasets toolbar\n\t\t// TODO: improve behaviour with flex ?\n\t\tthis.trigger('pagination:updated');\n\t},\n\n\t/**\n\t *\tSetup listeners of FeatureCollection to updating pagination GUI\n\t */\n\tsetupListeners: function() {\n\t\tthis.listenTo(this.model, 'reset:features', this.updatePagination);\n\t\tthis.listenTo(this.model, 'add:features', this.updatePagination);\n\t\tthis.listenTo(this.model, 'error:features', function(searchUrl) {\n\t\t\tconsole.error(\"Error while retrieving features : \" + searchUrl);\n\t\t});\n\t},\n\n\t/**\n\t *\tSet model representing the view\n\t */\n\tsetModel: function(model) {\n\t\tif ( this.model ) {\n\t\t\tthis.stopListening(this.model);\n\t\t}\n\t\tthis.model = model;\n\t\tthis.setupListeners();\n\t\tthis.updatePagination();\t\t\n\t},\n\n\t/**\n\t *\tGenerate pages between \"Prev\" and \"Next\" labels\n\t */\n\tgeneratePages: function() {\n\t\tif ( this.model ) {\n\n\t\t\tvar startIndex;\n\t\t\tvar halfRange = Math.floor(this.pagesRange / 2) + 1;\n\t\t\tif ( this.model.lastPage <= this.pagesRange ) {\n\t\t\t\t// Case when the range is larger than available pages in dataset\n\t\t\t\tstartIndex = 1;\n\t\t\t\tendIndex = this.model.lastPage;\n\t\t\t} else {\n\t\t\t\tif ( this.model.currentPage <= halfRange ) {\n\t\t\t\t\t// First half start from beginning\n\t\t\t\t\tstartIndex = 1;\n\t\t\t\t} else {\n\t\t\t\t\t// Nominal case : compute from current page\n\t\t\t\t\tstartIndex = this.model.currentPage - (halfRange - 1);\n\t\t\t\t}\n\n\t\t\t\tif ( this.model.currentPage + halfRange > this.model.lastPage )\n\t\t\t\t{\n\t\t\t\t\t// Almost at the end so clamp it by last page\n\t\t\t\t\tendIndex = this.model.lastPage;\n\t\t\t\t} else {\n\t\t\t\t\t// Nominal case : compute from current page\n\t\t\t\t\tendIndex = this.model.currentPage + (halfRange - 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( var i=startIndex; i <= endIndex; i++ ) {\n\t\t\t\tthis.$el.find('.next').before('<a class=\"pageNum\" data-role=\"button\" value=\"'+i+'\">'+i+'</a>');\n\t\t\t}\n\t\t\tthis.$el.find('.pageNum[value=\"'+ this.model.currentPage +'\"]').addClass('ui-btn-active');\n\t\t\tthis.$el.trigger(\"create\");\n\n\t\t}\n\t},\n\n\t/**\n\t *\tRender\n\t */\n\trender: function() {\n\t\tvar content = '<div id=\"globalPaging\" style=\"text-align: center; margin: 4px 15px;\" data-role=\"controlgroup\" data-type=\"horizontal\" data-mini=\"true\">\\\n\t\t\t<a class=\"first\" data-role=\"button\"><<</a>\\\n\t\t\t<a class=\"prev\" data-role=\"button\"><</a>\\\n\t\t\t<a class=\"next\" data-role=\"button\">></a>\\\n\t\t\t<a class=\"last\" data-role=\"button\">>></a>\\\n\t\t</div>';\n\t\tthis.$el.html(content).trigger(\"create\");\n\t\tthis.$el.find(\"a\").addClass(\"ui-disabled\");\n\t\tif ( this.model ) {\n\t\t\tthis.updatePagination();\n\t\t}\n\t}\n\n});\n\nmodule.exports = Pagination;","/**\r\n * The PanelManager manages a view with different panels : left, top, center, bottom...\r\n */\r\nvar PanelManager = Backbone.View.extend({\r\n\r\n\t/**\r\n\t\tConstructor\r\n\t */\r\n\tinitialize: function(options) {\r\n\r\n\t\t/**\r\n\t\t *\tRedraw the element, used for CHROME HACK\r\n\t\t */\r\n\t\tjQuery.fn.redraw = function() {\r\n\t\t\treturn this.hide(0, function() {\r\n\t\t\t\t$(this).show();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tthis.$center = $(options.center);\r\n\r\n\t\tvar self = this;\r\n\t\tthis.centerResizedCallback = function() {\r\n\t\t\t// CHROME HACK\r\n\t\t\tvar isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\t\t\tif (isChrome) {\r\n\t\t\t// \t$('#statusBar').redraw();\r\n\t\t\t// \tif ($('#dateRangeSlider').is(':visible'))\r\n\t\t\t// \t\t$('#dateRangeSlider').redraw();\r\n\t\t\t// \t$('#bottomToolbar').redraw();\r\n\t\t\t\t$('#map').redraw();\r\n\t\t\t}\r\n\t\t\tself.trigger('centerResized');\r\n\t\t};\r\n\t\tthis.leftResizedCallback = function() {\r\n\t\t\tself.trigger('leftResized');\r\n\t\t};\r\n\r\n\t\tvar lazyResize = _.debounce(function() {\r\n\t\t\tself.trigger('centerResized');\r\n\t\t\tself.trigger('leftResized');\r\n\t\t}, 300);\r\n\r\n\t\t$(window).resize(lazyResize);\r\n\r\n\t\t$('#dateRangeSlider').on('drs:hide', function() {\r\n\r\n\t\t\tvar currentBottom = parseFloat(self.left.$el.css(\"bottom\"));\r\n\t\t\tself.left.$el.animate({\r\n\t\t\t\t\"bottom\": currentBottom - 24\r\n\t\t\t}, 400, self.leftResizedCallback);\r\n\r\n\t\t});\r\n\r\n\t\t// Update layout when dateRangeSlider visiblity has changed\r\n\t\t$('#dateRangeSlider').on('drs:show', function() {\r\n\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tvar currentBottom = parseFloat(self.left.$el.css(\"bottom\"));\r\n\t\t\t\tself.left.$el.animate({\r\n\t\t\t\t\t\"bottom\": currentBottom + 24\r\n\t\t\t\t}, 400, self.leftResizedCallback);\r\n\t\t\t}, 0)\r\n\t\t});\r\n\r\n\t\tthis._centerState = null;\r\n\t},\r\n\r\n\t/**\r\n\t\tAdd a panel to a region\r\n\t */\r\n\tadd: function(region, panel) {\r\n\r\n\t\tthis[region] = panel;\r\n\r\n\t\t// Setup the panel\r\n\t\tpanel.regionManager = this;\r\n\t\tpanel.region = region;\r\n\t},\r\n\r\n\t/**\r\n\t\tSave the layout, and hide it\r\n\t */\r\n\tsave: function() {\r\n\t\tthis.bottom.$el.hide();\r\n\t\tthis.left.$el.hide();\r\n\t\tthis._centerState = {\r\n\t\t\tbottom: this.$center.css('bottom'),\r\n\t\t\tleft: this.$center.css('left')\r\n\t\t};\r\n\t\tthis.$center.css({\r\n\t\t\tbottom: 0,\r\n\t\t\tleft: 0\r\n\t\t});\r\n\t\tthis.trigger('centerResized');\r\n\t},\r\n\r\n\t/**\r\n\t\tRestore the layout\r\n\t */\r\n\trestore: function() {\r\n\t\tif (this._centerState) {\r\n\t\t\tthis.bottom.$el.show();\r\n\r\n\t\t\tif (this.bottom.activeView && this.bottom.activeView.refresh) {\r\n\t\t\t\tthis.bottom.activeView.refresh();\r\n\t\t\t}\r\n\t\t\tthis.left.$el.show();\r\n\t\t\tthis.$center.css(this._centerState);\r\n\t\t\tthis.trigger('centerResized');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t  Called when the panel size has changed\r\n\t */\r\n\tupdatePanelSize: function(region) {\r\n\t\tvar currentSize = this.getSize(region);\r\n\t\tvar prevSize = parseFloat(this.$center.css(region));\r\n\t\tif (currentSize != prevSize) {\r\n\t\t\tvar props = {};\r\n\t\t\tprops[region] = currentSize;\r\n\t\t\t//this.$center.css(props);\r\n\t\t\t//this.trigger('centerResized');\r\n\t\t\tif (region == 'bottom') {\r\n\t\t\t\tthis.left.$el.css(props);\r\n\t\t\t\tthis.trigger('leftResized');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t\tGet the size for one region\r\n\t*/\r\n\tgetSize: function(region) {\r\n\t\tswitch (region) {\r\n\t\t\tcase 'left':\r\n\t\t\t\treturn this.left.$el.outerWidth();\r\n\t\t\tcase 'bottom':\r\n\t\t\t\treturn this.bottom.$el.outerHeight();\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t/**\r\n\t\tShow a panel\r\n\t*/\r\n\tshow: function(region, duration) {\r\n\t\tvar props = {};\r\n\t\tprops[region] = this.getSize(region);\r\n\t\t// this.$center.animate(props, duration, this.centerResizedCallback);\r\n\r\n\t\tvar offset = 0;\r\n\t\tif (region == 'bottom') {\r\n\t\t\toffset = /*$('#statusBar').height() +*/ $('#bottomToolbar').height() + $('#dateRangeSlider').height() + 2;\r\n\r\n\t\t\tthis.$center.animate({\r\n\t\t\t\t\"bottom\": props.bottom - offset\r\n\t\t\t}, duration, this.centerResizedCallback);\r\n\r\n\t\t\tthis.left.$el.animate({\r\n\t\t\t\t\"bottom\": props.bottom\r\n\t\t\t}, duration, this.leftResizedCallback);\r\n\t\t}\r\n\r\n\t\tprops[region] = 0;\r\n\t\tthis[region].$el.animate(props, duration);\r\n\t\tif ( region == 'left' ) {\r\n\t\t\t$('#searchToolbar').animate({'left': 402});\r\n\t\t}\r\n\r\n\t\t// Listen to size event on the panel\r\n\t\tthis.listenTo(this[region], 'sizeChanged', _.bind(this.updatePanelSize, this, region));\r\n\t},\r\n\r\n\t/**\r\n\t\tHide a panel\r\n\t*/\r\n\thide: function(region, duration, callback) {\r\n\t\tvar props = {};\r\n\t\tprops[region] = 0;\r\n\t\t// this.$center.animate(props, duration, this.centerResizedCallback);\r\n\r\n\t\tvar offset = 0;\r\n\t\tif (region == 'bottom') {\r\n\t\t\tthis.$center.animate(props, duration, this.centerResizedCallback);\r\n\t\t\toffset = /*$('#statusBar').height() +*/ $('#bottomToolbar').height() + $('#dateRangeSlider').height() + 2;\r\n\t\t\tthis.left.$el.animate({\r\n\t\t\t\t\"bottom\": props.bottom + offset\r\n\t\t\t}, duration, this.leftResizedCallback);\r\n\t\t}\r\n\r\n\t\tprops[region] = -this.getSize(region) + offset;\r\n\t\tthis[region].$el.animate(props, duration, callback);\r\n\t\tif ( region == 'left' ) {\r\n\t\t\t$('#searchToolbar').animate({'left': 0});\r\n\t\t}\r\n\r\n\t\tthis.stopListening(this[region], 'sizeChanged');\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = PanelManager;","/**\r\n * Widget module\r\n */\r\n\r\nvar sharePopup_template = require('ui/template/sharePopup');\r\n\r\nvar $popup;\r\n\r\nmodule.exports = {\r\n\topen: function(options) {\r\n\t\tif (!$popup) {\r\n\t\t\t$popup = $(sharePopup_template());\r\n\r\n\t\t\t$popup.find('#sharedUrlLinks a')\r\n\t\t\t\t.addClass('tb-elt')\r\n\t\t\t\t.wrapInner('<div class=\"tb-text\"></div>')\r\n\t\t\t\t.prepend('<div class=\"tb-icon\"></div>')\r\n\t\t\t\t.click(function() {\r\n\t\t\t\t\t$popup.popup('close');\r\n\t\t\t\t});\r\n\r\n\t\t\t$popup.appendTo('.ui-page-active');\r\n\r\n\t\t\t$popup.popup();\r\n\t\t\t$popup.trigger('create');\r\n\r\n\t\t\t$popup.find('#sharedUrlLinks a')\r\n\t\t\t\t.removeClass('ui-link')\r\n\t\t}\r\n\r\n\t\tvar url = options.url;\r\n\r\n\t\t// NGEO-1774: Shared url is passed by sharedUrl parameter, since '#' is filtered by UM-SSO\r\n\t\tvar sharedUrl = encodeURIComponent(window.location.origin + window.location.pathname + url.substr(url.indexOf(\"/sec/\") + \"/sec/\".length));\r\n\t\turl = window.location.origin + window.location.pathname + \"?sharedUrl=\" + sharedUrl;\r\n\r\n\t\t$(\"#facebook\").attr('href', 'https://www.facebook.com/sharer.php?u=' + encodeURIComponent(url));\r\n\t\t$(\"#twitter\").attr('href', 'http://twitter.com/intent/tweet?status=' + encodeURIComponent(url));\r\n\t\t$(\"#email\").attr('href', 'mailto:?body=' + encodeURIComponent(url));\r\n\t\t$(\"#raw\").attr('href', url);\r\n\r\n\t\t$popup.popup('open', options);\r\n\t}\r\n};","/**\r\n * The StackPanel manages a panel that contains different views, only one can be active at a time\r\n */\r\n\r\nvar defaultAreaView = null; // Default view with area to show\r\nvar currentAreaView = null; // View whose area is currently displayed on map\r\n\r\nvar StackPanel = Backbone.View.extend({\r\n\r\n\t// Constructor\r\n\tinitialize: function(options) {\r\n\r\n\t\tthis.regionManager = null;\r\n\t\tthis.classes = options.classes;\r\n\t\tthis.activeView = null;\r\n\r\n\t},\r\n\r\n\tadd: function(view, activator) {\r\n\t\tthis.$el.append(view.$el);\r\n\r\n\t\tview.on('sizeChanged', function() {\r\n\t\t\tthis.trigger('sizeChanged');\r\n\t\t}, this);\r\n\r\n\t\tview.$el\r\n\t\t\t.hide()\r\n\t\t\t.addClass(this.classes);\r\n\r\n\t\tview.$activator = $(activator);\r\n\r\n\t\tvar self = this;\r\n\t\tview.$activator.click(function() {\r\n\t\t\tself._toggle(view);\r\n\t\t});\r\n\r\n\t\t// Set default area view to be SearchCriteriaView for now\r\n\t\tif ( view.id == \"datasetSearchCriteria\" ) {\r\n\t\t\tdefaultAreaView = view;\r\n\t\t}\r\n\r\n\t\t// Initialize current area view\r\n\t\tif ( view.hasOwnProperty(\"areaCriteriaView\") ) {\r\n\t\t\tcurrentAreaView = view;\r\n\t\t}\r\n\t},\r\n\r\n\t_toggle: function(view) {\r\n\r\n\t\tif (view == this.activeView) {\r\n\r\n\t\t\tvar self = this;\r\n\t\t\tthis.regionManager.hide(this.region, 400, function() {\r\n\t\t\t\tself.activeView.$el.hide();\r\n\t\t\t\tif (self.activeView.onHide)\r\n\t\t\t\t\tself.activeView.onHide();\r\n\t\t\t\tself.activeView = null;\r\n\r\n\t\t\t\t// NGEO-1944: If view hasn't got area layer, set default one defined by defaultAreaViewId\r\n\t\t\t\tvar currentAreaView = view.areaCriteriaView ? view : defaultAreaView;\r\n\t\t\t\tcurrentAreaView.onShow();\r\n\t\t\t});\r\n\t\t\tview.$activator.removeClass('toggle');\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif (this.activeView) {\r\n\t\t\t\tthis.activeView.$el.hide();\r\n\t\t\t\tthis.activeView.$activator.removeClass('toggle');\r\n\t\t\t\tif (this.activeView.onHide)\r\n\t\t\t\t\tthis.activeView.onHide();\r\n\t\t\t}\r\n\r\n\t\t\t// NGEO-1944: Only one area layer must be visible on map\r\n\t\t\t// Everytime set current layer visibility to false to handle the\r\n\t\t\t// case when no tab is opened but area is still on map\r\n\t\t\tcurrentAreaView.onHide();\r\n\t\t\tcurrentAreaView = view.areaCriteriaView ? view : defaultAreaView;\r\n\t\t\tcurrentAreaView.onShow();\r\n\r\n\t\t\tview.$el.show();\r\n\t\t\tif (view.onShow)\r\n\t\t\t\tview.onShow();\r\n\t\t\tview.$activator.addClass('toggle');\r\n\r\n\t\t\tif (!this.activeView) {\r\n\t\t\t\tthis.regionManager.show(this.region, 400);\r\n\t\t\t}\r\n\r\n\t\t\tthis.activeView = view;\r\n\t\t}\r\n\t},\r\n\r\n});\r\n\r\n\r\nmodule.exports = StackPanel;","var Configuration = require('configuration');\r\nvar Map = require('map/map');\r\nvar BrowsesManager = require('searchResults/browsesManager');\r\nvar DataSetSearch = require('search/model/datasetSearch');\r\nvar Pagination = require('ui/pagination');\r\n\r\n// A constant\r\nvar ONE_MONTH = 24 * 30 * 3600 * 1000;\r\n\r\n/**\r\n * The StatusPanel composed by statuses representing feature collection(dataset in other words)\r\n *\r\n * Each status could contain views:\r\n *\t<ul>\r\n *\t\t<li>Table view : Results table with metadata (instanciated by SearchResultsTableView)</li>\r\n *\t\t<li>Gantt view : Temporal apperance of products</li>\r\n *\t</ul>\r\n */\r\nvar StatusPanel = Backbone.View.extend({\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tinitialize: function(options) {\r\n\r\n\t\tvar self = this;\r\n\t\t// Init the dateRangeSlider singleton here\r\n\t\tthis.dateRangeSlider = $('#dateRangeSlider').dateRangeSlider({\r\n\t\t\tbounds: {\r\n\t\t\t\tmin: DataSetSearch.get(\"start\"),\r\n\t\t\t\tmax: DataSetSearch.get(\"stop\")\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.regionManager = null;\r\n\t\tthis.classes = options.classes;\r\n\t\tthis.bottomActivator = null;\r\n\r\n\t\tthis.activeStatus = null;\r\n\t\tthis.activeView = null;\r\n\t\t\r\n\t\t// When a product has been picked, select the status with the most recent product\r\n\t\tMap.on('pickedFeatures', function(pickedFeatures) {\r\n\t\t\tvar recentFeatureCollection = null;\r\n\t\t\tvar maxDate = new Date(\"1980-01-01\");\r\n\t\t\tfor ( var i=0; i<pickedFeatures.length; i++ ) {\r\n\t\t\t\tvar feature = pickedFeatures[i];\r\n\t\t\t\tvar currentMaxDate = new Date(Configuration.getMappedProperty(feature, \"start\"));\r\n\t\t\t\tif (maxDate < currentMaxDate){\r\n\t\t\t\t\tmaxDate = currentMaxDate;\r\n\t\t\t\t\trecentFeatureCollection = feature._featureCollection;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Very hacky method to click on status corresponding to picked features\r\n\t\t\tif ( recentFeatureCollection ) {\r\n\t\t\t\tif ( !recentFeatureCollection.dataset ) {\r\n\t\t\t\t\t// Actually shopcart doesn't have dataset, so since we have only one shopcart\r\n\t\t\t\t\t// click on shopcart\r\n\t\t\t\t\t// TODO: This issue will be resolved when multiple shopcarts could be chosen by user\r\n\t\t\t\t\t$('#shopcart').click();\r\n\t\t\t\t} else if ( recentFeatureCollection.id ) {\r\n\t\t\t\t\t// Otherwise the dataset containing products have been clicked\r\n\t\t\t\t\t$('#result' + recentFeatureCollection.id).click();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Update statuses checkbox according to layer visibility\r\n\t\tMap.on('visibility:changed', function(layer) {\r\n\t\t\t\r\n\t\t\tif ( layer.params.type == \"Browses\" )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// Very ugly method to find feature collection id from layer\r\n\t\t\t// TODO: improve !\r\n\t\t\tvar fcId = layer.params.name.substr(0, layer.params.name.indexOf(\" Result\"));\r\n\t\t\tvar selector = \"#result\"+fcId;\r\n\t\t\tif ( !fcId ) {\r\n\t\t\t\t// Shopcart special case\r\n\t\t\t\tfcId = layer.params.name.substr(0, layer.params.name.indexOf(\" Footprint\"));\r\n\t\t\t\tselector = \"#shopcart\";\r\n\t\t\t}\r\n\r\n\t\t\tif ( layer.params.visible ) {\r\n\t\t\t\t$(selector).find('.layerVisibility').removeClass('ui-icon-checkbox-off').addClass('ui-icon-checkbox-on');\r\n\t\t\t} else {\r\n\t\t\t\t$(selector).find('.layerVisibility').removeClass('ui-icon-checkbox-on').addClass('ui-icon-checkbox-off');\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tthis.pagination = new Pagination({\r\n\t\t\tmodel: null,\r\n\t\t\tel: this.$el.find('#statusPagination')\r\n\t\t});\r\n\t\tthis.pagination.render();\r\n\r\n\t\t// Need to update bottom dataset width when several dataset has been chosen to hide overflow\r\n\t\tvar updateBottomDatasetWidth = function() {\r\n\t\t\tvar menuCommandWidth = 40; // Width of first button allowing to \"Show table\"\r\n\t\t\t$('#bottomDatasets').width($('#bottomToolbar').outerWidth() - self.$el.find('#statusPagination').width() - menuCommandWidth);\r\n\t\t};\r\n\t\t$(window).resize(updateBottomDatasetWidth)\r\n\t\tthis.listenTo(this.pagination, 'pagination:updated', updateBottomDatasetWidth);\r\n\t},\r\n\r\n\t// Only used by shared shopcart. Should be removed later?\r\n\tshowTable: function() {\r\n\t\t$('#table').click();\r\n\t\tthis.toggleView(this.activeStatus.views[0]); // Supposing that actual selected view is ShopcartTableView\r\n\t},\r\n\r\n\t/**\r\n\t * Add a view to the status panel\r\n\t */\r\n\taddView: function(view) {\r\n\r\n\t\tview.on('sizeChanged', function() {\r\n\t\t\tthis.trigger('sizeChanged');\r\n\t\t}, this);\r\n\r\n\t\tthis.$el.append(view.$el);\r\n\t\tview.$el\r\n\t\t\t.hide()\r\n\t\t\t.addClass(this.classes);\r\n\t},\r\n\r\n\t/**\r\n\t * Toggle a view state between visible or not\r\n\t */\r\n\ttoggleView: function(view) {\r\n\r\n\t\tif (view == this.activeView) {\r\n\t\t\t// No more view hiding since bottom-panel is relative for now\r\n\t\t\t// var viewToHide = this.activeView;\r\n\t\t\tthis.regionManager.hide(this.region, 400/*, function() {\r\n\t\t\t\tviewToHide.hide();\r\n\t\t\t}*/);\r\n\r\n\t\t\tthis.activeView = null;\r\n\r\n\t\t} else {\r\n\t\t\tif (this.activeView)\r\n\t\t\t\tthis.activeView.hide();\r\n\r\n\t\t\tview.show();\r\n\r\n\t\t\tif (!this.activeView) {\r\n\t\t\t\tthis.regionManager.show(this.region, 400);\r\n\t\t\t}\r\n\r\n\t\t\tthis.activeView = view;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Show a status\r\n\t */\r\n\tshowStatus: function(status) {\r\n\t\t// Desactivate previous status\r\n\t\tif (this.activeStatus) {\r\n\t\t\tthis.activeStatus.$el.hide();\r\n\t\t\t$(this.activeStatus.activator).removeClass('toggle');\r\n\r\n\t\t\t// Reset the views\r\n\t\t\tfor (var i = 0; i < this.activeStatus.views.length; i++) {\r\n\t\t\t\tthis.activeStatus.views[i].setModel(null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Show the status\r\n\t\tstatus.$el.show();\r\n\t\t$(status.activator).addClass('toggle');\r\n\r\n\t\t// Manage active view : keep an active view if there is already one\r\n\t\tif (this.activeView) {\r\n\r\n\t\t\tvar index = status.views.indexOf(this.activeView);\r\n\t\t\tif (index < 0) {\r\n\t\t\t\tthis.toggleView(status.views[0]);\r\n\t\t\t\tthis.activeView = status.views[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Activate model for the views\r\n\t\t// NB: activate model after toggleView cuz element should be visible to compute width properly\r\n\t\tfor (var i = 0; i < status.views.length; i++) {\r\n\t\t\tstatus.views[i].setModel(status.model);\r\n\t\t}\r\n\t\tthis.pagination.setModel(status.model);\r\n\r\n\t\tthis.activeStatus = status;\r\n\t},\r\n\r\n\t/**\r\n\t *\tBuild result message\r\n\t */\r\n\tbuildResultMessage: function(features, fc) {\r\n\t\tvar content = \"\";\r\n\t\tif ( fc.totalResults > 0 ) {\r\n\t\t\tvar startIndex = 1 + (fc.currentPage - 1) * fc.countPerPage;\r\n\t\t\tvar endIndex = Math.min(startIndex + fc.features.length - 1, fc.totalResults);\r\n\t\t\tcontent = startIndex + ' to ' + endIndex + \" of \" + fc.totalResults;\r\n\t\t} else if (fc.totalResults == 0) {\r\n\t\t\tcontent = 'No product found.';\r\n\t\t} else {\r\n\t\t\tcontent = 'No search done.';\r\n\t\t}\r\n\t\treturn content;\r\n\t},\r\n\r\n\t/**\r\n\t *\tAdd status to panel\r\n\t */\r\n\taddStatus: function(status) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Link activators with views\r\n\t\t// $.each(status.views, function(index, view) {\r\n\t\t// \tconsole.log(\"Binding \" + $(status.viewActivators[index]).attr(\"id\") +\" to \" + view.cid);\r\n\t\t// \tstatus.viewActivators[index].unbind('click').click(function(event) {\r\n\t\t// \t\tself.toggleView(view);\r\n\t\t// \t\t$(this).toggleClass(\"toggle\");\r\n\t\t// \t\t//self.removeClass(\"toggle\");\r\n\t\t// \t\t// if (!self.activeView) {\r\n\t\t// \t\t// \t$(this).prop(\"checked\", false).checkboxradio(\"refresh\");\r\n\t\t// \t\t// }\r\n\t\t// \t});\r\n\t\t// });\r\n\r\n\t\tif ( status.model ) {\r\n\r\n\t\t\tthis.listenTo(status.model, \"startLoading\", function() {\r\n\t\t\t\t$(status.activator).find('.nbFeatures').html(\"Searching..\").addClass(\"pulsating\");\r\n\t\t\t});\r\n\r\n\t\t\t// Update tiny red circle with number of features on search\r\n\t\t\tthis.listenTo(status.model, \"add:features\", function(features, fc) {\r\n\t\t\t\t// Use of closure for status\r\n\t\t\t\t$(status.activator).find('.nbFeatures').removeClass(\"pulsating\").html(this.buildResultMessage( features, fc ));\r\n\t\t\t});\r\n\r\n\t\t\tthis.listenTo(status.model, \"remove:features\", function(features, fc) {\r\n\t\t\t\t$(status.activator).find('.nbFeatures').html(this.buildResultMessage( features, fc ));\r\n\t\t\t});\r\n\r\n\t\t\tthis.listenTo(status.model, 'error:features', function(searchUrl) {\r\n\t\t\t\t$(status.activator).find('.nbFeatures').removeClass(\"pulsating\").html(\"Error on search\");\r\n\t\t\t});\r\n\r\n\t\t\tthis.listenTo(status.model, \"reset:features\", function(fc){\r\n\t\t\t\t// Hide it only on first search, no need for pagination searches\r\n\t\t\t\tif ( fc.currentPage == 0 ) {\r\n\t\t\t\t\t$(status.activator).find('.nbFeatures').html(\"No search done\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// React when the activator is toggled\r\n\t\t$(status.activator).unbind('click').click(function() {\r\n\t\t\tif (!$(this).hasClass('toggle')) {\r\n\t\t\t\tself.showStatus(status);\r\n\t\t\t\tself.activeView = status.views[0];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Update footprint/browses visibility when layerVisibility checkbox is toggled\r\n\t\t$(status.activator).find('.layerVisibility').click(function(event) {\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tvar _footprintLayer = status.model._footprintLayer;\r\n\t\t\tvar isVisible = !_footprintLayer.params.visible;\r\n\t\t\t_footprintLayer.setVisible(isVisible);\r\n\t\t\t\r\n\t\t\t// Show/Hide browses\r\n\t\t\tvar browsesLayers = BrowsesManager.getSelectedBrowseLayers(status.model);\r\n\t\t\tfor ( var i=0; i<browsesLayers.length; i++ ) {\r\n\t\t\t\tbrowsesLayers[i].setVisible(isVisible);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Activate the first 'status'\r\n\t\tif (!this.activeStatus) {\r\n\t\t\tthis.showStatus(status);\r\n\t\t} else {\r\n\t\t\tstatus.$el.hide();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tRemove status from panel\r\n\t */\r\n\tremoveStatus: function(activatorId) {\r\n\t\t$(activatorId).remove();\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = StatusPanel;","var Configuration = require('configuration');\r\nvar DataSetSearch = require('search/model/datasetSearch');\r\nvar Map = require('map/map');\r\nvar Pagination = require('ui/pagination');\r\nvar tableColumnsPopup_template = require('ui/template/tableColumnsPopup');\r\nvar FeatureCollection = require('searchResults/model/featureCollection');\r\nvar SearchResultsMap = require('searchResults/map');\r\nvar MultipleBrowseWidget = require('searchResults/widget/multipleBrowseWidget');\r\n\r\n/**\r\n *\tGet nested objects containing the given key\r\n *\t\t@param options\r\n *\t\t\t<ul>\r\n *\t\t\t    <li>val : Filter by value</li>\r\n *\t\t\t    <li>firstFound : Boolean indicating if you need to return the first found object</li>\r\n *\t\t\t<ul>\r\n */\r\nvar _getObjects = function(obj, key, options) {\r\n\tif ( options ) {\r\n\t\tvar val = options.hasOwnProperty(\"val\") ? options.val : null;\r\n\t\tvar firstFound = options.firstFound ? options.firstFound : false;\r\n\t}\r\n\r\n\tvar objects = [];\r\n\tfor (var i in obj) {\r\n\t\tif (!obj.hasOwnProperty(i))\r\n\t\t\tcontinue;\r\n\t\tif ( i == key && (val == undefined || obj[i] == val) ) {\r\n\t\t\tif ( firstFound )\r\n\t\t\t\treturn obj;\r\n\t\t\tobjects.push(obj);\r\n\t\t}\r\n\r\n\t\tif (typeof obj[i] == 'object') {\r\n\t\t\tvar foundObjects = _getObjects(obj[i], key, options);\r\n\t\t\tif ( !_.isArray(foundObjects) && firstFound ){\r\n\t\t\t\treturn foundObjects;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tobjects = objects.concat(foundObjects);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn objects;\r\n}\r\n\r\nvar _allHighlights = [];\r\nvar ctrlPressed = false;\r\nvar shiftPressed = false;\r\nvar _lastSelectedRow = null;\r\nvar _clickInTable = false; // Terrible hack to avoid scrolling to most recent feature(FIXME please..)\r\n\r\n/**\r\n *\tToggle arrays helper used to splice/push features depending on their presence in prevArray\r\n *\tUsed to handle Shift+click selection\r\n *\tEx: newArray = [1,2,3]; prevArray = [2,3,4] --> prevArray becomes = [1,4]\r\n */\r\nvar toggleArrays = function(newArray, prevArray) {\r\n  \tfor ( var i=0; i<newArray.length; i++ ) {\r\n  \t\tvar item = newArray[i];\r\n  \t\tvar idx = _.indexOf(prevArray, item);\r\n  \t\tif ( idx !== -1 ) {\r\n  \t\t\tprevArray.splice(idx, 1);\r\n  \t\t} else {\r\n  \t\t\tprevArray.push(item);\r\n  \t\t}\r\n  \t}\r\n}\r\n\r\n/**\r\n * A view to display a table.\r\n * The model contains a feature collection\r\n */\r\nvar TableView = Backbone.View.extend({\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * Connect to model change\r\n\t */\r\n\tinitialize: function(options) {\r\n\r\n\t\tthis.setModel(this.model);\r\n\r\n\t\tif (options) {\r\n\t\t\tthis.columnDefs = options.columnDefs;\r\n\t\t}\r\n\r\n\t\tthis.hasExpandableRows = false;\r\n\r\n\t\tthis.rowsData = [];\r\n\t\tthis.visibleRowsData = [];\r\n\t\tthis.feature2row = {};\r\n\r\n\t\tthis.maxVisibleColumns = 10;\r\n\t\tvar self = this;\r\n\r\n\t\tvar onKeyDown = function(e) {\r\n\t\t\tif ( e.keyCode == '17' ) {\r\n\t\t\t\tctrlPressed = true;\r\n\t\t\t}\r\n\t\t\tif ( e.keyCode == '16' ) {\r\n\t\t\t\tshiftPressed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( ctrlPressed && e.keyCode == '65' ) {\r\n\t\t\t\t// Ctrl+A : select all\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif ( self.model )\r\n\t\t\t\t\t$(self.$el.find('.table-view-checkbox').get(0)).trigger('click');\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar onKeyUp = function(e) {\r\n\t\t\tif ( e.keyCode == '17' ) {\r\n\t\t\t\tctrlPressed = false;\r\n\t\t\t}\r\n\t\t\tif ( e.keyCode == '16' ) {\r\n\t\t\t\tshiftPressed = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.addEventListener('keydown', onKeyDown);\r\n\t\tdocument.addEventListener('keyup', onKeyUp);\r\n\r\n\t\t/**\r\n\t\t *\tThis code just temporary serves to trigger highlight on ALL the feature collections\r\n\t\t *\tTODO: Replace the mecanism by something more sexy..\r\n\t\t */\r\n\t\tthis.triggerHighlightFeature = _.debounce(function(){\r\n\t\t\tthis.highlightFeature(_allHighlights);\r\n\t\t\t_allHighlights = [];\r\n\t\t}, 10);\r\n\t},\r\n\r\n\t/**\r\n\t * Manage events on the view\r\n\t */\r\n\tevents: {\r\n\r\n\t\t// Call when the user enter text in the filter input\r\n\t\t'keyup input': function(event) {\r\n\t\t\tthis.filterData($(event.currentTarget).val());\r\n\t\t},\r\n\r\n\t\t'dblclick tr': function(event) {\r\n\t\t\tvar data = $(event.currentTarget).data('internal');\r\n\t\t\tif (data) {\r\n\t\t\t\tMap.zoomToFeature(data.feature);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'click .multipleBrowse': function(event) {\r\n\t\t\tvar data = $(event.currentTarget).closest('tr').data('internal')\r\n\t\t\tMultipleBrowseWidget.open({\r\n\t\t\t\tfeature: data.feature,\r\n\t\t\t\tfeatureCollection: this.model\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Call when a row is clicked\r\n\t\t'click tr': function(event) {\r\n\t\t\tvar $row = $(event.currentTarget);\r\n\t\t\tvar data = $row.data('internal');\r\n\t\t\tif ( data ) {\r\n\t\t\t\tvar fc = this.model;\r\n\t\t\t\tvar currentHighlights;\r\n\t\t\t\tif ( ctrlPressed ) {\r\n\t\t\t\t\tif ( fc.highlights.indexOf(data.feature) != -1 ) {\r\n\t\t\t\t\t\tcurrentHighlights = _.without(fc.highlights, data.feature);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrentHighlights = fc.highlights.concat(data.feature);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if ( shiftPressed && _lastSelectedRow ) {\r\n\t\t\t\t\tdocument.getSelection().removeAllRanges();\r\n\t\t\t\t\tvar range = [_lastSelectedRow, $row].sort(function(a,b) { return a.index() - b.index() } );\r\n\r\n\t\t\t\t\tvar selectedRows = range[0].nextUntil(range[1]);\r\n\t\t\t\t\tselectedRows.push(event.currentTarget);\r\n\t\t\t\t\tvar selectedFeatures = _.map(selectedRows, function(row) {\r\n\t\t\t\t\t\treturn $(row).data('internal').feature;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tcurrentHighlights = fc.highlights.slice(0);\r\n\t\t\t\t\ttoggleArrays(selectedFeatures, currentHighlights);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrentHighlights = [data.feature];\r\n\t\t\t\t}\r\n\t\t\t\t_clickInTable = true;\r\n\t\t\t\t_lastSelectedRow = $row;\r\n\r\n\t\t\t\tif (fc.highlight && data.feature) {\r\n\t\t\t\t\tfc.highlight(currentHighlights);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Call when the header is clicked : sort\r\n\t\t'click th': function(event) {\r\n\r\n\t\t\tvar $cell = $(event.currentTarget);\r\n\t\t\t$cell.siblings(\"th\").removeClass('sorting_asc').removeClass('sorting_desc');\r\n\r\n\t\t\tif ($cell.find('.table-view-checkbox').length > 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar cellIndex = this.columnDefs.indexOf(_.find(this.columnDefs, function(c) { return c.sTitle == $cell.html(); } ));\r\n\t\t\tif ($cell.hasClass('sorting_asc')) {\r\n\t\t\t\t$cell.removeClass('sorting_asc');\r\n\t\t\t\tthis.sortData(-1, 'original');\r\n\t\t\t} else if ($cell.hasClass('sorting_desc')) {\r\n\t\t\t\t$cell.removeClass('sorting_desc');\r\n\t\t\t\t$cell.addClass('sorting_asc');\r\n\t\t\t\tthis.sortData(cellIndex, 'asc');\r\n\t\t\t} else {\r\n\t\t\t\t$cell.addClass('sorting_desc');\r\n\t\t\t\tthis.sortData(cellIndex, 'desc');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Call when the expand icon is clicked\r\n\t\t'click .table-view-expand': function(event) {\r\n\t\t\t// Change icon and return the row\r\n\t\t\tvar $row = $(event.currentTarget)\r\n\t\t\t\t.toggleClass('ui-icon-minus')\r\n\t\t\t\t.toggleClass('ui-icon-plus')\r\n\t\t\t\t.closest('tr');\r\n\r\n\t\t\tvar rowData = $row.data('internal');\r\n\t\t\trowData.isExpanded = !rowData.isExpanded;\r\n\t\t\tif (rowData.isExpanded) {\r\n\t\t\t\tthis.expandRow($row);\r\n\t\t\t} else {\r\n\t\t\t\tthis.closeRow($row);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Called when the user clicks on \"browse-visibility\" checkbox in table\r\n\t\t'click .browse-visibility-checkbox': function(event) {\r\n\t\t\tvar $target = $(event.currentTarget);\r\n\t\t\tvar $row = $target.closest('tr');\r\n\t\t\tvar data = $row.data('internal');\r\n\r\n\t\t\t// Based on css value, show/hide browses\r\n\t\t\tif ($target.hasClass('ui-icon-checkbox-off')) {\r\n\t\t\t\tthis.model.showBrowses( $row.hasClass('row_selected') ? this.model.highlights : [data.feature] );\r\n\t\t\t} else {\r\n\t\t\t\tthis.model.hideBrowses( $row.hasClass('row_selected') ? this.model.highlights : [data.feature] );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Called when the user clicks on the \"selection\" checkbox in table\r\n\t\t'click .table-view-checkbox': function(event) {\r\n\t\t\t// Retreive the position of the selected row\r\n\t\t\tvar $target = $(event.currentTarget);\r\n\t\t\tvar $row = $target.closest('tr');\r\n\t\t\tvar data = $row.data('internal');\r\n\r\n\t\t\tif ($target.hasClass('ui-icon-checkbox-off')) {\r\n\t\t\t\t// Chose model between Dataset & children\r\n\t\t\t\t// HUGE problem with multiple feature collections cuz this view depends on model\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tvar model = data.parent ? data.parent.childFc : this.model;\r\n\t\t\t\t\t// NGEO-2174: check every highlighted feature when clicking on already selected row\r\n\t\t\t\t\tmodel.select( $row.hasClass('row_selected') ? model.highlights : [data.feature] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"Select all\" case\r\n\t\t\t\t\tvar filteredFeatures = _.pluck(this.visibleRowsData, 'feature');\r\n\t\t\t\t\tthis.model.selectAll(filteredFeatures);\r\n\t\t\t\t\t$target\r\n\t\t\t\t\t\t.removeClass('ui-icon-checkbox-off')\r\n\t\t\t\t\t\t.addClass('ui-icon-checkbox-on');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tvar model = data.parent ? data.parent.childFc : this.model;\r\n\t\t\t\t\t// NGEO-2174: uncheck every highlighted feature when clicking on already selected row\r\n\t\t\t\t\tmodel.unselect( $row.hasClass('row_selected') ? model.highlights : [data.feature] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"Unselect all\" case\r\n\t\t\t\t\tthis.model.unselectAll();\r\n\t\t\t\t\t$target\r\n\t\t\t\t\t\t.removeClass('ui-icon-checkbox-on')\r\n\t\t\t\t\t\t.addClass('ui-icon-checkbox-off');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t'click #table-columns-button': function(event) {\r\n\r\n\t\t\tvar self = this;\r\n\t\t\t$(tableColumnsPopup_template(this)).appendTo('.ui-page-active')\r\n\t\t\t\t.trigger('create')\r\n\t\t\t\t.popup({\r\n\t\t\t\t\ttheme: 'c'\r\n\t\t\t\t})\r\n\t\t\t\t.on('change', 'input', function(event) {\r\n\t\t\t\t\t// Get the column to change\r\n\t\t\t\t\tvar i = $(this).data('index');\r\n\t\t\t\t\tself.columnDefs[i].visible = $(this).is(':checked');\r\n\r\n\t\t\t\t\t// Rebuild the table with the new columns\r\n\t\t\t\t\tself.buildTable();\r\n\t\t\t\t\tself.buildTableContent();\r\n\t\t\t\t})\r\n\t\t\t\t.on('popupafterclose', function(event, ui) {\r\n\t\t\t\t\t$(this).remove();\r\n\t\t\t\t})\r\n\t\t\t\t.popup('open', {\r\n\t\t\t\t\tpositionTo: this.$el.find('#table-columns-button')\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t// Incremental pagination\r\n\t\t'click .loadMore' : function(event) {\r\n\t\t\tvar rowData = $(event.currentTarget).closest('.paging').data(\"internal\");\r\n\t\t\t// If row is already loading, exit !\r\n\t\t\tif (rowData.childFc.isLoading)\r\n\t\t\t\treturn;\r\n\r\n\t\t\trowData.childFc.appendPage( rowData.childFc.currentPage + 1 );\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Set the model to be used by the TableView\r\n\t */\r\n\tsetModel: function(model) {\r\n\r\n\t\tif (this.model) {\r\n\t\t\t// Clean-up previous data\r\n\t\t\tthis.clear();\r\n\r\n\t\t\t// Clean-up callbacks\r\n\t\t\tthis.stopListening(this.model);\r\n\t\t}\r\n\r\n\t\tthis.model = model;\r\n\t\tvar self = this;\r\n\t\tif (this.model) {\r\n\t\t\tthis.listenTo(this.model, \"reset:features\", this.clear);\r\n\t\t\tthis.listenTo(this.model, \"add:features\", this.addData);\r\n\t\t\tthis.listenTo(this.model, \"remove:features\", this.removeData);\r\n\t\t\tthis.listenTo(this.model, \"selectFeatures\", this.updateSelection);\r\n\t\t\tthis.listenTo(this.model, \"unselectFeatures\", this.updateSelection);\r\n\t\t\tthis.listenTo(this.model, \"show:browses\", this.showBrowses);\r\n\t\t\tthis.listenTo(this.model, \"hide:browses\", this.hideBrowses);\r\n\t\t\tthis.listenTo(this.model, \"highlightFeatures\", function(features){\r\n\t\t\t\t_allHighlights = _allHighlights.concat(features);\r\n\t\t\t\tself.triggerHighlightFeature();\r\n\t\t\t});\r\n\t\t\tthis.listenTo(this.model, \"update:downloadOptions\", this.updateRows);\r\n\r\n\t\t\tif (this.model.features.length > 0) {\r\n\t\t\t\tthis.addData(this.model.features);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t *\tUpdate rows of given features\r\n\t */\r\n\tupdateRows: function(features) {\r\n\r\n\t\tfor ( var i=0; i<features.length; i++ ) {\r\n\t\t\tvar feature = features[i];\r\n\t\t\tvar $row = this._getRowFromFeature(feature);\r\n\t\t\tvar rowData = $row.data(\"internal\");\r\n\r\n\t\t\t// Update offset\r\n\t\t\tvar tdOffset = 1; // Since first <td> could be + and checkbox\r\n\t\t\tif ( rowData.isExpandable ) {\r\n\t\t\t\ttdOffset++;\r\n\t\t\t}\r\n\r\n\t\t\t// Update rowData according to columnDefs\r\n\t\t\trowData.cellData.length = 0;\r\n\t\t\tfor (var j = 0; j < this.columnDefs.length; j++) {\r\n\t\t\t\tvar d = Configuration.getFromPath(feature, this.columnDefs[j].mData);\r\n\t\t\t\trowData.cellData.push(d);\r\n\t\t\t\t$($row.find(\"td\").get(j + tdOffset)).html(d);\r\n\t\t\t}\r\n\r\n\t\t\tthis._updateRow(rowData, $row);\r\n\t\t}\r\n\t\tthis.updateFixedHeader();\r\n\t},\r\n\r\n\t/**\r\n\t * Expand a row\r\n\t */\r\n\texpandRow: function($row) {\r\n\r\n\t\tvar rowData = $row.data('internal');\r\n\r\n\t\t// If row is already loading, exit !\r\n\t\tif (rowData.isLoading)\r\n\t\t\treturn;\r\n\r\n\t\tvar expandUrl = null;\r\n\t\tif (DataSetSearch.get(\"mode\") != \"Simple\") {\r\n\t\t\t// Interferometric search\r\n\t\t\texpandUrl = Configuration.getMappedProperty(rowData.feature, \"interferometryUrl\", null);\r\n\t\t} else {\r\n\t\t\t// Granules search\r\n\t\t\texpandUrl = Configuration.getMappedProperty(rowData.feature, \"virtualProductUrl\", null);\r\n\t\t\t// HACK: Update WEBS response from atom to json : to be fixed by WEBS later\r\n\t\t\texpandUrl = expandUrl.replace(\"format=atom\", \"format=json\");\r\n\t\t}\r\n\r\n\t\tthis.createChildrenFeatureCollection(rowData);\r\n\t\t// Launch search\r\n\t\trowData.childFc.search(expandUrl);\r\n\t},\r\n\r\n\t/**\r\n\t * Close a row\r\n\t */\r\n\tcloseRow: function($row) {\r\n\r\n\t\tvar rowData = $row.data('internal');\r\n\r\n\t\tif (rowData.isLoading) {\r\n\t\t\t$row.next().remove();\r\n\t\t} else {\r\n\r\n\t\t\tif ( rowData.childFc ) {\r\n\t\t\t\tthis.model.removeChild(rowData.feature.id);\r\n\t\t\t}\r\n\r\n\t\t\trowData.children.length = 0;\r\n\t\t\t$row.nextAll('.child_of_'+ rowData.childFc.id).remove();\r\n\t\t\t$row.next('.paging_child_of_'+ rowData.childFc.id).remove();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Highlight the features on the table when they have been highlighted on the map.\r\n\t */\r\n\thighlightFeature: function(features, prevFeatures) {\r\n\t\tif (!this.$table) return;\r\n\r\n\t\t// Remove previous highlighted rows\r\n\t\tthis.$table.find('.row_selected').removeClass('row_selected');\r\n\r\n\t\tif (features.length > 0) {\r\n\t\t\tvar rows = this.$table.find(\"tbody tr\");\r\n\t\t\tfor (var i = 0; i < features.length; i++) {\r\n\r\n\t\t\t\tvar $row = this._getRowFromFeature(features[i]);\r\n\t\t\t\tif ( $row ) {\r\n\t\t\t\t\t$row.addClass('row_selected');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// NGEO-1941: Scroll to the most recent highlighted product in table\r\n\t\t\tvar mostRecentFeature = _.max(features, function(f) {\r\n\t\t\t\treturn new Date(Configuration.getMappedProperty(f, \"stop\"));\r\n\t\t\t});\r\n\r\n\t\t\tvar $mostRecentRow = this._getRowFromFeature(mostRecentFeature);\r\n\t\t\tif ( $mostRecentRow && !_clickInTable ) {\r\n\t\t\t\tthis._scrollTo($mostRecentRow);\r\n\t\t\t} else {\r\n\t\t\t\t_clickInTable = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tScroll table elt to the given $row\r\n\t *\tCheck if the the selected row isn't already visible btw\r\n\t */\r\n\t_scrollTo: function($row) {\r\n\t\tvar rowTop = $row.position().top;\r\n\t\tvar offset = $row.height() / 2; // Take a half-height as an offset on both sides (top/bottom)\r\n\t\tvar isVisibleInContent = (rowTop > offset && rowTop < this.$el.find(\".table-content\").height() - offset);\r\n\t\tif ( !isVisibleInContent ) {\r\n\t\t\t// Scroll only if not already visible in table content\r\n\t\t\tthis.$el.find(\".table-content\").animate({\r\n\t\t\t\tscrollTop: rowTop - this.$el.find(\".table-content tbody\").position().top - 90 // \"90\" magic number to place in \"center\"\r\n\t\t\t}, {\r\n\t\t\t\tduration: 500,\r\n\t\t\t\teasing: \"easeOutQuad\"\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Helper function to retreive a row from a feature\r\n\t */\r\n\t_getRowFromFeature: function(feature) {\r\n\t\tif (this.feature2row.hasOwnProperty(feature.id)) {\r\n\t\t\tvar $row = this.feature2row[feature.id];\r\n\t\t\treturn $row;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tHide browses for the given features\r\n\t */\r\n\thideBrowses: function(features) {\r\n\t\tif (!this.$table) return;\r\n\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tvar $row = this._getRowFromFeature(features[i]);\r\n\t\t\tif ($row) { \r\n\t\t\t\t$row.find('.browse-visibility-checkbox')\r\n\t\t\t\t\t.addClass('ui-icon-checkbox-off')\r\n\t\t\t\t\t.removeClass('ui-icon-checkbox-on');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tShow browses for the given features\r\n\t */\r\n\tshowBrowses: function(features) {\r\n\t\tif (!this.$table) return;\r\n\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tvar $row = this._getRowFromFeature(features[i]);\r\n\t\t\tif ($row) { \r\n\t\t\t\t$row.find('.browse-visibility-checkbox')\r\n\t\t\t\t\t.removeClass('ui-icon-checkbox-off')\r\n\t\t\t\t\t.addClass('ui-icon-checkbox-on');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Update selection checkbox state for the given features\r\n\t * based on \"selection\" property of current <FeatureCollection>\r\n\t */\r\n\tupdateSelection: function(features) {\r\n\t\tif (!this.$table) return;\r\n\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\t\t\tvar $row = this._getRowFromFeature(features[i]);\r\n\r\n\t\t\tif ( $row && this.model.selection.indexOf(features[i]) >= 0 ) {\r\n\t\t\t\t// Feature is seleceted\r\n\t\t\t\t$row.find('.table-view-checkbox')\r\n\t\t\t\t\t.addClass('ui-icon-checkbox-on')\r\n\t\t\t\t\t.removeClass('ui-icon-checkbox-off');\r\n\t\t\t} else {\r\n\t\t\t\t// Feature isn't selected\r\n\t\t\t\t$row.find('.table-view-checkbox')\r\n\t\t\t\t\t.removeClass('ui-icon-checkbox-on')\r\n\t\t\t\t\t.addClass('ui-icon-checkbox-off');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Clear data\r\n\t */\r\n\tclear: function() {\r\n\t\tif (this.$table) {\r\n\t\t\tthis.$table.html('<div class=\"table-nodata\">No data found</div>');\r\n\r\n\t\t\tthis.rowsData = [];\r\n\t\t\tthis.hasExpandableRows = false;\r\n\r\n\t\t\t// Reset the number of non-empty cells\r\n\t\t\tfor (var i = 0; i < this.columnDefs.length; i++) {\r\n\t\t\t\tthis.columnDefs[i].numValidCell = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tCreate row data for the given feature\r\n\t */\r\n\tcreateRowData: function(feature, parentRowData) {\r\n\r\n\t\tvar isExpandable = false;\r\n\t\tvar hasGraticules = false;\r\n\t\tvar links = Configuration.getMappedProperty(feature, \"links\", null);\r\n\t\tif (links) {\r\n\t\t\t// Is interferometric search\r\n\t\t\tisExpandable = Boolean(_.find(links, function(link) {\r\n\t\t\t\treturn link['@rel'] == \"related\" && link['@title'] == \"interferometry\";\r\n\t\t\t}));\r\n\t\t\thasGraticules |= Boolean(Configuration.getMappedProperty(feature, \"virtualProductUrl\", null));\r\n\t\t\tisExpandable |= hasGraticules;\r\n\t\t}\r\n\r\n\t\tvar cleanedId = String(feature.id).replace(/\\W/g,'_'); // Id without special characters\r\n\t\tvar rowData = {\r\n\t\t\tfeature: feature,\r\n\t\t\tcellData: [],\r\n\t\t\tisExpandable: isExpandable ? !parentRowData : false,\r\n\t\t\tisExpanded: this.model.children[cleanedId] ? true : false,\r\n\t\t\thasGraticules: hasGraticules,\r\n\t\t\tisCheckable: (parentRowData && parentRowData.hasGraticules ? false : true),\r\n\t\t\tchildFc: this.model.children[cleanedId],\r\n\t\t\tchildren: [],\r\n\t\t\tisLoading: false\r\n\t\t};\r\n\r\n\t\tvar columns = this.columnDefs;\r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tvar d = Configuration.getFromPath(feature, columns[j].mData);\r\n\t\t\trowData.cellData.push(d);\r\n\t\t\tif (d) {\r\n\t\t\t\tcolumns[j].numValidCell++;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rowData;\r\n\t},\r\n\r\n\t/**\r\n\t * Add data \r\n\t */\r\n\taddData: function(features, model, parentRowData) {\r\n\r\n\t\tif (features.length > 0) {\r\n\t\t\t\r\n\t\t\tvar hasGraticules = false;\r\n\t\t\tfor (var i = 0; i < features.length; i++) {\t\t\t\t\r\n\t\t\t\tvar feature = features[i];\r\n\t\t\t\tvar rowData = this.createRowData(feature, parentRowData);\r\n\t\t\t\thasGraticules |= rowData.hasGraticules;\r\n\r\n\t\t\t\tif ( rowData.childFc ) {\r\n\t\t\t\t\tfor ( var j=0; j<rowData.childFc.features.length; j++ ) {\r\n\t\t\t\t\t\tvar childFeature = rowData.childFc.features[j];\r\n\t\t\t\t\t\tvar childRowData = this.createRowData( childFeature, rowData );\r\n\t\t\t\t\t\tchildRowData.parent = rowData;\r\n\t\t\t\t\t\trowData.children.push(childRowData);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parentRowData) {\r\n\t\t\t\t\tparentRowData.children.push(rowData);\r\n\t\t\t\t\trowData.parent = parentRowData;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.rowsData.push(rowData);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Interferometric mode or dataset containins graticules\r\n\t\t\tif (DataSetSearch.get(\"mode\") != \"Simple\" || hasGraticules) {\r\n\t\t\t\tthis.hasExpandableRows = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.visibleRowsData = this.rowsData.slice(0);\r\n\r\n\t\t\tif ( !parentRowData ) {\r\n\t\t\t\tthis.buildTable();\r\n\t\t\t\tthis.buildTableContent();\r\n\t\t\t} else {\r\n\t\t\t\t// Update children only\r\n\t\t\t\tvar $row = this._getRowFromFeature(parentRowData.feature);\r\n\t\t\t\tthis.updateChildren(parentRowData, $row);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif ( parentRowData ) {\r\n\t\t\t\tvar $row = this._getRowFromFeature(parentRowData.feature);\r\n\t\t\t\t$('<tr><td></td><td></td><td colspan=\"' + this.columnDefs.length + '\">No data found</td></tr>').insertAfter($row);\r\n\t\t\t} else if ( this.$table ) {\r\n\t\t\t\tthis.$table.html('<div class=\"table-nodata\">No data found</div>');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Remove data from the view\r\n\t */\r\n\tremoveData: function(features) {\r\n\r\n\t\tvar rows = this.$table.find(\"tbody tr\");\r\n\t\tfor (var i = 0; i < features.length; i++) {\r\n\r\n\t\t\tvar $row = this._getRowFromFeature(features[i]);\r\n\t\t\tif ($row) {\r\n\t\t\t\t$row.remove();\r\n\r\n\t\t\t\tfor (var n = 0; n < this.visibleRowsData.length; n++) {\r\n\t\t\t\t\tif (this.visibleRowsData[n].feature == features[i]) {\r\n\t\t\t\t\t\tthis.visibleRowsData.splice(n, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var n = 0; n < this.rowsData.length; n++) {\r\n\t\t\t\tif (this.rowsData[n].feature == features[i]) {\r\n\t\t\t\t\tthis.rowsData.splice(n, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Filter data\r\n\t */\r\n\tfilterData: function(val) {\r\n\r\n\t\t// Store previously visible rows to compute the newly hidden/shown features\r\n\t\tvar previouslyVisibleRows = this.visibleRowsData.splice(0);\r\n\r\n\t\t// Reconstruct visible rows data after filtering\r\n\t\tthis.visibleRowsData = [];\r\n\t\tfor (var i = 0; i < this.rowsData.length; i++) {\r\n\r\n\t\t\tvar match = false;\r\n\t\t\tfor (var j = 0; !match && j < this.rowsData[i].cellData.length; j++) {\r\n\t\t\t\tmatch = String(this.rowsData[i].cellData[j]).search(val) >= 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (match) {\r\n\t\t\t\tthis.visibleRowsData.push(this.rowsData[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Show/Hide filtered features on map\r\n\t\tvar rowsToShow = _.difference(this.visibleRowsData, previouslyVisibleRows);\r\n\t\tvar rowsToHide = _.difference(previouslyVisibleRows, this.visibleRowsData);\r\n\t\tthis.model.showFeatures(_.map(rowsToShow, 'feature'));\r\n\t\tthis.model.hideFeatures(_.map(rowsToHide, 'feature'));\r\n\r\n\t\t// Finally build the content\r\n\t\tthis.buildTableContent();\r\n\t},\r\n\r\n\t/**\r\n\t * Sort data\r\n\t */\r\n\tsortData: function(columnIndex, order) {\r\n\r\n\t\tif (order == \"original\") {\r\n\t\t\tthis.visibleRowsData = this.rowsData.slice(0);\r\n\t\t} else {\r\n\t\t\tthis.visibleRowsData.sort(function(row1, row2) {\r\n\t\t\t\tif (row1.cellData[columnIndex] == row2.cellData[columnIndex]) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else if (row1.cellData[columnIndex] < row2.cellData[columnIndex]) {\r\n\t\t\t\t\treturn (order == \"asc\") ? -1 : 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (order == \"asc\") ? 1 : -1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.buildTableContent();\r\n\t},\r\n\r\n\t/**\r\n\t *\tCreate children feature collection for the given row data\r\n\t */\r\n\tcreateChildrenFeatureCollection: function(rowData) {\r\n\r\n\t\tvar $el;\r\n\t\tvar child = this.model.createChild(rowData.feature.id);\r\n\r\n\t\t// Add \"loading\" label on start\r\n\t\tthis.listenTo(child, 'startLoading', function(fc) {\r\n\t\t\tthis.$el.find(\".child_of_\"+ child.id).remove();\r\n\t\t\t// Find element after which add 'loading'\r\n\t\t\t$el = this._getRowFromFeature(rowData.feature);\r\n\r\n\t\t\tvar $loading = $('<tr class=\"loadingChildren\">\\\r\n\t\t\t\t<td></td>\\\r\n\t\t\t\t<td></td>\\\r\n\t\t\t\t<td colspan=\"' + this.columnDefs.length + '\"><span class=\"\"><img style=\"max-width: 20px; margin: 5px 0px;\" src=\"../css/images/ajax-loader.gif\"/></span></td>\\\r\n\t\t\t</tr>').insertAfter($el);\r\n\t\t\trowData.isLoading = true;\r\n\t\t});\r\n\r\n\t\t// Add features to table\r\n\t\tthis.listenTo(child, 'add:features', function(features) {\r\n\t\t\t$el.next('.loadingChildren').remove();\r\n\t\t\trowData.isLoading = false;\r\n\t\t\tif ( !rowData.isExpanded || !features )\r\n\t\t\t\treturn;\r\n\r\n\t\t\tthis.addData(features, this.model, rowData);\r\n\t\t});\r\n\r\n\t\t// Add \"error message\"\r\n\t\tthis.listenTo(child, 'error:features', function(url) {\r\n\t\t\trowData.isLoading = false;\r\n\t\t\tif ( !rowData.isExpanded )\r\n\t\t\t\treturn;\r\n\t\t\t$el.next('.loadingChildren').remove();\r\n\t\t\t$('<tr>\\\r\n\t\t\t\t<td></td>\\\r\n\t\t\t\t<td></td>\\\r\n\t\t\t\t<td colspan=\"' + this.columnDefs.length + '\">Error while loading</td>\\\r\n\t\t\t</tr>').insertAfter($el);\r\n\t\t});\r\n\r\n\t\t// Reset features\r\n\t\tthis.listenTo(child, 'reset:features', function(fc) {\r\n\t\t\trowData.children.length = 0;\r\n\t\t});\r\n\t\tvar self = this;\r\n\t\tthis.listenTo(child, \"highlightFeatures\", function(features) {\r\n\t\t\t_allHighlights = _allHighlights.concat(features);\r\n\t\t\tself.triggerHighlightFeature();\r\n\t\t});\r\n\t\tthis.listenTo(child, \"selectFeatures\", this.updateSelection);\r\n\t\tthis.listenTo(child, \"unselectFeatures\", this.updateSelection);\r\n\r\n\t\t// Attach to rowData\r\n\t\trowData.childFc = child;\r\n\t},\r\n\r\n\t/**\r\n\t *\tUpate child (expanded) view\r\n\t */\r\n\tupdateChildren: function(rowData, $row) {\r\n\t\t$row.siblings('.child_of_'+ rowData.childFc.id).remove();\r\n\t\t$row.siblings('.paging_child_of_'+ rowData.childFc.id).remove();\r\n\r\n\t\tif ( rowData.children.length > 0 ) {\r\n\t\t\tfor (var n = 0; n < rowData.children.length; n++) {\r\n\t\t\t\tthis._createRow(rowData.children[n], $row, {\r\n\t\t\t\t\tclassName: \"child_of_\"+ rowData.childFc.id,\r\n\t\t\t\t\tisChild: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._createPagination( rowData, $row );\r\n\t\t} else {\r\n\t\t\t$('<tr><td></td><td></td><td colspan=\"' + this.columnDefs.length + '\">No data found</td></tr>').insertAfter($row);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t *\tUpdate the existing row with the given rowData\r\n\t */\r\n\t_updateRow: function(rowData, $row) {\r\n\r\n\t\tvar content = '';\r\n\t\t// Manage expand\r\n\t\tif (this.hasExpandableRows) {\r\n\r\n\t\t\tif (rowData.isExpandable) {\r\n\t\t\t\tif (rowData.isExpanded) {\r\n\t\t\t\t\tcontent += '<td><span class=\"table-view-expand ui-icon ui-icon-minus \"></span></td>';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontent += '<td><span class=\"table-view-expand ui-icon ui-icon-plus \"></span></td>';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcontent += '<td></td>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar checkedClass = 'ui-icon-checkbox-off'; // By default\r\n\t\t// Take into account the previous state of input\r\n\t\tif ($row.find(\".table-view-checkbox\").length > 0 && $row.find(\".table-view-checkbox\").hasClass(\"ui-icon-checkbox-on\")) {\r\n\t\t\tcheckedClass = 'ui-icon-checkbox-on';\r\n\t\t}\r\n\r\n\t\t// Layer selection checkbox\r\n\t\tvar checkboxVisibility = (rowData.isCheckable ? \"inline-block\" : \"none\");\r\n\t\tcontent += '<td><span style=\"display:'+ checkboxVisibility +'\" class=\"table-view-checkbox ui-icon '+ checkedClass +'\"></span></td>';\r\n\r\n\t\t// Layer browse visibility checkbox\r\n\t\tvar browseVisibilityClass = rowData.feature._browseShown ? \"ui-icon-checkbox-on\" : \"ui-icon-checkbox-off\";\r\n\t\tcontent += '<td><span class=\"browse-visibility-checkbox ui-icon '+ browseVisibilityClass + '\"></span></td>';\r\n\r\n\t\tfor (var j = 0; j < rowData.cellData.length; j++) {\r\n\r\n\t\t\tif (this.columnDefs[j].visible && this.columnDefs[j].numValidCell > 0) {\r\n\t\t\t\t// Check if column has some specific classes\r\n\t\t\t\tvar classes = null;\r\n\t\t\t\tif (this.columnDefs[j].getClasses) {\r\n\t\t\t\t\tclasses = this.columnDefs[j].getClasses(rowData.feature);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar cellDataColumn = rowData.cellData[j];\r\n\t\t\t\tif (classes && cellDataColumn) {\r\n\t\t\t\t\tif ( classes == \"downloadOptions\" ) {\r\n\t\t\t\t\t\tvar doIndex = cellDataColumn.indexOf(\"ngEO_DO\");\r\n\t\t\t\t\t\tif ( doIndex >= 0 )\r\n\t\t\t\t\t\t\tcellDataColumn = cellDataColumn.substr( doIndex+8 ).replace(/,(\\w)/g,\", $1\"); // Just add whitespace between properties\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tcellDataColumn = \"No download options\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent += '<td title=\"'+ cellDataColumn +'\" class=\"' + classes + '\">' + cellDataColumn + '</td>';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontent += '<td title=\"'+ cellDataColumn +'\">' + cellDataColumn + '</td>';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t$row.html(content);\r\n\r\n\t\tvar browses = Configuration.getMappedProperty(rowData.feature, \"browses\");\r\n\t\tif ( browses && browses.length > 1 ) {\r\n\t\t\t$row.find('.browse-visibility-checkbox').after('<span title=\"Multiple browse management\" class=\"multipleBrowse\"></span>');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Create a row given rowData\r\n\t */\r\n\t_createRow: function(rowData, $body, options) {\r\n\t\t// Update from options\r\n\t\tvar className = null;\r\n\t\tvar isChild = false;\r\n\t\tif ( options ) {\r\n\t\t\tclassName = options.className;\r\n\t\t\tisChild = options.isChild;\r\n\t\t}\r\n\r\n\t\tvar $row = $('<tr '+ (className ? 'class=\"'+ className + '\"' : \"\") +'></tr>');\r\n\t\tthis._updateRow(rowData, $row);\r\n\t\tif ( isChild ) {\r\n\t\t\t$row = $row.insertAfter($body);\r\n\t\t} else {\r\n\t\t\t$row = $row.appendTo($body);\r\n\t\t}\r\n\t\t$row.data('internal', rowData);\r\n\t\tthis.feature2row[rowData.feature.id] = $row;\r\n\t},\r\n\r\n\t/**\r\n\t *\tCreate pagination for children elements\r\n\t */\r\n\t_createPagination: function(rowData, $body) {\r\n\r\n\t\tvar $lastChild = $body.nextAll('.child_of_'+ rowData.childFc.id +':last');\r\n\t\t// Incremental pagination\r\n\t\t// if ( rowData.childFc.currentPage != rowData.childFc.lastPage ) {\r\n\t\t// \t$('<tr class=\"paging_child_of_'+ rowData.childFc.id +'\"><td></td><td></td>\\\r\n\t\t// \t\t<td colspan=\"' + this.columnDefs.length + '\">\\\r\n\t\t// \t\t\t<div class=\"paging\">\\\r\n\t\t// \t\t\t\t<a class=\"loadMore\" data-iconpos=\"notext\" data-icon=\"plus\" data-role=\"button\" data-mini=\"true\" data-inline=\"true\">Load more</a>\\\r\n\t\t// \t\t\t</div>\\\r\n\t\t// \t\t</td>\\\r\n\t\t// \t   </tr>')\r\n\t\t// \t\t.insertAfter($lastChild)\r\n\t\t// \t\t.trigger(\"create\")\r\n\t\t// \t\t.find('.paging')\r\n\t\t// \t\t\t.data(\"internal\", rowData);\r\n\t\t// }\r\n\t\t\r\n\t\t// Next/Prev pagination\r\n\t\tif ( rowData.childFc.totalResults > rowData.childFc.countPerPage ) {\r\n\r\n\t\t\tvar $pagination = $('<tr class=\"paging_child_of_'+ rowData.childFc.id +'\"><td></td><td></td>\\\r\n\t\t\t\t<td colspan=\"' + this.columnDefs.length + '\">\\\r\n\t\t\t\t</td>\\\r\n\t\t\t   </tr>')\r\n\t\t\t\t.insertAfter($lastChild);\r\n\r\n\t\t\tvar pagination = new Pagination({\r\n\t\t\t\tmodel: rowData.childFc,\r\n\t\t\t\tel: $pagination.find(\"td:last\")\r\n\t\t\t});\r\n\t\t\tpagination.render();\r\n\r\n\t\t\t$pagination.trigger(\"create\");\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Build table content from data\r\n\t */\r\n\tbuildTableContent: function() {\r\n\t\tvar $body = this.$table.find('tbody');\r\n\t\t$body.empty();\r\n\r\n\t\tthis.feature2row = {};\r\n\r\n\t\tfor (var i = 0; i < this.visibleRowsData.length; i++) {\r\n\r\n\t\t\tvar rowData = this.visibleRowsData[i];\r\n\t\t\tthis._createRow(rowData, $body);\r\n\r\n\t\t\tif (rowData.isExpanded) {\r\n\t\t\t\tvar $row = this.feature2row[rowData.feature.id];\r\n\t\t\t\tthis.updateChildren(rowData, $row);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateFixedHeader();\r\n\t\tthis.updateSelection(this.model.selection);\r\n\t\t// TODO: Make this view dependent on model only ...\r\n\t\t// FIXME: check if hereafter commented line is really needed\r\n\t\t// _allHighlights = _allHighlights.concat(this.model.highlights);\r\n\t\tthis.triggerHighlightFeature();\r\n\t},\r\n\r\n\t/**\r\n\t * Update fixed header\r\n\t */\r\n\tupdateFixedHeader: function() {\r\n\t\tif (this.$table) {\r\n\t\t\tvar $tableHeader = this.$el.find('.table-header');\r\n\t\t\t// Reinit min width of every \"td/th\" before computing the real width\r\n\t\t\t$tableHeader.css('margin-right', 0).end()\r\n\t\t\t\t.find('th').css('min-width',\"\");\r\n\t\t\tthis.$table\r\n\t\t\t\t.find('colgroup').remove().end()\r\n\t\t\t\t.find('thead').show().end()\r\n\t\t\t\t.find('td').css('min-width', \"\");\r\n\t\t\tthis.$headerTable.find('colgroup').remove();\r\n\t\t\t\r\n\t\t\t// Compute actual col-width per th\r\n\t\t\tvar self = this;\r\n\t\t\tvar colWidths = this.$table.find(\"tr:first\").children().map(function(index) {\r\n\t\t\t\tvar headerWidth = self.$table.find(\"th:nth-child(\"+(index+1)+\")\").outerWidth();\r\n\t\t\t\treturn $(this).outerWidth() > headerWidth ? $(this).outerWidth : headerWidth;\r\n\t\t\t});\r\n\r\n\t\t\t// Create COLGROUP\r\n\t\t\tvar $colgroup = $(\"<colgroup></colgroup>\");\r\n\t\t\tvar colSumWidth = _.reduce(colWidths, function(sum, w) { return sum+w;}, 0);\r\n\t\t\tvar hasSlider = colSumWidth > $(window).width() - 1;\r\n\t\t\tfor ( var i=0; i<colWidths.length; i++ ) {\r\n\t\t\t\tif ( hasSlider ) {\r\n\t\t\t\t\t// Set min-width since it forces table to be wider than window --> show slider\r\n\t\t\t\t\t$tableHeader.find('th:nth-child('+(i+1)+')')\r\n\t\t\t\t\t\t.css('min-width', colWidths[i]);\r\n\t\t\t\t\tthis.$table.find('td:nth-child('+(i+1)+')')\r\n\t\t\t\t\t\t.css('min-width', colWidths[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$colgroup.append(\"<col width=\" + colWidths[i] + \">\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSlider ) {\r\n\t\t\t\tthis.$el.find('.table-view').removeClass(\"fullscreenWidth\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.$el.find('.table-view').addClass(\"fullscreenWidth\");\r\n\t\t\t\t// Copy table COLGROUP to grid head and grid foot\r\n\t\t\t\t$colgroup\r\n\t\t\t\t\t.insertBefore(this.$table.find('thead'))\r\n\t\t\t\t\t.clone()\r\n\t\t\t\t\t.insertBefore(this.$headerTable.find('thead'));\r\n\t\t\t}\r\n\r\n\t\t\tthis.$table.find('thead').hide();\r\n\t\t\tvar diffWidth = this.$headerTable.width() - this.$table.width();\r\n\t\t\t$tableHeader.css('margin-right', diffWidth);\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Show the table\r\n\t */\r\n\tshow: function() {\r\n\t\tthis.$el.show();\r\n\t\tif (this.rowsData.length > 0) {\r\n\t\t\tthis.updateFixedHeader();\r\n\t\t}\r\n\t\t\r\n\t\t// Scroll to the most recent product if selected\r\n\t\tvar selectedRows = this.$el.find('.row_selected');\r\n\t\tif ( selectedRows.length ) {\r\n\t\t\tvar mostRecentRow = _.max(selectedRows, function(row) {\r\n\t\t\t\tvar feature = $(row).data('internal').feature;\r\n\t\t\t\treturn new Date(Configuration.getMappedProperty(feature, \"stop\"));\r\n\t\t\t});\r\n\t\t\tthis._scrollTo($(mostRecentRow));\r\n\t\t}\r\n\r\n\t\tthis.visible = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Hide the table\r\n\t */\r\n\thide: function() {\r\n\t\tthis.$el.hide();\r\n\t\tthis.visible = false;\r\n\t},\r\n\r\n\t/**\r\n\t * Build the main table element\r\n\t */\r\n\tbuildTable: function() {\r\n\r\n\t\tthis.$el.find('.inner-container').remove();\r\n\t\tthis.$el.find('.table-nodata').remove();\r\n\r\n\t\tif (this.rowsData.length == 0) {\r\n\t\t\tthis.$el.prepend('<div class=\"table-nodata\">No data to display</div>');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\t// Build the table\r\n\t\tvar $table = $('<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"table-view\"><thead></thead><tbody></tbody></table>');\r\n\t\tvar $thead = $table.find('thead');\r\n\t\tvar $row = $('<tr></tr>').appendTo($thead);\r\n\t\tvar columns = this.columnDefs;\r\n\t\tif (this.hasExpandableRows) {\r\n\t\t\t$row.append('<th></th>');\r\n\t\t}\r\n\t\t$row.append('<th><span class=\"table-view-checkbox ui-icon ui-icon-checkbox-off \"></th>');\r\n\t\t$row.append('<th class=\"browseVisibility\"></th>');\r\n\r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tif (columns[j].visible && columns[j].numValidCell > 0) {\r\n\t\t\t\t$row.append('<th>' + columns[j].sTitle + '</th>');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar $container = $('<div class=\"inner-container\"></div>').prependTo(this.$el);\r\n\t\t// Override the tine rectangle on scrollbar crossing bars\r\n\t\t$('<div style=\"position: absolute;background: #292929;bottom: 0px;right: 0px;width: 15px; height: 16px;z-index: 1;\"></div>').appendTo($container);\r\n\r\n\t\tthis.$table = $table.prependTo($container);\r\n\r\n\t\t// Build the fixed header table\r\n\t\tthis.$table.wrap('<div class=\"table-content\"></div>');\r\n\t\tthis.$headerTable = this.$table.clone().prependTo($container).wrap('<div class=\"table-header\"></div>');\r\n\t\tthis.$table.find('thead').hide();\r\n\r\n\r\n\t\t// Update header as well\r\n\t\tthis.$el.find(\".table-content\").scroll(function () {\r\n\t\t\t$(\".table-header\").offset({ left: -1*this.scrollLeft });\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Render the table\r\n\t */\r\n\trender: function() {\r\n\r\n\t\t// Update column definition  with the visible flag and a counter to know the number of non-empty cell\r\n\t\tfor (var i = 0; i < this.columnDefs.length; i++) {\r\n\t\t\tthis.columnDefs[i].visible = i < this.maxVisibleColumns;\r\n\t\t\tthis.columnDefs[i].numValidCell = 0;\r\n\t\t}\r\n\r\n\t\tthis.visible = false;\r\n\t\tthis.featuresToAdd = [];\r\n\t\t$(window).resize($.proxy(this.updateFixedHeader, this));\r\n\r\n\t\tthis.buildTable();\r\n\r\n\t\tthis.renderFooter();\r\n\r\n\t\tthis.$el.trigger('create');\r\n\t},\r\n\r\n\t/**\r\n\t * Render footer\r\n\t */\r\n\trenderFooter: function() {\r\n\t\tvar footer = $('<div id=\"tableFooter\" class=\"ui-grid-a\"></div>')\r\n\t\t\t.append('<div class=\"table-filter ui-block-a\">\\\r\n\t\t\t\t\t\t<div data-role=\"fieldcontain\" style=\"width: 300px; display: inline-block; top: 5px; vertical-align: super;\" >\\\r\n\t\t\t\t\t\t\t<label for=\"filterTableInput\">Filter table:</label>\\\r\n\t\t\t\t\t\t\t<input id=\"filterTableInput\" data-inline=\"true\" data-mini=\"true\" type=\"text\"/>\\\r\n\t\t\t\t\t\t</div>\\\r\n\t\t\t\t\t\t<button data-mini=\"true\" data-inline=\"true\" id=\"table-columns-button\">Columns</button>\\\r\n\t\t\t\t\t</div>\\\r\n\t\t\t\t\t<div class=\"ui-block-b table-rightButtons\"><div data-role=\"fieldcontain\"></div></div>');\r\n\t\tvar $buttonContainer = $(footer).find(\".table-rightButtons [data-role='fieldcontain']\");\r\n\r\n\t\tif (this.renderButtons)\r\n\t\t\tthis.renderButtons($buttonContainer);\r\n\r\n\t\tthis.$el.append(footer).trigger(\"create\");\r\n\t\t// HACK jQm Firefox: Display text-input on the same level as label & button\r\n\t\tthis.$el.find('.table-filter .ui-input-text').css(\"vertical-align\",\"middle\");\r\n\t},\r\n\r\n\t/**\r\n\t *\tRefresh method\r\n\t */\r\n\trefresh: function() {\r\n\t\tthis.updateFixedHeader();\r\n\t}\r\n});\r\n\r\nmodule.exports = TableView;","var Configuration = require('configuration');\r\n\r\n/**\r\n * Tabs module\r\n */\r\n$.widget(\"ngeo.tabs\", {\r\n\r\n\t// default options\r\n\toptions: {\r\n\r\n\t\t// A theme to be applied, added as a class on the whole tab\r\n\t\ttheme: \"a\",\r\n\r\n\t\t// callbacks\r\n\t\tactivate: null\r\n\t},\r\n\r\n\t// the constructor\r\n\t_create: function() {\r\n\t\tthis.element.find('ul').addClass('ui-tabs').addClass('ui-tabs-' + this.options.theme);\r\n\t\tvar self = this;\r\n\r\n\t\t// Style the link and div content\r\n\t\t// Also store the active link and div\r\n\t\tthis.element.find('a')\r\n\t\t\t.each(function(index) {\r\n\t\t\t\tvar $div = self.element.find($(this).attr('href'));\r\n\t\t\t\t$div.addClass('ui-body-'+Configuration.localConfig.theme+' ui-tabs-content');\r\n\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tself.activeLink = $(this);\r\n\t\t\t\t\tself.activeLink.parent().addClass('ui-tabs-active');\r\n\t\t\t\t\tself.activeDiv = $div.show();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$div.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t// Show/hide when a tab is clicked\r\n\t\tthis.element.find('a').click(function(event) {\r\n\r\n\t\t\tvar href = $(this).attr('href');\r\n\t\t\tself.activeLink.parent().removeClass('ui-tabs-active');\r\n\t\t\tself.activeDiv.hide();\r\n\t\t\t$(this).parent().addClass('ui-tabs-active');\r\n\t\t\t$(href).show();\r\n\r\n\t\t\tself.activeDiv = $(href);\r\n\t\t\tself.activeLink = $(this);\r\n\r\n\t\t\tif (self.options.activate) {\r\n\t\t\t\tself.options.activate(self.activeLink, self.activeDiv);\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault();\r\n\t\t});\r\n\r\n\t},\r\n\r\n\r\n\t// events bound via _bind are removed automatically\r\n\t// revert other modifications here\r\n\t_destroy: function() {\r\n\t\t// TODO \r\n\t},\r\n\r\n\t// _setOptions is called with a hash of all options that are changing\r\n\t// always refresh when changing options\r\n\t_setOptions: function() {\r\n\t\t// in 1.9 would use _superApply\r\n\t\t$.Widget.prototype._setOptions.apply(this, arguments);\r\n\t\t// TODO : refresh?\r\n\t},\r\n\r\n\t// _setOption is called for each individual option that is changing\r\n\t_setOption: function(key, value) {\r\n\t\t// TODO : manage options?\r\n\t\t// in 1.9 would use _super\r\n\t\t$.Widget.prototype._setOption.call(this, key, value);\r\n\t}\r\n});","/**\r\n * Toolbar module\r\n */\r\n\r\nrequire('ui/widget');\r\n\r\n// The function to define the Widget module\r\n$.widget(\"ngeo.toolbar\", {\r\n\t// default options\r\n\toptions: {\r\n\t\tonlyIcon: false,\r\n\t\twithNumber: false,\r\n\t\tlarge: false\t// Large button option (actually used for bottom panel)\r\n\t},\r\n\r\n\t// the constructor\r\n\t_create: function() {\r\n\r\n\t\tthis._build(this.element.find('command'));\r\n\r\n\t\tif (this.options.onlyIcon) {\r\n\t\t\tthis.element.find('.tb-separator').css({\r\n\t\t\t\theight: '24px'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// build some elements\r\n\t_build: function(elements) {\r\n\r\n\t\tif ( this.options.large ) {\r\n\r\n\t\t\t// Large buttons in bottom panel\r\n\t\t\t// TODO: create dedicated module\r\n\t\t\telements.addClass('tb-elt');\r\n\r\n\t\t\tif ( $(this).data('notext') ) {\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$('<div>\\\r\n\t\t\t\t   </div>').appendTo(elements);\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\telements.each(function() {\r\n\t\t\t\tif ( $(this).data('notext') ) {\r\n\t\t\t\t\t$(this).append('<div class=\"tb-button\"><div class=\"tb-icon\"></div></div>');\r\n\t\t\t\t\t$(this).attr('title', $(this).attr('label'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(this).append('<div class=\"tb-large-button\">\\\r\n\t\t\t\t\t\t\t   \t\t\t<div class=\"btnHeader\"><span class=\"datasetName\">'+$(this).attr('label')+'</span></div>\\\r\n\t\t\t\t\t   \t\t\t\t\t<div class=\"btnFooter\"><span class=\"layerVisibility ui-icon ui-icon-checkbox-on\"></span><span class=\"nbFeatures\">No search done</span></div>\\\r\n\t\t\t\t   \t\t\t\t\t</div>');\r\n\t\t\t\t\tif ( $(this).data('icon') ) {\r\n\t\t\t\t\t\t$(this).find('.btnHeader').prepend('<img class=\"datasetTypeIcon\" src=\"../images/'+$(this).data('icon')+'.png\" />');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\t// Wrap the image with a div to display both image and text below, and then add class for button styling\r\n\t\t\telements\r\n\t\t\t\t.addClass('tb-elt');\r\n\r\n\t\t\t// Add text for each element\r\n\t\t\tvar $tbButton = $('<div class=\"tb-button\"><div class=\"tb-icon\"></div></div>').appendTo(elements);\r\n\r\n\t\t\tif ( this.options.withNumber ) {\r\n\t\t\t\t$tbButton.find('.tb-icon').append('<span class=\"nbFeatures\"></span>');\r\n\t\t\t}\r\n\r\n\t\t\t// Take care to set the data-help on the tb-icon (now the element to receive click)\r\n\t\t\telements.each(function() {\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\tvar contextHelp = $this.data('help');\r\n\t\t\t\tif (contextHelp) {\r\n\t\t\t\t\t// Add it the current element\r\n\t\t\t\t\t$this.attr('data-help', contextHelp);\r\n\r\n\t\t\t\t\t// OLD code to store data-help on tb-icon, discarded by NGEO-2003\r\n\t\t\t\t\t// Add it to the lowest element\r\n\t\t\t\t\t// $this.find('.tb-icon').attr('data-help', contextHelp);\r\n\t\t\t\t\t// Remove it from the container, not needed anymore\r\n\t\t\t\t\t// $this.removeAttr('data-help');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.options.onlyIcon) {\r\n\t\t\t\telements.attr('title', function() {\r\n\t\t\t\t\treturn $(this).attr('label');\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\telements.append(function() {\r\n\t\t\t\t\tvar $elt;\r\n\t\t\t\t\t// Even if globally toolbar have labels, some elements still could be without label\r\n\t\t\t\t\t// Ex: \"Table\" .. check if data-notext exist and add title only\r\n\t\t\t\t\tif ( $(this).data('notext') ) {\r\n\t\t\t\t\t\t$(this).attr('title', $(this).attr('label'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$elt = $('<div class=\"tb-text\"> ' + $(this).attr('label') + '</div>');\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $elt;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// refresh the toolbar\r\n\trefresh: function() {\r\n\r\n\t\tthis._build(this.element.find('command:not(.tb-elt)'));\r\n\r\n\t},\r\n\r\n\t// events bound via _bind are removed automatically\r\n\t// revert other modifications here\r\n\t_destroy: function() {\r\n\t\t// TODO\r\n\t},\r\n\r\n\t// _setOptions is called with a hash of all options that are changing\r\n\t// always refresh when changing options\r\n\t_setOptions: function() {\r\n\t\t// in 1.9 would use _superApply\r\n\t\t$.Widget.prototype._setOptions.apply(this, arguments);\r\n\t\t// TODO : refresh?\r\n\t},\r\n\r\n\t// _setOption is called for each individual option that is changing\r\n\t_setOption: function(key, value) {\r\n\t\t// TODO : manage options?\r\n\t\t// in 1.9 would use _super\r\n\t\t$.Widget.prototype._setOption.call(this, key, value);\r\n\t}\r\n});","var Configuration = require('configuration');\r\n\r\nvar modalScreen = $('<div class=\"ui-popup-screen ui-overlay-a ui-screen-hidden\"></div>').appendTo('.ui-page-active');\r\n$._ngeoOpenedWidgets = [];\r\n\r\n/**\r\n * An element to block user interactions when opening a modal pop-up\r\n */\r\n$.widget(\"ngeo.ngeowidget\", {\r\n\r\n\t// default options\r\n\toptions: {\r\n\t\ttitle: \"\",\r\n\t\tactivator: null,\r\n\t\teffectDuration: 1000,\r\n\t\tmodal: true,\r\n\t\tclosable: true,\r\n\r\n\t\t// callbacks\r\n\t\tshow: null,\r\n\t\thide: null\r\n\t},\r\n\r\n\t// the constructor\r\n\t_create: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Style the container\r\n\t\tthis.element.addClass(\"widget-content\");\r\n\t\t// Use jQM to style the content\r\n\t\tthis.element.addClass(\"ui-body-\"+Configuration.localConfig.theme);\r\n\r\n\t\t// Wrap with the parent div for widget\r\n\t\tthis.element.wrap(\"<div class='widget'/>\");\r\n\t\tthis.parentElement = this.element.parent();\r\n\r\n\t\tif (this.options.title) {\r\n\t\t\tthis.parentElement.prepend('<h2>' + this.options.title + '</h2>');\r\n\t\t}\r\n\r\n\t\t// Activator\r\n\t\tif (this.options.activator) {\r\n\t\t\tthis.activator = $(this.options.activator);\r\n\t\t\tthis.activator.click(function() {\r\n\t\t\t\tif (self.activator.hasClass('toggle')) {\r\n\t\t\t\t\tself.hide();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else if (this.options.closable) {\r\n\t\t\t$('<a class=\"ui-btn-right\" data-iconpos=\"notext\" data-icon=\"delete\" data-theme=\"a\"\\\r\n\t\t\t\tdata-role=\"button\" data-corners=\"true\" data-shadow=\"true\"\\\r\n\t\t\t\tdata-iconshadow=\"true\" data-wrapperels=\"span\" title=\"Close\">')\r\n\t\t\t\t.prependTo(this.parentElement)\r\n\t\t\t\t.click($.proxy(this.hide, this));\r\n\t\t}\r\n\r\n\t\tthis.parentElement\r\n\t\t\t.trigger(\"create\")\r\n\t\t\t.hide();\r\n\r\n\t\tif (this.activator) {\r\n\t\t\t// Add Arrow\r\n\t\t\tthis.arrow = $(\"<div class='widget-arrow-up' />\")\r\n\t\t\t\t.insertBefore(this.parentElement);\r\n\t\t\tthis.arrow.hide();\r\n\t\t}\r\n\t\t$._ngeoOpenedWidgets.push(this);\r\n\t},\r\n\r\n\tupdate: function() {\r\n\t\tvar $tb = $('#mapToolbar');\r\n\t\tvar toolbarBottom = $tb.position().top + $tb.outerHeight();\r\n\t\tif (this.activator) {\r\n\t\t\t// Recompute position for widget\r\n\t\t\tvar posActivator = this.activator.offset();\r\n\t\t\tvar widgetLeft = Math.max(10, posActivator.left - (this.parentElement.outerWidth() / 2) + (this.activator.outerWidth() / 2));\r\n\t\t\tthis.parentElement\r\n\t\t\t\t.css('left', widgetLeft);\r\n\t\t\tthis.arrow\r\n\t\t\t\t.css('left', posActivator.left);\r\n\r\n\t\t\t// Set top position for both arrow and widget content\r\n\t\t\t// Top position never changed because toolbar and activator are fixed... even with a window resize!\r\n\t\t\tthis.parentElement\r\n\t\t\t\t.css('top', toolbarBottom + this.arrow.outerHeight());\r\n\t\t\tthis.arrow\r\n\t\t\t\t.css('top', toolbarBottom);\r\n\t\t} else {\r\n\t\t\tvar widgetLeft = this.options.left || ($(window).width() / 2 - (this.parentElement.outerWidth() / 2));\r\n\t\t\tvar widgetTop = this.options.top || (($(window).height() - toolbarBottom) / 2 - (this.parentElement.outerHeight() / 2));\r\n\t\t\tthis.parentElement.css({\r\n\t\t\t\ttop: widgetTop,\r\n\t\t\t\tleft: widgetLeft\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\tshow: function() {\r\n\t\t// Automatically hide other popup\r\n\t\tfor (var i = 0; i < $._ngeoOpenedWidgets.length; i++) {\r\n\t\t\tif ($._ngeoOpenedWidgets[i] != this) {\r\n\t\t\t\t$._ngeoOpenedWidgets[i].hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.update();\r\n\t\tthis.parentElement.fadeIn(this.options.durationEffect);\r\n\t\tif (this.arrow) this.arrow.fadeIn(this.options.durationEffect);\r\n\r\n\t\tif (this.activator) {\r\n\t\t\tthis.activator.addClass('toggle');\r\n\t\t} else if (this.options.modal) {\r\n\t\t\tmodalScreen.removeClass('ui-screen-hidden');\r\n\t\t\tmodalScreen.addClass('in');\r\n\t\t}\r\n\r\n\t\tif (this.options.show) {\r\n\t\t\tthis.options.show();\r\n\t\t}\r\n\t},\r\n\r\n\thide: function() {\r\n\t\tthis.parentElement.fadeOut(this.options.durationEffect, this.options.hide);\r\n\t\tif (this.arrow) this.arrow.fadeOut(this.options.durationEffect);\r\n\t\tif (this.activator) {\r\n\t\t\tthis.activator.removeClass('toggle');\r\n\t\t} else if (this.options.modal) {\r\n\t\t\tmodalScreen.addClass('ui-screen-hidden');\r\n\t\t\tmodalScreen.removeClass('in');\r\n\t\t}\r\n\t},\r\n\r\n\t// events bound via _bind are removed automatically\r\n\t// revert other modifications here\r\n\t_destroy: function() {\r\n\t\t// Remove from widgets array\r\n\t\tvar index = $._ngeoOpenedWidgets.indexOf(this);\r\n\t\tif (index >= 0) {\r\n\t\t\t$._ngeoOpenedWidgets.splice($._ngeoOpenedWidgets.indexOf(this), 1);\r\n\t\t}\r\n\t\t// Cleanup parent element\r\n\t\tthis.parentElement.children().not(this.element).remove();\r\n\t\t// Remove parent element\r\n\t\tthis.element.unwrap();\r\n\t\t//Remove arrow\r\n\t\tif (this.arrow) this.arrow.remove();\r\n\t},\r\n\r\n\t// _setOptions is called with a hash of all options that are changing\r\n\t// always refresh when changing options\r\n\t_setOptions: function() {\r\n\t\t// in 1.9 would use _superApply\r\n\t\t$.Widget.prototype._setOptions.apply(this, arguments);\r\n\t\t// TODO : refresh?\r\n\t},\r\n\r\n\t// _setOption is called for each individual option that is changing\r\n\t_setOption: function(key, value) {\r\n\t\t// TODO : manage options?\r\n\t\t// in 1.9 would use _super\r\n\t\t$.Widget.prototype._setOption.call(this, key, value);\r\n\t}\r\n});","var Logger = require('logger');\r\nvar Configuration = require('configuration');\r\n\r\n/**\r\n * Singleton Model for storing and retrieving user preferences\r\n *\r\n * Each plain object that will be stored in the local storage \r\n * by the current user, will have its key prefixxed by the user id\r\n * In order to allow many users save their prefs in the same \"machine/browser\"\r\n */\r\nvar UserPrefs = {\r\n    //count for the same added object\r\n    //count : 0, \r\n\r\n    /** user id to be retrieved...TODO be compliant with UM-SSO credentials*/\r\n    //userId : \"userId\",\r\n\r\n    //to avoid overwriting items in the local storage and conflicts with other applications*/\r\n    preffix: 'ngeo_',\r\n\r\n    //get the keys, use to display the stored preferences in the view\r\n    keys: Configuration.localConfig.userPrefs.keys,\r\n\r\n    /** get the string related to the given key */\r\n    get: function(key) {\r\n\r\n        if (localStorage) {\r\n            return localStorage.getItem(this.preffix + key);\r\n        } else {\r\n            //notify the user if the browser does not support local storage\r\n            Logger.warning('Your browser does not support HTML5 local storage.The preferences cannot be stored.');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Save the preferences key, value passed to the local storage\r\n     */\r\n    save: function(key, value) {\r\n\r\n        if (localStorage && (_.isString(value) || _.isBoolean(value)) && !_.isArray(value) && !_.isFunction(value)) {\r\n\r\n            var oldValue = localStorage.setItem(this.preffix + key, value);\r\n            localStorage.setItem(this.preffix + key, value);\r\n\r\n            if (this.keys.indexOf(key) == -1) {\r\n                this.keys.push(key);\r\n                this.trigger('addedPreference');\r\n            }\r\n\r\n            if (oldValue != value) {\r\n                this.trigger('addedPreference');\r\n            }\r\n        } else {\r\n            this.trigger(\"UnAllowedStorageException\", key);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Save the preferences object passed to the local storage\r\n     */\r\n    saveObject: function(key, object) {\r\n\r\n        if (_.isObject(localStorage) && _.isObject(object) && !_.isArray(object) && !_.isFunction(object)) {\r\n\r\n            var oldValue = localStorage.setItem(this.preffix + key);\r\n            localStorage.setItem(this.preffix + key, JSON.stringify(object));\r\n\r\n            if (this.keys.indexOf(key) == -1) {\r\n                this.keys.push(key);\r\n                this.trigger('addedPreference');\r\n            }\r\n\r\n            if (oldValue != JSON.stringify(object)) {\r\n                this.trigger('addedPreference');\r\n            }\r\n\r\n        } else {\r\n            this.trigger(\"UnAllowedStorageException\", object);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Remove all stored keys\r\n     */\r\n    reset: function() {\r\n        var self = this;\r\n        //remove stored keys\r\n        _.each(this.keys, function(key) {\r\n            var itemName = self.preffix + key;\r\n            localStorage.removeItem(itemName);\r\n            self.trigger('removedPreference', key);\r\n        });\r\n\r\n        this.keys = Configuration.localConfig.userPrefs.keys;\r\n\r\n        //this.trigger('resetPreferences');\r\n    }\r\n};\r\n\r\n// Add events method to object\r\n_.extend(UserPrefs, Backbone.Events);\r\n\r\nmodule.exports = UserPrefs;"]}